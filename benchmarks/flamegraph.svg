<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="902" onload="init(evt)" viewBox="0 0 1200 902" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:fg="http://github.com/jonhoo/inferno"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:monospace; font-size:12px }
#title { text-anchor:middle; font-size:17px; }
#matched { text-anchor:end; }
#search { text-anchor:end; opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[
        var nametype = 'Function:';
        var fontsize = 12;
        var fontwidth = 0.59;
        var xpad = 10;
        var inverted = false;
        var searchcolor = 'rgb(230,0,230)';
        var fluiddrawing = true;
        var truncate_text_right = false;
    ]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames, known_font_width;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    known_font_width = get_monospace_width(frames);
    total_samples = parseInt(frames.attributes.total_samples.value);
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[*|x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        if (!isEdge) {
            svg.removeAttribute("viewBox");
        }
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            update_text_for_elements(frames.children);

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad;
            matchedtxt.attributes.x.value = svgWidth - xpad;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes["fg:x"]) {
            var params = get_params()
            params.x = el.attributes["fg:x"].value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["fg:orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("fg:orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["fg:orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["fg:orig_" + attr].value;
    e.removeAttribute("fg:orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function get_monospace_width(frames) {
    // Given the id="frames" element, return the width of text characters if
    // this is a monospace font, otherwise return 0.
    text = find_child(frames.children[0], "text");
    originalContent = text.textContent;
    text.textContent = "!";
    bangWidth = text.getComputedTextLength();
    text.textContent = "W";
    wWidth = text.getComputedTextLength();
    text.textContent = originalContent;
    if (bangWidth === wWidth) {
        return bangWidth;
    } else {
        return 0;
    }
}
function update_text_for_elements(elements) {
    // In order to render quickly in the browser, you want to do one pass of
    // reading attributes, and one pass of mutating attributes. See
    // https://web.dev/avoid-large-complex-layouts-and-layout-thrashing/ for details.

    // Fall back to inefficient calculation, if we're variable-width font.
    // TODO This should be optimized somehow too.
    if (known_font_width === 0) {
        for (var i = 0; i < elements.length; i++) {
            update_text(elements[i]);
        }
        return;
    }

    var textElemNewAttributes = [];
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var r = find_child(e, "rect");
        var t = find_child(e, "text");
        var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
        var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
        var newX = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

        // Smaller than this size won't fit anything
        if (w < 2 * known_font_width) {
            textElemNewAttributes.push([newX, ""]);
            continue;
        }

        // Fit in full text width
        if (txt.length * known_font_width < w) {
            textElemNewAttributes.push([newX, txt]);
            continue;
        }

        var substringLength = Math.floor(w / known_font_width) - 2;
        if (truncate_text_right) {
            // Truncate the right side of the text.
            textElemNewAttributes.push([newX, txt.substring(0, substringLength) + ".."]);
            continue;
        } else {
            // Truncate the left side of the text.
            textElemNewAttributes.push([newX, ".." + txt.substring(txt.length - substringLength, txt.length)]);
            continue;
        }
    }

    console.assert(textElemNewAttributes.length === elements.length, "Resize failed, please file a bug at https://github.com/jonhoo/inferno/");

    // Now that we know new textContent, set it all in one go so we don't refresh a bazillion times.
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var values = textElemNewAttributes[i];
        var t = find_child(e, "text");
        t.attributes.x.value = values[0];
        t.textContent = values[1];
    }
}

function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * parseInt(e.attributes["fg:x"].value) / total_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / total_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, zoomed_width_samples) {
    if (e.tagName == "text") {
        var parent_x = parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value);
        e.attributes.x.value = format_percent(parent_x + (100 * 3 / frames.attributes.width.value));
    } else if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * (parseInt(e.attributes["fg:x"].value) - x) / zoomed_width_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / zoomed_width_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, zoomed_width_samples);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseInt(attr["fg:w"].value);
    var xmin = parseInt(attr["fg:x"].value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    var to_update_text = [];
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseInt(a["fg:x"].value);
        var ew = parseInt(a["fg:w"].value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                to_update_text.push(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, width);
                to_update_text.push(e);
            }
        }
    }
    update_text_for_elements(to_update_text);
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
    }
    update_text_for_elements(el);
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        // Skip over frames which are either not visible, or below the zoomed-to frame
        if (e.classList.contains("hide") || e.classList.contains("parent")) {
            continue;
        }
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseInt(rect.attributes["fg:w"].value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseInt(rect.attributes["fg:x"].value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    for (var k in keys) {
        var x = parseInt(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="902" fill="url(#background)"/><text id="title" fill="rgb(0,0,0)" x="50.0000%" y="24.00">Flame Graph</text><text id="details" fill="rgb(0,0,0)" x="10" y="885.00"> </text><text id="unzoom" class="hide" fill="rgb(0,0,0)" x="10" y="24.00">Reset Zoom</text><text id="search" fill="rgb(0,0,0)" x="1190" y="24.00">Search</text><text id="matched" fill="rgb(0,0,0)" x="1190" y="885.00"> </text><svg id="frames" x="10" width="1180" total_samples="6806"><g><title>itsi_server.bundle`&lt;tokio::task::coop::with_budget::ResetGuard as core::ops::drop::Drop&gt;::drop (3 samples, 0.04%)</title><rect x="0.0147%" y="293" width="0.0441%" height="15" fill="rgb(227,0,7)" fg:x="1" fg:w="3"/><text x="0.2647%" y="303.50"></text></g><g><title>itsi_server.bundle`tokio::runtime::driver::Driver::park_timeout (1 samples, 0.01%)</title><rect x="0.0588%" y="293" width="0.0147%" height="15" fill="rgb(217,0,24)" fg:x="4" fg:w="1"/><text x="0.3088%" y="303.50"></text></g><g><title>itsi_server.bundle`std::sys::pal::unix::time::Timespec::now (1 samples, 0.01%)</title><rect x="0.0735%" y="261" width="0.0147%" height="15" fill="rgb(221,193,54)" fg:x="5" fg:w="1"/><text x="0.3235%" y="271.50"></text></g><g><title>libsystem_c.dylib`clock_gettime (1 samples, 0.01%)</title><rect x="0.0735%" y="245" width="0.0147%" height="15" fill="rgb(248,212,6)" fg:x="5" fg:w="1"/><text x="0.3235%" y="255.50"></text></g><g><title>libsystem_kernel.dylib`mach_absolute_time (1 samples, 0.01%)</title><rect x="0.0735%" y="229" width="0.0147%" height="15" fill="rgb(208,68,35)" fg:x="5" fg:w="1"/><text x="0.3235%" y="239.50"></text></g><g><title>itsi_server.bundle`tokio::runtime::io::scheduled_io::ScheduledIo::wake (2 samples, 0.03%)</title><rect x="0.0882%" y="245" width="0.0294%" height="15" fill="rgb(232,128,0)" fg:x="6" fg:w="2"/><text x="0.3382%" y="255.50"></text></g><g><title>itsi_server.bundle`tokio::runtime::context::with_scheduler (2 samples, 0.03%)</title><rect x="0.0882%" y="229" width="0.0294%" height="15" fill="rgb(207,160,47)" fg:x="6" fg:w="2"/><text x="0.3382%" y="239.50"></text></g><g><title>itsi_server.bundle`tokio::runtime::scheduler::current_thread::Context::park (19 samples, 0.28%)</title><rect x="0.0735%" y="293" width="0.2792%" height="15" fill="rgb(228,23,34)" fg:x="5" fg:w="19"/><text x="0.3235%" y="303.50"></text></g><g><title>itsi_server.bundle`tokio::runtime::time::Driver::park_internal (19 samples, 0.28%)</title><rect x="0.0735%" y="277" width="0.2792%" height="15" fill="rgb(218,30,26)" fg:x="5" fg:w="19"/><text x="0.3235%" y="287.50"></text></g><g><title>itsi_server.bundle`tokio::runtime::io::driver::Driver::turn (18 samples, 0.26%)</title><rect x="0.0882%" y="261" width="0.2645%" height="15" fill="rgb(220,122,19)" fg:x="6" fg:w="18"/><text x="0.3382%" y="271.50"></text></g><g><title>libsystem_kernel.dylib`kevent (16 samples, 0.24%)</title><rect x="0.1175%" y="245" width="0.2351%" height="15" fill="rgb(250,228,42)" fg:x="8" fg:w="16"/><text x="0.3675%" y="255.50"></text></g><g><title>itsi_server.bundle`std::sys::pal::unix::time::Timespec::now (2 samples, 0.03%)</title><rect x="0.3673%" y="261" width="0.0294%" height="15" fill="rgb(240,193,28)" fg:x="25" fg:w="2"/><text x="0.6173%" y="271.50"></text></g><g><title>libsystem_c.dylib`clock_gettime (2 samples, 0.03%)</title><rect x="0.3673%" y="245" width="0.0294%" height="15" fill="rgb(216,20,37)" fg:x="25" fg:w="2"/><text x="0.6173%" y="255.50"></text></g><g><title>libsystem_kernel.dylib`mach_absolute_time (1 samples, 0.01%)</title><rect x="0.3820%" y="229" width="0.0147%" height="15" fill="rgb(206,188,39)" fg:x="26" fg:w="1"/><text x="0.6320%" y="239.50"></text></g><g><title>itsi_server.bundle`std::time::Instant::duration_since (1 samples, 0.01%)</title><rect x="0.3967%" y="261" width="0.0147%" height="15" fill="rgb(217,207,13)" fg:x="27" fg:w="1"/><text x="0.6467%" y="271.50"></text></g><g><title>itsi_server.bundle`tokio::runtime::context::with_scheduler (5 samples, 0.07%)</title><rect x="0.5143%" y="229" width="0.0735%" height="15" fill="rgb(231,73,38)" fg:x="35" fg:w="5"/><text x="0.7643%" y="239.50"></text></g><g><title>itsi_server.bundle`tokio::runtime::io::scheduled_io::ScheduledIo::wake (10 samples, 0.15%)</title><rect x="0.4555%" y="245" width="0.1469%" height="15" fill="rgb(225,20,46)" fg:x="31" fg:w="10"/><text x="0.7055%" y="255.50"></text></g><g><title>itsi_server.bundle`tokio::runtime::task::waker::wake_by_val (1 samples, 0.01%)</title><rect x="0.5877%" y="229" width="0.0147%" height="15" fill="rgb(210,31,41)" fg:x="40" fg:w="1"/><text x="0.8377%" y="239.50"></text></g><g><title>libdyld.dylib`tlv_get_addr (1 samples, 0.01%)</title><rect x="0.5877%" y="213" width="0.0147%" height="15" fill="rgb(221,200,47)" fg:x="40" fg:w="1"/><text x="0.8377%" y="223.50"></text></g><g><title>itsi_server.bundle`tokio::runtime::io::driver::Driver::turn (200 samples, 2.94%)</title><rect x="0.4114%" y="261" width="2.9386%" height="15" fill="rgb(226,26,5)" fg:x="28" fg:w="200"/><text x="0.6614%" y="271.50">it..</text></g><g><title>libsystem_kernel.dylib`kevent (187 samples, 2.75%)</title><rect x="0.6024%" y="245" width="2.7476%" height="15" fill="rgb(249,33,26)" fg:x="41" fg:w="187"/><text x="0.8524%" y="255.50">li..</text></g><g><title>itsi_server.bundle`tokio::runtime::io::scheduled_io::ScheduledIo::wake (1 samples, 0.01%)</title><rect x="3.3500%" y="261" width="0.0147%" height="15" fill="rgb(235,183,28)" fg:x="228" fg:w="1"/><text x="3.6000%" y="271.50"></text></g><g><title>libsystem_c.dylib`DYLD-STUB$$mach_timebase_info (1 samples, 0.01%)</title><rect x="3.3647%" y="213" width="0.0147%" height="15" fill="rgb(221,5,38)" fg:x="229" fg:w="1"/><text x="3.6147%" y="223.50"></text></g><g><title>itsi_server.bundle`std::sys::pal::unix::time::Timespec::now (4 samples, 0.06%)</title><rect x="3.3647%" y="245" width="0.0588%" height="15" fill="rgb(247,18,42)" fg:x="229" fg:w="4"/><text x="3.6147%" y="255.50"></text></g><g><title>libsystem_c.dylib`clock_gettime (4 samples, 0.06%)</title><rect x="3.3647%" y="229" width="0.0588%" height="15" fill="rgb(241,131,45)" fg:x="229" fg:w="4"/><text x="3.6147%" y="239.50"></text></g><g><title>libsystem_kernel.dylib`mach_absolute_time (3 samples, 0.04%)</title><rect x="3.3794%" y="213" width="0.0441%" height="15" fill="rgb(249,31,29)" fg:x="230" fg:w="3"/><text x="3.6294%" y="223.50"></text></g><g><title>itsi_server.bundle`tokio::runtime::time::_&lt;impl tokio::runtime::time::handle::Handle&gt;::process (5 samples, 0.07%)</title><rect x="3.3647%" y="261" width="0.0735%" height="15" fill="rgb(225,111,53)" fg:x="229" fg:w="5"/><text x="3.6147%" y="271.50"></text></g><g><title>itsi_server.bundle`tokio::runtime::time::_&lt;impl tokio::runtime::time::handle::Handle&gt;::process_at_sharded_time (1 samples, 0.01%)</title><rect x="3.4234%" y="245" width="0.0147%" height="15" fill="rgb(238,160,17)" fg:x="233" fg:w="1"/><text x="3.6734%" y="255.50"></text></g><g><title>itsi_server.bundle`tokio::runtime::time::wheel::Wheel::poll (1 samples, 0.01%)</title><rect x="3.4234%" y="229" width="0.0147%" height="15" fill="rgb(214,148,48)" fg:x="233" fg:w="1"/><text x="3.6734%" y="239.50"></text></g><g><title>itsi_server.bundle`tokio::runtime::scheduler::current_thread::Context::park_yield (211 samples, 3.10%)</title><rect x="0.3526%" y="293" width="3.1002%" height="15" fill="rgb(232,36,49)" fg:x="24" fg:w="211"/><text x="0.6026%" y="303.50">its..</text></g><g><title>itsi_server.bundle`tokio::runtime::time::Driver::park_internal (211 samples, 3.10%)</title><rect x="0.3526%" y="277" width="3.1002%" height="15" fill="rgb(209,103,24)" fg:x="24" fg:w="211"/><text x="0.6026%" y="287.50">its..</text></g><g><title>itsi_server.bundle`tokio::runtime::time::wheel::level::Level::next_expiration (1 samples, 0.01%)</title><rect x="3.4381%" y="261" width="0.0147%" height="15" fill="rgb(229,88,8)" fg:x="234" fg:w="1"/><text x="3.6881%" y="271.50"></text></g><g><title>itsi_server.bundle`tokio::runtime::scheduler::current_thread::Core::next_task (2 samples, 0.03%)</title><rect x="3.4528%" y="293" width="0.0294%" height="15" fill="rgb(213,181,19)" fg:x="235" fg:w="2"/><text x="3.7028%" y="303.50"></text></g><g><title>itsi_server.bundle`itsi_server::server::serve_strategy::acceptor::Acceptor::serve_connection::_{{closure}}::_{{closure}} (2 samples, 0.03%)</title><rect x="3.5116%" y="277" width="0.0294%" height="15" fill="rgb(254,191,54)" fg:x="239" fg:w="2"/><text x="3.7616%" y="287.50"></text></g><g><title>itsi_server.bundle`&lt;tokio::runtime::task::core::TaskIdGuard as core::ops::drop::Drop&gt;::drop (1 samples, 0.01%)</title><rect x="3.5851%" y="261" width="0.0147%" height="15" fill="rgb(241,83,37)" fg:x="244" fg:w="1"/><text x="3.8351%" y="271.50"></text></g><g><title>itsi_server.bundle`&lt;hyper::server::conn::http1::UpgradeableConnection&lt;I,S&gt; as core::future::future::Future&gt;::poll (1 samples, 0.01%)</title><rect x="3.7908%" y="229" width="0.0147%" height="15" fill="rgb(233,36,39)" fg:x="258" fg:w="1"/><text x="4.0408%" y="239.50"></text></g><g><title>itsi_server.bundle`&lt;alloc::collections::vec_deque::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::fold (2 samples, 0.03%)</title><rect x="3.9377%" y="197" width="0.0294%" height="15" fill="rgb(226,3,54)" fg:x="268" fg:w="2"/><text x="4.1877%" y="207.50"></text></g><g><title>itsi_server.bundle`&lt;http_body_util::full::Full&lt;D&gt; as http_body::Body&gt;::poll_frame (1 samples, 0.01%)</title><rect x="3.9671%" y="197" width="0.0147%" height="15" fill="rgb(245,192,40)" fg:x="270" fg:w="1"/><text x="4.2171%" y="207.50"></text></g><g><title>itsi_server.bundle`&lt;hyper::proto::h1::dispatch::Server&lt;S,hyper::body::incoming::Incoming&gt; as hyper::proto::h1::dispatch::Dispatch&gt;::recv_msg (1 samples, 0.01%)</title><rect x="3.9818%" y="197" width="0.0147%" height="15" fill="rgb(238,167,29)" fg:x="271" fg:w="1"/><text x="4.2318%" y="207.50"></text></g><g><title>itsi_server.bundle`__rdl_alloc (1 samples, 0.01%)</title><rect x="3.9965%" y="197" width="0.0147%" height="15" fill="rgb(232,182,51)" fg:x="272" fg:w="1"/><text x="4.2465%" y="207.50"></text></g><g><title>itsi_server.bundle`core::ptr::drop_in_place&lt;itsi_server::services::itsi_http_service::ItsiHttpService::handle_request::{{closure}}&gt; (1 samples, 0.01%)</title><rect x="4.0112%" y="197" width="0.0147%" height="15" fill="rgb(231,60,39)" fg:x="273" fg:w="1"/><text x="4.2612%" y="207.50"></text></g><g><title>itsi_server.bundle`http::header::map::HeaderMap&lt;T&gt;::insert (1 samples, 0.01%)</title><rect x="4.0259%" y="197" width="0.0147%" height="15" fill="rgb(208,69,12)" fg:x="274" fg:w="1"/><text x="4.2759%" y="207.50"></text></g><g><title>itsi_server.bundle`hyper::proto::h1::conn::Conn&lt;I,B,T&gt;::maybe_notify (1 samples, 0.01%)</title><rect x="4.0406%" y="197" width="0.0147%" height="15" fill="rgb(235,93,37)" fg:x="275" fg:w="1"/><text x="4.2906%" y="207.50"></text></g><g><title>itsi_server.bundle`core::ptr::drop_in_place&lt;http::header::map::HeaderMap&gt; (1 samples, 0.01%)</title><rect x="5.5686%" y="165" width="0.0147%" height="15" fill="rgb(213,116,39)" fg:x="379" fg:w="1"/><text x="5.8186%" y="175.50"></text></g><g><title>itsi_server.bundle`core::ptr::drop_in_place&lt;http::uri::Uri&gt; (1 samples, 0.01%)</title><rect x="5.5833%" y="165" width="0.0147%" height="15" fill="rgb(222,207,29)" fg:x="380" fg:w="1"/><text x="5.8333%" y="175.50"></text></g><g><title>itsi_server.bundle`http::header::map::HeaderMap&lt;T&gt;::try_with_capacity (3 samples, 0.04%)</title><rect x="5.5980%" y="165" width="0.0441%" height="15" fill="rgb(206,96,30)" fg:x="381" fg:w="3"/><text x="5.8480%" y="175.50"></text></g><g><title>itsi_server.bundle`&lt;hyper::proto::h1::dispatch::Server&lt;S,hyper::body::incoming::Incoming&gt; as hyper::proto::h1::dispatch::Dispatch&gt;::recv_msg (15 samples, 0.22%)</title><rect x="5.4805%" y="181" width="0.2204%" height="15" fill="rgb(218,138,4)" fg:x="373" fg:w="15"/><text x="5.7305%" y="191.50"></text></g><g><title>itsi_server.bundle`http::request::Parts::new (4 samples, 0.06%)</title><rect x="5.6421%" y="165" width="0.0588%" height="15" fill="rgb(250,191,14)" fg:x="384" fg:w="4"/><text x="5.8921%" y="175.50"></text></g><g><title>itsi_server.bundle`&lt;hyper_util::rt::tokio::TokioSleep as core::future::future::Future&gt;::poll (1 samples, 0.01%)</title><rect x="5.7009%" y="181" width="0.0147%" height="15" fill="rgb(239,60,40)" fg:x="388" fg:w="1"/><text x="5.9509%" y="191.50"></text></g><g><title>itsi_server.bundle`&lt;itsi_server::server::middleware_stack::middlewares::ruby_app::RubyApp as itsi_server::server::middleware_stack::middlewares::MiddlewareLayer&gt;::after (6 samples, 0.09%)</title><rect x="5.7890%" y="165" width="0.0882%" height="15" fill="rgb(206,27,48)" fg:x="394" fg:w="6"/><text x="6.0390%" y="175.50"></text></g><g><title>itsi_server.bundle`http::header::name::HdrName::from_bytes (8 samples, 0.12%)</title><rect x="5.9359%" y="149" width="0.1175%" height="15" fill="rgb(225,35,8)" fg:x="404" fg:w="8"/><text x="6.1859%" y="159.50"></text></g><g><title>itsi_server.bundle`http::header::name::parse_hdr (4 samples, 0.06%)</title><rect x="5.9947%" y="133" width="0.0588%" height="15" fill="rgb(250,213,24)" fg:x="408" fg:w="4"/><text x="6.2447%" y="143.50"></text></g><g><title>itsi_server.bundle`&lt;itsi_server::server::middleware_stack::middlewares::ruby_app::RubyApp as itsi_server::server::middleware_stack::middlewares::MiddlewareLayer&gt;::after::_{{closure}} (13 samples, 0.19%)</title><rect x="5.8772%" y="165" width="0.1910%" height="15" fill="rgb(247,123,22)" fg:x="400" fg:w="13"/><text x="6.1272%" y="175.50"></text></g><g><title>itsi_server.bundle`http::header::name::parse_hdr (1 samples, 0.01%)</title><rect x="6.0535%" y="149" width="0.0147%" height="15" fill="rgb(231,138,38)" fg:x="412" fg:w="1"/><text x="6.3035%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`rack_get_thread_index (1 samples, 0.01%)</title><rect x="6.0682%" y="133" width="0.0147%" height="15" fill="rgb(231,145,46)" fg:x="413" fg:w="1"/><text x="6.3182%" y="143.50"></text></g><g><title>itsi_server.bundle`&lt;itsi_server::server::middleware_stack::middlewares::ruby_app::RubyApp as itsi_server::server::middleware_stack::middlewares::MiddlewareLayer&gt;::after (5 samples, 0.07%)</title><rect x="6.0682%" y="165" width="0.0735%" height="15" fill="rgb(251,118,11)" fg:x="413" fg:w="5"/><text x="6.3182%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (5 samples, 0.07%)</title><rect x="6.0682%" y="149" width="0.0735%" height="15" fill="rgb(217,147,25)" fg:x="413" fg:w="5"/><text x="6.3182%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`small_malloc_should_clear (4 samples, 0.06%)</title><rect x="6.0829%" y="133" width="0.0588%" height="15" fill="rgb(247,81,37)" fg:x="414" fg:w="4"/><text x="6.3329%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`small_malloc_from_free_list (3 samples, 0.04%)</title><rect x="6.0976%" y="117" width="0.0441%" height="15" fill="rgb(209,12,38)" fg:x="415" fg:w="3"/><text x="6.3476%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`small_free_list_add_ptr (1 samples, 0.01%)</title><rect x="6.1269%" y="101" width="0.0147%" height="15" fill="rgb(227,1,9)" fg:x="417" fg:w="1"/><text x="6.3769%" y="111.50"></text></g><g><title>libsystem_malloc.dylib`_szone_free (1 samples, 0.01%)</title><rect x="6.1416%" y="165" width="0.0147%" height="15" fill="rgb(248,47,43)" fg:x="418" fg:w="1"/><text x="6.3916%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`free_small (3 samples, 0.04%)</title><rect x="6.1563%" y="165" width="0.0441%" height="15" fill="rgb(221,10,30)" fg:x="419" fg:w="3"/><text x="6.4063%" y="175.50"></text></g><g><title>itsi_server.bundle`&lt;itsi_server::server::middleware_stack::middleware::Middleware as itsi_server::server::middleware_stack::middlewares::MiddlewareLayer&gt;::after::_{{closure}} (37 samples, 0.54%)</title><rect x="5.7155%" y="181" width="0.5436%" height="15" fill="rgb(210,229,1)" fg:x="389" fg:w="37"/><text x="5.9655%" y="191.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (4 samples, 0.06%)</title><rect x="6.2004%" y="165" width="0.0588%" height="15" fill="rgb(222,148,37)" fg:x="422" fg:w="4"/><text x="6.4504%" y="175.50"></text></g><g><title>itsi_server.bundle`&lt;itsi_server::server::middleware_stack::middlewares::ruby_app::RubyApp as itsi_server::server::middleware_stack::middlewares::MiddlewareLayer&gt;::before (2 samples, 0.03%)</title><rect x="6.3180%" y="165" width="0.0294%" height="15" fill="rgb(234,67,33)" fg:x="430" fg:w="2"/><text x="6.5680%" y="175.50"></text></g><g><title>itsi_server.bundle`DYLD-STUB$$pthread_mutex_unlock (3 samples, 0.04%)</title><rect x="8.0664%" y="149" width="0.0441%" height="15" fill="rgb(247,98,35)" fg:x="549" fg:w="3"/><text x="8.3164%" y="159.50"></text></g><g><title>itsi_server.bundle`__rdl_alloc (1 samples, 0.01%)</title><rect x="8.1105%" y="149" width="0.0147%" height="15" fill="rgb(247,138,52)" fg:x="552" fg:w="1"/><text x="8.3605%" y="159.50"></text></g><g><title>itsi_server.bundle`event_listener::Event&lt;T&gt;::inner (1 samples, 0.01%)</title><rect x="8.1693%" y="133" width="0.0147%" height="15" fill="rgb(213,79,30)" fg:x="556" fg:w="1"/><text x="8.4193%" y="143.50"></text></g><g><title>itsi_server.bundle`DYLD-STUB$$pthread_mutex_lock (1 samples, 0.01%)</title><rect x="8.1986%" y="117" width="0.0147%" height="15" fill="rgb(246,177,23)" fg:x="558" fg:w="1"/><text x="8.4486%" y="127.50"></text></g><g><title>itsi_server.bundle`event_listener::sys::Inner&lt;T&gt;::notify (43 samples, 0.63%)</title><rect x="8.2133%" y="117" width="0.6318%" height="15" fill="rgb(230,62,27)" fg:x="559" fg:w="43"/><text x="8.4633%" y="127.50"></text></g><g><title>itsi_server.bundle`event_listener::Task::wake (43 samples, 0.63%)</title><rect x="8.2133%" y="101" width="0.6318%" height="15" fill="rgb(216,154,8)" fg:x="559" fg:w="43"/><text x="8.4633%" y="111.50"></text></g><g><title>itsi_server.bundle`parking::Inner::unpark (43 samples, 0.63%)</title><rect x="8.2133%" y="85" width="0.6318%" height="15" fill="rgb(244,35,45)" fg:x="559" fg:w="43"/><text x="8.4633%" y="95.50"></text></g><g><title>libsystem_kernel.dylib`__psynch_cvsignal (43 samples, 0.63%)</title><rect x="8.2133%" y="69" width="0.6318%" height="15" fill="rgb(251,115,12)" fg:x="559" fg:w="43"/><text x="8.4633%" y="79.50"></text></g><g><title>itsi_server.bundle`async_channel::Sender&lt;T&gt;::try_send (56 samples, 0.82%)</title><rect x="8.1252%" y="149" width="0.8228%" height="15" fill="rgb(240,54,50)" fg:x="553" fg:w="56"/><text x="8.3752%" y="159.50"></text></g><g><title>itsi_server.bundle`event_listener::sys::_&lt;impl event_listener::Inner&lt;T&gt;&gt;::notify (52 samples, 0.76%)</title><rect x="8.1840%" y="133" width="0.7640%" height="15" fill="rgb(233,84,52)" fg:x="557" fg:w="52"/><text x="8.4340%" y="143.50"></text></g><g><title>itsi_server.bundle`std::sys::pal::unix::sync::mutex::Mutex::lock (7 samples, 0.10%)</title><rect x="8.8451%" y="117" width="0.1029%" height="15" fill="rgb(207,117,47)" fg:x="602" fg:w="7"/><text x="9.0951%" y="127.50"></text></g><g><title>libsystem_pthread.dylib`_pthread_mutex_firstfit_lock_slow (2 samples, 0.03%)</title><rect x="8.9186%" y="101" width="0.0294%" height="15" fill="rgb(249,43,39)" fg:x="607" fg:w="2"/><text x="9.1686%" y="111.50"></text></g><g><title>libsystem_kernel.dylib`__psynch_mutexwait (2 samples, 0.03%)</title><rect x="8.9186%" y="85" width="0.0294%" height="15" fill="rgb(209,38,44)" fg:x="607" fg:w="2"/><text x="9.1686%" y="95.50"></text></g><g><title>itsi_server.bundle`core::ptr::drop_in_place&lt;itsi_server::ruby_types::itsi_http_response::ItsiHttpResponse::build::{{closure}}&gt; (4 samples, 0.06%)</title><rect x="8.9480%" y="149" width="0.0588%" height="15" fill="rgb(236,212,23)" fg:x="609" fg:w="4"/><text x="9.1980%" y="159.50"></text></g><g><title>itsi_server.bundle`&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.01%)</title><rect x="9.0215%" y="85" width="0.0147%" height="15" fill="rgb(242,79,21)" fg:x="614" fg:w="1"/><text x="9.2715%" y="95.50"></text></g><g><title>itsi_server.bundle`bytes::bytes_mut::shared_v_drop (1 samples, 0.01%)</title><rect x="9.0215%" y="69" width="0.0147%" height="15" fill="rgb(211,96,35)" fg:x="614" fg:w="1"/><text x="9.2715%" y="79.50"></text></g><g><title>libsystem_malloc.dylib`free_small (1 samples, 0.01%)</title><rect x="9.0215%" y="53" width="0.0147%" height="15" fill="rgb(253,215,40)" fg:x="614" fg:w="1"/><text x="9.2715%" y="63.50"></text></g><g><title>itsi_server.bundle`core::ptr::drop_in_place&lt;itsi_server::ruby_types::itsi_http_response::ItsiHttpResponse&gt; (3 samples, 0.04%)</title><rect x="9.0068%" y="149" width="0.0441%" height="15" fill="rgb(211,81,21)" fg:x="613" fg:w="3"/><text x="9.2568%" y="159.50"></text></g><g><title>itsi_server.bundle`alloc::sync::Arc&lt;T,A&gt;::drop_slow (2 samples, 0.03%)</title><rect x="9.0215%" y="133" width="0.0294%" height="15" fill="rgb(208,190,38)" fg:x="614" fg:w="2"/><text x="9.2715%" y="143.50"></text></g><g><title>itsi_server.bundle`core::ptr::drop_in_place&lt;http::request::Parts&gt; (2 samples, 0.03%)</title><rect x="9.0215%" y="117" width="0.0294%" height="15" fill="rgb(235,213,38)" fg:x="614" fg:w="2"/><text x="9.2715%" y="127.50"></text></g><g><title>itsi_server.bundle`core::ptr::drop_in_place&lt;http::header::map::HeaderMap&gt; (2 samples, 0.03%)</title><rect x="9.0215%" y="101" width="0.0294%" height="15" fill="rgb(237,122,38)" fg:x="614" fg:w="2"/><text x="9.2715%" y="111.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (1 samples, 0.01%)</title><rect x="9.0361%" y="85" width="0.0147%" height="15" fill="rgb(244,218,35)" fg:x="615" fg:w="1"/><text x="9.2861%" y="95.50"></text></g><g><title>itsi_server.bundle`core::ptr::drop_in_place&lt;itsi_server::server::size_limited_incoming::SizeLimitedIncoming&lt;hyper::body::incoming::Incoming&gt;&gt; (1 samples, 0.01%)</title><rect x="9.0508%" y="149" width="0.0147%" height="15" fill="rgb(240,68,47)" fg:x="616" fg:w="1"/><text x="9.3008%" y="159.50"></text></g><g><title>itsi_server.bundle`event_listener::Event&lt;T&gt;::inner (1 samples, 0.01%)</title><rect x="9.0655%" y="149" width="0.0147%" height="15" fill="rgb(210,16,53)" fg:x="617" fg:w="1"/><text x="9.3155%" y="159.50"></text></g><g><title>itsi_server.bundle`http::header::map::HeaderMap&lt;T&gt;::get (6 samples, 0.09%)</title><rect x="9.0802%" y="149" width="0.0882%" height="15" fill="rgb(235,124,12)" fg:x="618" fg:w="6"/><text x="9.3302%" y="159.50"></text></g><g><title>itsi_server.bundle`http::response::Parts::new (1 samples, 0.01%)</title><rect x="9.1684%" y="149" width="0.0147%" height="15" fill="rgb(224,169,11)" fg:x="624" fg:w="1"/><text x="9.4184%" y="159.50"></text></g><g><title>itsi_server.bundle`http_body_util::combinators::box_body::BoxBody&lt;D,E&gt;::new (9 samples, 0.13%)</title><rect x="9.1831%" y="149" width="0.1322%" height="15" fill="rgb(250,166,2)" fg:x="625" fg:w="9"/><text x="9.4331%" y="159.50"></text></g><g><title>itsi_server.bundle`regex_automata::dfa::onepass::DFA::try_search_slots (2 samples, 0.03%)</title><rect x="9.4182%" y="117" width="0.0294%" height="15" fill="rgb(242,216,29)" fg:x="641" fg:w="2"/><text x="9.6682%" y="127.50"></text></g><g><title>itsi_server.bundle`regex_automata::dfa::onepass::DFA::try_search_slots_imp (3 samples, 0.04%)</title><rect x="9.4475%" y="117" width="0.0441%" height="15" fill="rgb(230,116,27)" fg:x="643" fg:w="3"/><text x="9.6975%" y="127.50"></text></g><g><title>itsi_server.bundle`DYLD-STUB$$bzero (1 samples, 0.01%)</title><rect x="9.4916%" y="101" width="0.0147%" height="15" fill="rgb(228,99,48)" fg:x="646" fg:w="1"/><text x="9.7416%" y="111.50"></text></g><g><title>itsi_server.bundle`regex_automata::dfa::onepass::Cache::explicit_slots (1 samples, 0.01%)</title><rect x="9.5063%" y="101" width="0.0147%" height="15" fill="rgb(253,11,6)" fg:x="647" fg:w="1"/><text x="9.7563%" y="111.50"></text></g><g><title>itsi_server.bundle`regex_automata::dfa::onepass::DFA::try_search_slots_imp (14 samples, 0.21%)</title><rect x="9.5210%" y="101" width="0.2057%" height="15" fill="rgb(247,143,39)" fg:x="648" fg:w="14"/><text x="9.7710%" y="111.50"></text></g><g><title>itsi_server.bundle`&lt;regex_automata::meta::strategy::Core as regex_automata::meta::strategy::Strategy&gt;::search_slots (22 samples, 0.32%)</title><rect x="9.4182%" y="133" width="0.3232%" height="15" fill="rgb(236,97,10)" fg:x="641" fg:w="22"/><text x="9.6682%" y="143.50"></text></g><g><title>itsi_server.bundle`regex_automata::meta::strategy::Core::search_slots_nofail (17 samples, 0.25%)</title><rect x="9.4916%" y="117" width="0.2498%" height="15" fill="rgb(233,208,19)" fg:x="646" fg:w="17"/><text x="9.7416%" y="127.50"></text></g><g><title>libsystem_platform.dylib`_platform_memset (1 samples, 0.01%)</title><rect x="9.7267%" y="101" width="0.0147%" height="15" fill="rgb(216,164,2)" fg:x="662" fg:w="1"/><text x="9.9767%" y="111.50"></text></g><g><title>itsi_server.bundle`DYLD-STUB$$malloc (1 samples, 0.01%)</title><rect x="9.7414%" y="133" width="0.0147%" height="15" fill="rgb(220,129,5)" fg:x="663" fg:w="1"/><text x="9.9914%" y="143.50"></text></g><g><title>itsi_server.bundle`regex_automata::meta::regex::Regex::create_captures (1 samples, 0.01%)</title><rect x="9.7561%" y="133" width="0.0147%" height="15" fill="rgb(242,17,10)" fg:x="664" fg:w="1"/><text x="10.0061%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (2 samples, 0.03%)</title><rect x="9.7708%" y="133" width="0.0294%" height="15" fill="rgb(242,107,0)" fg:x="665" fg:w="2"/><text x="10.0208%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate_outlined (1 samples, 0.01%)</title><rect x="9.8002%" y="133" width="0.0147%" height="15" fill="rgb(251,28,31)" fg:x="667" fg:w="1"/><text x="10.0502%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (2 samples, 0.03%)</title><rect x="9.8149%" y="133" width="0.0294%" height="15" fill="rgb(233,223,10)" fg:x="668" fg:w="2"/><text x="10.0649%" y="143.50"></text></g><g><title>itsi_server.bundle`regex::regex::string::Regex::captures_at (40 samples, 0.59%)</title><rect x="9.3153%" y="149" width="0.5877%" height="15" fill="rgb(215,21,27)" fg:x="634" fg:w="40"/><text x="9.5653%" y="159.50"></text></g><g><title>libsystem_platform.dylib`_platform_memset (4 samples, 0.06%)</title><rect x="9.8443%" y="133" width="0.0588%" height="15" fill="rgb(232,23,21)" fg:x="670" fg:w="4"/><text x="10.0943%" y="143.50"></text></g><g><title>itsi_server.bundle`regex_automata::util::captures::Captures::all (1 samples, 0.01%)</title><rect x="9.9030%" y="149" width="0.0147%" height="15" fill="rgb(244,5,23)" fg:x="674" fg:w="1"/><text x="10.1530%" y="159.50"></text></g><g><title>itsi_server.bundle`&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (3 samples, 0.04%)</title><rect x="9.9177%" y="133" width="0.0441%" height="15" fill="rgb(226,81,46)" fg:x="675" fg:w="3"/><text x="10.1677%" y="143.50"></text></g><g><title>itsi_server.bundle`regex_automata::util::captures::Captures::get_group_by_name (4 samples, 0.06%)</title><rect x="9.9177%" y="149" width="0.0588%" height="15" fill="rgb(247,70,30)" fg:x="675" fg:w="4"/><text x="10.1677%" y="159.50"></text></g><g><title>itsi_server.bundle`core::hash::BuildHasher::hash_one (1 samples, 0.01%)</title><rect x="9.9618%" y="133" width="0.0147%" height="15" fill="rgb(212,68,19)" fg:x="678" fg:w="1"/><text x="10.2118%" y="143.50"></text></g><g><title>libsystem_c.dylib`DYLD-STUB$$mach_absolute_time (1 samples, 0.01%)</title><rect x="9.9765%" y="117" width="0.0147%" height="15" fill="rgb(240,187,13)" fg:x="679" fg:w="1"/><text x="10.2265%" y="127.50"></text></g><g><title>libsystem_c.dylib`clock_gettime_nsec_np (1 samples, 0.01%)</title><rect x="9.9912%" y="117" width="0.0147%" height="15" fill="rgb(223,113,26)" fg:x="680" fg:w="1"/><text x="10.2412%" y="127.50"></text></g><g><title>libsystem_kernel.dylib`mach_timebase_info (1 samples, 0.01%)</title><rect x="9.9912%" y="101" width="0.0147%" height="15" fill="rgb(206,192,2)" fg:x="680" fg:w="1"/><text x="10.2412%" y="111.50"></text></g><g><title>itsi_server.bundle`std::sys::pal::unix::time::Timespec::now (14 samples, 0.21%)</title><rect x="9.9765%" y="149" width="0.2057%" height="15" fill="rgb(241,108,4)" fg:x="679" fg:w="14"/><text x="10.2265%" y="159.50"></text></g><g><title>libsystem_c.dylib`clock_gettime (14 samples, 0.21%)</title><rect x="9.9765%" y="133" width="0.2057%" height="15" fill="rgb(247,173,49)" fg:x="679" fg:w="14"/><text x="10.2265%" y="143.50"></text></g><g><title>libsystem_kernel.dylib`mach_absolute_time (12 samples, 0.18%)</title><rect x="10.0059%" y="117" width="0.1763%" height="15" fill="rgb(224,114,35)" fg:x="681" fg:w="12"/><text x="10.2559%" y="127.50"></text></g><g><title>itsi_server.bundle`tokio::sync::notify::Notified::poll_notified (18 samples, 0.26%)</title><rect x="10.1822%" y="149" width="0.2645%" height="15" fill="rgb(245,159,27)" fg:x="693" fg:w="18"/><text x="10.4322%" y="159.50"></text></g><g><title>libdyld.dylib`tlv_get_addr (1 samples, 0.01%)</title><rect x="10.4467%" y="149" width="0.0147%" height="15" fill="rgb(245,172,44)" fg:x="711" fg:w="1"/><text x="10.6967%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`DYLD-STUB$$_platform_bzero (1 samples, 0.01%)</title><rect x="10.4614%" y="149" width="0.0147%" height="15" fill="rgb(236,23,11)" fg:x="712" fg:w="1"/><text x="10.7114%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (6 samples, 0.09%)</title><rect x="10.4761%" y="149" width="0.0882%" height="15" fill="rgb(205,117,38)" fg:x="713" fg:w="6"/><text x="10.7261%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate_from_block (1 samples, 0.01%)</title><rect x="10.5642%" y="149" width="0.0147%" height="15" fill="rgb(237,72,25)" fg:x="719" fg:w="1"/><text x="10.8142%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate_outlined (10 samples, 0.15%)</title><rect x="10.5789%" y="149" width="0.1469%" height="15" fill="rgb(244,70,9)" fg:x="720" fg:w="10"/><text x="10.8289%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_find_block_and_allocate (7 samples, 0.10%)</title><rect x="10.6230%" y="133" width="0.1029%" height="15" fill="rgb(217,125,39)" fg:x="723" fg:w="7"/><text x="10.8730%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate_from_block (1 samples, 0.01%)</title><rect x="10.7111%" y="117" width="0.0147%" height="15" fill="rgb(235,36,10)" fg:x="729" fg:w="1"/><text x="10.9611%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (2 samples, 0.03%)</title><rect x="10.7258%" y="149" width="0.0294%" height="15" fill="rgb(251,123,47)" fg:x="730" fg:w="2"/><text x="10.9758%" y="159.50"></text></g><g><title>itsi_server.bundle`&lt;itsi_server::server::middleware_stack::middlewares::ruby_app::RubyApp as itsi_server::server::middleware_stack::middlewares::MiddlewareLayer&gt;::before::_{{closure}} (302 samples, 4.44%)</title><rect x="6.3473%" y="165" width="4.4373%" height="15" fill="rgb(221,13,13)" fg:x="432" fg:w="302"/><text x="6.5973%" y="175.50">itsi_..</text></g><g><title>libsystem_platform.dylib`_platform_memset (2 samples, 0.03%)</title><rect x="10.7552%" y="149" width="0.0294%" height="15" fill="rgb(238,131,9)" fg:x="732" fg:w="2"/><text x="11.0052%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`small_malloc_should_clear (1 samples, 0.01%)</title><rect x="10.7846%" y="149" width="0.0147%" height="15" fill="rgb(211,50,8)" fg:x="734" fg:w="1"/><text x="11.0346%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`rack_get_thread_index (2 samples, 0.03%)</title><rect x="10.7993%" y="133" width="0.0294%" height="15" fill="rgb(245,182,24)" fg:x="735" fg:w="2"/><text x="11.0493%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`small_free_list_add_ptr (1 samples, 0.01%)</title><rect x="10.8434%" y="101" width="0.0147%" height="15" fill="rgb(242,14,37)" fg:x="738" fg:w="1"/><text x="11.0934%" y="111.50"></text></g><g><title>itsi_server.bundle`&lt;itsi_server::server::middleware_stack::middlewares::ruby_app::RubyApp as itsi_server::server::middleware_stack::middlewares::MiddlewareLayer&gt;::before (6 samples, 0.09%)</title><rect x="10.7846%" y="165" width="0.0882%" height="15" fill="rgb(246,228,12)" fg:x="734" fg:w="6"/><text x="11.0346%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (5 samples, 0.07%)</title><rect x="10.7993%" y="149" width="0.0735%" height="15" fill="rgb(213,55,15)" fg:x="735" fg:w="5"/><text x="11.0493%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`small_malloc_should_clear (3 samples, 0.04%)</title><rect x="10.8287%" y="133" width="0.0441%" height="15" fill="rgb(209,9,3)" fg:x="737" fg:w="3"/><text x="11.0787%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`small_malloc_from_free_list (3 samples, 0.04%)</title><rect x="10.8287%" y="117" width="0.0441%" height="15" fill="rgb(230,59,30)" fg:x="737" fg:w="3"/><text x="11.0787%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`small_free_list_remove_ptr_no_clear (1 samples, 0.01%)</title><rect x="10.8581%" y="101" width="0.0147%" height="15" fill="rgb(209,121,21)" fg:x="739" fg:w="1"/><text x="11.1081%" y="111.50"></text></g><g><title>itsi_server.bundle`DYLD-STUB$$malloc (5 samples, 0.07%)</title><rect x="10.8728%" y="165" width="0.0735%" height="15" fill="rgb(220,109,13)" fg:x="740" fg:w="5"/><text x="11.1228%" y="175.50"></text></g><g><title>itsi_server.bundle`DYLD-STUB$$memcpy (3 samples, 0.04%)</title><rect x="10.9462%" y="165" width="0.0441%" height="15" fill="rgb(232,18,1)" fg:x="745" fg:w="3"/><text x="11.1962%" y="175.50"></text></g><g><title>itsi_server.bundle`__rdl_alloc (2 samples, 0.03%)</title><rect x="10.9903%" y="165" width="0.0294%" height="15" fill="rgb(215,41,42)" fg:x="748" fg:w="2"/><text x="11.2403%" y="175.50"></text></g><g><title>itsi_server.bundle`__rdl_dealloc (4 samples, 0.06%)</title><rect x="11.0197%" y="165" width="0.0588%" height="15" fill="rgb(224,123,36)" fg:x="750" fg:w="4"/><text x="11.2697%" y="175.50"></text></g><g><title>itsi_server.bundle`async_channel::Sender&lt;T&gt;::try_send (1 samples, 0.01%)</title><rect x="11.0785%" y="165" width="0.0147%" height="15" fill="rgb(240,125,3)" fg:x="754" fg:w="1"/><text x="11.3285%" y="175.50"></text></g><g><title>itsi_server.bundle`regex_automata::util::captures::Captures::get_group_by_name (1 samples, 0.01%)</title><rect x="11.0932%" y="165" width="0.0147%" height="15" fill="rgb(205,98,50)" fg:x="755" fg:w="1"/><text x="11.3432%" y="175.50"></text></g><g><title>itsi_server.bundle`tokio::sync::notify::Notified::poll_notified (3 samples, 0.04%)</title><rect x="11.1078%" y="165" width="0.0441%" height="15" fill="rgb(205,185,37)" fg:x="756" fg:w="3"/><text x="11.3578%" y="175.50"></text></g><g><title>libsystem_kernel.dylib`__ulock_wake (1 samples, 0.01%)</title><rect x="11.1519%" y="165" width="0.0147%" height="15" fill="rgb(238,207,15)" fg:x="759" fg:w="1"/><text x="11.4019%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`_free (2 samples, 0.03%)</title><rect x="11.1666%" y="165" width="0.0294%" height="15" fill="rgb(213,199,42)" fg:x="760" fg:w="2"/><text x="11.4166%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (3 samples, 0.04%)</title><rect x="11.1960%" y="165" width="0.0441%" height="15" fill="rgb(235,201,11)" fg:x="762" fg:w="3"/><text x="11.4460%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (1 samples, 0.01%)</title><rect x="11.2401%" y="165" width="0.0147%" height="15" fill="rgb(207,46,11)" fg:x="765" fg:w="1"/><text x="11.4901%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`_szone_free (1 samples, 0.01%)</title><rect x="11.2548%" y="165" width="0.0147%" height="15" fill="rgb(241,35,35)" fg:x="766" fg:w="1"/><text x="11.5048%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`small_free_list_add_ptr (6 samples, 0.09%)</title><rect x="11.3576%" y="149" width="0.0882%" height="15" fill="rgb(243,32,47)" fg:x="773" fg:w="6"/><text x="11.6076%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`free_small (18 samples, 0.26%)</title><rect x="11.2695%" y="165" width="0.2645%" height="15" fill="rgb(247,202,23)" fg:x="767" fg:w="18"/><text x="11.5195%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`small_free_list_find_by_ptr (6 samples, 0.09%)</title><rect x="11.4458%" y="149" width="0.0882%" height="15" fill="rgb(219,102,11)" fg:x="779" fg:w="6"/><text x="11.6958%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (6 samples, 0.09%)</title><rect x="11.5339%" y="165" width="0.0882%" height="15" fill="rgb(243,110,44)" fg:x="785" fg:w="6"/><text x="11.7839%" y="175.50"></text></g><g><title>itsi_server.bundle`&lt;itsi_server::server::middleware_stack::middleware::Middleware as itsi_server::server::middleware_stack::middlewares::MiddlewareLayer&gt;::before::_{{closure}} (455 samples, 6.69%)</title><rect x="6.2592%" y="181" width="6.6853%" height="15" fill="rgb(222,74,54)" fg:x="426" fg:w="455"/><text x="6.5092%" y="191.50">itsi_serv..</text></g><g><title>libsystem_platform.dylib`_platform_memmove (90 samples, 1.32%)</title><rect x="11.6221%" y="165" width="1.3224%" height="15" fill="rgb(216,99,12)" fg:x="791" fg:w="90"/><text x="11.8721%" y="175.50"></text></g><g><title>itsi_server.bundle`&lt;itsi_server::server::middleware_stack::middlewares::ruby_app::RubyApp as itsi_server::server::middleware_stack::middlewares::MiddlewareLayer&gt;::after::_{{closure}} (1 samples, 0.01%)</title><rect x="12.9445%" y="181" width="0.0147%" height="15" fill="rgb(226,22,26)" fg:x="881" fg:w="1"/><text x="13.1945%" y="191.50"></text></g><g><title>itsi_server.bundle`&lt;itsi_server::server::middleware_stack::middlewares::ruby_app::RubyApp as itsi_server::server::middleware_stack::middlewares::MiddlewareLayer&gt;::before::_{{closure}} (1 samples, 0.01%)</title><rect x="12.9592%" y="181" width="0.0147%" height="15" fill="rgb(217,163,10)" fg:x="882" fg:w="1"/><text x="13.2092%" y="191.50"></text></g><g><title>itsi_server.bundle`&lt;rand_chacha::chacha::ChaCha12Core as rand_core::block::BlockRngCore&gt;::generate (2 samples, 0.03%)</title><rect x="12.9738%" y="181" width="0.0294%" height="15" fill="rgb(213,25,53)" fg:x="883" fg:w="2"/><text x="13.2238%" y="191.50"></text></g><g><title>itsi_server.bundle`&lt;regex::regexset::bytes::SetMatchesIter as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.03%)</title><rect x="13.0032%" y="181" width="0.0294%" height="15" fill="rgb(252,105,26)" fg:x="885" fg:w="2"/><text x="13.2532%" y="191.50"></text></g><g><title>itsi_server.bundle`&lt;regex_automata::meta::strategy::Core as regex_automata::meta::strategy::Strategy&gt;::which_overlapping_matches (1 samples, 0.01%)</title><rect x="13.0326%" y="181" width="0.0147%" height="15" fill="rgb(220,39,43)" fg:x="887" fg:w="1"/><text x="13.2826%" y="191.50"></text></g><g><title>itsi_server.bundle`DYLD-STUB$$memcpy (1 samples, 0.01%)</title><rect x="13.0473%" y="181" width="0.0147%" height="15" fill="rgb(229,68,48)" fg:x="888" fg:w="1"/><text x="13.2973%" y="191.50"></text></g><g><title>itsi_server.bundle`core::ptr::drop_in_place&lt;http::header::map::HeaderMap&gt; (1 samples, 0.01%)</title><rect x="13.0620%" y="181" width="0.0147%" height="15" fill="rgb(252,8,32)" fg:x="889" fg:w="1"/><text x="13.3120%" y="191.50"></text></g><g><title>itsi_server.bundle`core::ptr::drop_in_place&lt;http::uri::Uri&gt; (1 samples, 0.01%)</title><rect x="13.0767%" y="181" width="0.0147%" height="15" fill="rgb(223,20,43)" fg:x="890" fg:w="1"/><text x="13.3267%" y="191.50"></text></g><g><title>itsi_server.bundle`core::ptr::drop_in_place&lt;hyper_util::rt::tokio::TokioSleep&gt; (1 samples, 0.01%)</title><rect x="13.0914%" y="181" width="0.0147%" height="15" fill="rgb(229,81,49)" fg:x="891" fg:w="1"/><text x="13.3414%" y="191.50"></text></g><g><title>itsi_server.bundle`http::extensions::Extensions::remove (2 samples, 0.03%)</title><rect x="13.1061%" y="181" width="0.0294%" height="15" fill="rgb(236,28,36)" fg:x="892" fg:w="2"/><text x="13.3561%" y="191.50"></text></g><g><title>itsi_server.bundle`http::header::map::HeaderMap&lt;T&gt;::get (3 samples, 0.04%)</title><rect x="13.1355%" y="181" width="0.0441%" height="15" fill="rgb(249,185,26)" fg:x="894" fg:w="3"/><text x="13.3855%" y="191.50"></text></g><g><title>itsi_server.bundle`http::header::map::HeaderMap&lt;T&gt;::try_insert_entry (2 samples, 0.03%)</title><rect x="13.2089%" y="149" width="0.0294%" height="15" fill="rgb(249,174,33)" fg:x="899" fg:w="2"/><text x="13.4589%" y="159.50"></text></g><g><title>itsi_server.bundle`alloc::raw_vec::finish_grow (1 samples, 0.01%)</title><rect x="13.2383%" y="133" width="0.0147%" height="15" fill="rgb(233,201,37)" fg:x="901" fg:w="1"/><text x="13.4883%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_realloc (3 samples, 0.04%)</title><rect x="13.3265%" y="101" width="0.0441%" height="15" fill="rgb(221,78,26)" fg:x="907" fg:w="3"/><text x="13.5765%" y="111.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (1 samples, 0.01%)</title><rect x="13.4440%" y="69" width="0.0147%" height="15" fill="rgb(250,127,30)" fg:x="915" fg:w="1"/><text x="13.6940%" y="79.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate_outlined (1 samples, 0.01%)</title><rect x="13.4587%" y="69" width="0.0147%" height="15" fill="rgb(230,49,44)" fg:x="916" fg:w="1"/><text x="13.7087%" y="79.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (2 samples, 0.03%)</title><rect x="13.4734%" y="69" width="0.0294%" height="15" fill="rgb(229,67,23)" fg:x="917" fg:w="2"/><text x="13.7234%" y="79.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_pointer_size (2 samples, 0.03%)</title><rect x="13.5028%" y="69" width="0.0294%" height="15" fill="rgb(249,83,47)" fg:x="919" fg:w="2"/><text x="13.7528%" y="79.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate_outlined (5 samples, 0.07%)</title><rect x="13.5322%" y="53" width="0.0735%" height="15" fill="rgb(215,43,3)" fg:x="921" fg:w="5"/><text x="13.7822%" y="63.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate_from_block (1 samples, 0.01%)</title><rect x="13.5909%" y="37" width="0.0147%" height="15" fill="rgb(238,154,13)" fg:x="925" fg:w="1"/><text x="13.8409%" y="47.50"></text></g><g><title>libsystem_platform.dylib`__bzero (1 samples, 0.01%)</title><rect x="13.6056%" y="53" width="0.0147%" height="15" fill="rgb(219,56,2)" fg:x="926" fg:w="1"/><text x="13.8556%" y="63.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_realloc (8 samples, 0.12%)</title><rect x="13.5322%" y="69" width="0.1175%" height="15" fill="rgb(233,0,4)" fg:x="921" fg:w="8"/><text x="13.7822%" y="79.50"></text></g><g><title>libsystem_platform.dylib`_platform_memset (2 samples, 0.03%)</title><rect x="13.6203%" y="53" width="0.0294%" height="15" fill="rgb(235,30,7)" fg:x="927" fg:w="2"/><text x="13.8703%" y="63.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_realloc (17 samples, 0.25%)</title><rect x="13.4146%" y="85" width="0.2498%" height="15" fill="rgb(250,79,13)" fg:x="913" fg:w="17"/><text x="13.6646%" y="95.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (1 samples, 0.01%)</title><rect x="13.6497%" y="69" width="0.0147%" height="15" fill="rgb(211,146,34)" fg:x="929" fg:w="1"/><text x="13.8997%" y="79.50"></text></g><g><title>libsystem_malloc.dylib`_realloc (22 samples, 0.32%)</title><rect x="13.3706%" y="101" width="0.3232%" height="15" fill="rgb(228,22,38)" fg:x="910" fg:w="22"/><text x="13.6206%" y="111.50"></text></g><g><title>libsystem_malloc.dylib`default_zone_realloc (2 samples, 0.03%)</title><rect x="13.6644%" y="85" width="0.0294%" height="15" fill="rgb(235,168,5)" fg:x="930" fg:w="2"/><text x="13.9144%" y="95.50"></text></g><g><title>itsi_server.bundle`alloc::raw_vec::finish_grow (30 samples, 0.44%)</title><rect x="13.2677%" y="117" width="0.4408%" height="15" fill="rgb(221,155,16)" fg:x="903" fg:w="30"/><text x="13.5177%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_size (1 samples, 0.01%)</title><rect x="13.6938%" y="101" width="0.0147%" height="15" fill="rgb(215,215,53)" fg:x="932" fg:w="1"/><text x="13.9438%" y="111.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (1 samples, 0.01%)</title><rect x="13.7085%" y="117" width="0.0147%" height="15" fill="rgb(223,4,10)" fg:x="933" fg:w="1"/><text x="13.9585%" y="127.50"></text></g><g><title>itsi_server.bundle`http::header::map::HeaderMap&lt;T&gt;::try_grow (36 samples, 0.53%)</title><rect x="13.2530%" y="133" width="0.5289%" height="15" fill="rgb(234,103,6)" fg:x="902" fg:w="36"/><text x="13.5030%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`_realloc (4 samples, 0.06%)</title><rect x="13.7232%" y="117" width="0.0588%" height="15" fill="rgb(227,97,0)" fg:x="934" fg:w="4"/><text x="13.9732%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`_free (1 samples, 0.01%)</title><rect x="13.7820%" y="133" width="0.0147%" height="15" fill="rgb(234,150,53)" fg:x="938" fg:w="1"/><text x="14.0320%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (1 samples, 0.01%)</title><rect x="13.7967%" y="133" width="0.0147%" height="15" fill="rgb(228,201,54)" fg:x="939" fg:w="1"/><text x="14.0467%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (3 samples, 0.04%)</title><rect x="13.8113%" y="133" width="0.0441%" height="15" fill="rgb(222,22,37)" fg:x="940" fg:w="3"/><text x="14.0613%" y="143.50"></text></g><g><title>itsi_server.bundle`http::header::map::HeaderMap&lt;T&gt;::try_reserve_one (43 samples, 0.63%)</title><rect x="13.2383%" y="149" width="0.6318%" height="15" fill="rgb(237,53,32)" fg:x="901" fg:w="43"/><text x="13.4883%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_try_free_default (1 samples, 0.01%)</title><rect x="13.8554%" y="133" width="0.0147%" height="15" fill="rgb(233,25,53)" fg:x="943" fg:w="1"/><text x="14.1054%" y="143.50"></text></g><g><title>itsi_server.bundle`http::header::map::HeaderMap&lt;T&gt;::insert (51 samples, 0.75%)</title><rect x="13.1795%" y="181" width="0.7493%" height="15" fill="rgb(210,40,34)" fg:x="897" fg:w="51"/><text x="13.4295%" y="191.50"></text></g><g><title>itsi_server.bundle`http::header::name::HdrName::from_static (50 samples, 0.73%)</title><rect x="13.1942%" y="165" width="0.7346%" height="15" fill="rgb(241,220,44)" fg:x="898" fg:w="50"/><text x="13.4442%" y="175.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (4 samples, 0.06%)</title><rect x="13.8701%" y="149" width="0.0588%" height="15" fill="rgb(235,28,35)" fg:x="944" fg:w="4"/><text x="14.1201%" y="159.50"></text></g><g><title>itsi_server.bundle`http::header::name::StandardHeader::from_bytes (2 samples, 0.03%)</title><rect x="13.9583%" y="165" width="0.0294%" height="15" fill="rgb(210,56,17)" fg:x="950" fg:w="2"/><text x="14.2083%" y="175.50"></text></g><g><title>itsi_server.bundle`http::header::name::HdrName::from_bytes (6 samples, 0.09%)</title><rect x="13.9289%" y="181" width="0.0882%" height="15" fill="rgb(224,130,29)" fg:x="948" fg:w="6"/><text x="14.1789%" y="191.50"></text></g><g><title>itsi_server.bundle`http::header::name::parse_hdr (2 samples, 0.03%)</title><rect x="13.9877%" y="165" width="0.0294%" height="15" fill="rgb(235,212,8)" fg:x="952" fg:w="2"/><text x="14.2377%" y="175.50"></text></g><g><title>libsystem_kernel.dylib`__commpage_gettimeofday_internal (1 samples, 0.01%)</title><rect x="14.0464%" y="117" width="0.0147%" height="15" fill="rgb(223,33,50)" fg:x="956" fg:w="1"/><text x="14.2964%" y="127.50"></text></g><g><title>libsystem_c.dylib`gettimeofday (29 samples, 0.43%)</title><rect x="14.0464%" y="133" width="0.4261%" height="15" fill="rgb(219,149,13)" fg:x="956" fg:w="29"/><text x="14.2964%" y="143.50"></text></g><g><title>libsystem_kernel.dylib`mach_absolute_time (28 samples, 0.41%)</title><rect x="14.0611%" y="117" width="0.4114%" height="15" fill="rgb(250,156,29)" fg:x="957" fg:w="28"/><text x="14.3111%" y="127.50"></text></g><g><title>itsi_server.bundle`std::sys::pal::unix::time::Timespec::now (31 samples, 0.46%)</title><rect x="14.0317%" y="165" width="0.4555%" height="15" fill="rgb(216,193,19)" fg:x="955" fg:w="31"/><text x="14.2817%" y="175.50"></text></g><g><title>libsystem_c.dylib`clock_gettime (31 samples, 0.46%)</title><rect x="14.0317%" y="149" width="0.4555%" height="15" fill="rgb(216,135,14)" fg:x="955" fg:w="31"/><text x="14.2817%" y="159.50"></text></g><g><title>libsystem_kernel.dylib`__commpage_gettimeofday_internal (1 samples, 0.01%)</title><rect x="14.4725%" y="133" width="0.0147%" height="15" fill="rgb(241,47,5)" fg:x="985" fg:w="1"/><text x="14.7225%" y="143.50"></text></g><g><title>itsi_server.bundle`std::time::SystemTime::now (19 samples, 0.28%)</title><rect x="14.4872%" y="165" width="0.2792%" height="15" fill="rgb(233,42,35)" fg:x="986" fg:w="19"/><text x="14.7372%" y="175.50"></text></g><g><title>itsi_server.bundle`hyper::common::date::update (52 samples, 0.76%)</title><rect x="14.0170%" y="181" width="0.7640%" height="15" fill="rgb(231,13,6)" fg:x="954" fg:w="52"/><text x="14.2670%" y="191.50"></text></g><g><title>libsystem_c.dylib`clock_gettime (1 samples, 0.01%)</title><rect x="14.7664%" y="165" width="0.0147%" height="15" fill="rgb(207,181,40)" fg:x="1005" fg:w="1"/><text x="15.0164%" y="175.50"></text></g><g><title>itsi_server.bundle`&lt;hyper::proto::h1::role::Server as hyper::proto::h1::Http1Transaction&gt;::parse (2 samples, 0.03%)</title><rect x="14.9427%" y="165" width="0.0294%" height="15" fill="rgb(254,173,49)" fg:x="1017" fg:w="2"/><text x="15.1927%" y="175.50"></text></g><g><title>itsi_server.bundle`&lt;hyper_util::rt::tokio::TokioTimer as hyper::rt::timer::Timer&gt;::sleep_until (2 samples, 0.03%)</title><rect x="14.9721%" y="165" width="0.0294%" height="15" fill="rgb(221,1,38)" fg:x="1019" fg:w="2"/><text x="15.2221%" y="175.50"></text></g><g><title>libdyld.dylib`tlv_get_addr (2 samples, 0.03%)</title><rect x="14.9721%" y="149" width="0.0294%" height="15" fill="rgb(206,124,46)" fg:x="1019" fg:w="2"/><text x="15.2221%" y="159.50"></text></g><g><title>itsi_server.bundle`&lt;tokio::runtime::time::entry::TimerEntry as core::ops::drop::Drop&gt;::drop (1 samples, 0.01%)</title><rect x="15.0015%" y="165" width="0.0147%" height="15" fill="rgb(249,21,11)" fg:x="1021" fg:w="1"/><text x="15.2515%" y="175.50"></text></g><g><title>itsi_server.bundle`tokio::runtime::time::_&lt;impl tokio::runtime::time::handle::Handle&gt;::reregister (1 samples, 0.01%)</title><rect x="15.0162%" y="149" width="0.0147%" height="15" fill="rgb(222,201,40)" fg:x="1022" fg:w="1"/><text x="15.2662%" y="159.50"></text></g><g><title>itsi_server.bundle`tokio::runtime::time::entry::TimerEntry::inner (1 samples, 0.01%)</title><rect x="15.0309%" y="149" width="0.0147%" height="15" fill="rgb(235,61,29)" fg:x="1023" fg:w="1"/><text x="15.2809%" y="159.50"></text></g><g><title>itsi_server.bundle`&lt;std::time::Instant as core::ops::arith::Add&lt;core::time::Duration&gt;&gt;::add (1 samples, 0.01%)</title><rect x="15.0455%" y="133" width="0.0147%" height="15" fill="rgb(219,207,3)" fg:x="1024" fg:w="1"/><text x="15.2955%" y="143.50"></text></g><g><title>itsi_server.bundle`tokio::runtime::driver::Handle::unpark (3 samples, 0.04%)</title><rect x="15.0896%" y="117" width="0.0441%" height="15" fill="rgb(222,56,46)" fg:x="1027" fg:w="3"/><text x="15.3396%" y="127.50"></text></g><g><title>libsystem_kernel.dylib`kevent (3 samples, 0.04%)</title><rect x="15.0896%" y="101" width="0.0441%" height="15" fill="rgb(239,76,54)" fg:x="1027" fg:w="3"/><text x="15.3396%" y="111.50"></text></g><g><title>itsi_server.bundle`tokio::runtime::time::_&lt;impl tokio::runtime::time::handle::Handle&gt;::reregister (7 samples, 0.10%)</title><rect x="15.0602%" y="133" width="0.1029%" height="15" fill="rgb(231,124,27)" fg:x="1025" fg:w="7"/><text x="15.3102%" y="143.50"></text></g><g><title>itsi_server.bundle`tokio::runtime::time::wheel::Wheel::insert (2 samples, 0.03%)</title><rect x="15.1337%" y="117" width="0.0294%" height="15" fill="rgb(249,195,6)" fg:x="1030" fg:w="2"/><text x="15.3837%" y="127.50"></text></g><g><title>itsi_server.bundle`std::time::Instant::duration_since (1 samples, 0.01%)</title><rect x="15.2072%" y="117" width="0.0147%" height="15" fill="rgb(237,174,47)" fg:x="1035" fg:w="1"/><text x="15.4572%" y="127.50"></text></g><g><title>itsi_server.bundle`std::sys::pal::unix::time::Timespec::sub_timespec (1 samples, 0.01%)</title><rect x="15.2072%" y="101" width="0.0147%" height="15" fill="rgb(206,201,31)" fg:x="1035" fg:w="1"/><text x="15.4572%" y="111.50"></text></g><g><title>itsi_server.bundle`&lt;tokio::time::sleep::Sleep as core::future::future::Future&gt;::poll (20 samples, 0.29%)</title><rect x="15.0162%" y="165" width="0.2939%" height="15" fill="rgb(231,57,52)" fg:x="1022" fg:w="20"/><text x="15.2662%" y="175.50"></text></g><g><title>itsi_server.bundle`tokio::runtime::time::entry::TimerEntry::poll_elapsed (18 samples, 0.26%)</title><rect x="15.0455%" y="149" width="0.2645%" height="15" fill="rgb(248,177,22)" fg:x="1024" fg:w="18"/><text x="15.2955%" y="159.50"></text></g><g><title>itsi_server.bundle`tokio::runtime::time::entry::TimerEntry::reset (10 samples, 0.15%)</title><rect x="15.1631%" y="133" width="0.1469%" height="15" fill="rgb(215,211,37)" fg:x="1032" fg:w="10"/><text x="15.4131%" y="143.50"></text></g><g><title>itsi_server.bundle`tokio::runtime::time::entry::TimerEntry::inner (6 samples, 0.09%)</title><rect x="15.2219%" y="117" width="0.0882%" height="15" fill="rgb(241,128,51)" fg:x="1036" fg:w="6"/><text x="15.4719%" y="127.50"></text></g><g><title>libdyld.dylib`tlv_get_addr (4 samples, 0.06%)</title><rect x="15.2512%" y="101" width="0.0588%" height="15" fill="rgb(227,165,31)" fg:x="1038" fg:w="4"/><text x="15.5012%" y="111.50"></text></g><g><title>itsi_server.bundle`core::ptr::drop_in_place&lt;hyper_util::rt::tokio::TokioSleep&gt; (9 samples, 0.13%)</title><rect x="15.3100%" y="165" width="0.1322%" height="15" fill="rgb(228,167,24)" fg:x="1042" fg:w="9"/><text x="15.5600%" y="175.50"></text></g><g><title>itsi_server.bundle`tokio::runtime::time::_&lt;impl tokio::runtime::time::handle::Handle&gt;::clear_entry (8 samples, 0.12%)</title><rect x="15.3247%" y="149" width="0.1175%" height="15" fill="rgb(228,143,12)" fg:x="1043" fg:w="8"/><text x="15.5747%" y="159.50"></text></g><g><title>itsi_server.bundle`tokio::runtime::time::wheel::Wheel::remove (3 samples, 0.04%)</title><rect x="15.3982%" y="133" width="0.0441%" height="15" fill="rgb(249,149,8)" fg:x="1048" fg:w="3"/><text x="15.6482%" y="143.50"></text></g><g><title>itsi_server.bundle`http::header::map::HeaderMap&lt;T&gt;::get (1 samples, 0.01%)</title><rect x="15.4423%" y="165" width="0.0147%" height="15" fill="rgb(243,35,44)" fg:x="1051" fg:w="1"/><text x="15.6923%" y="175.50"></text></g><g><title>itsi_server.bundle`DYLD-STUB$$malloc (1 samples, 0.01%)</title><rect x="15.9124%" y="133" width="0.0147%" height="15" fill="rgb(246,89,9)" fg:x="1083" fg:w="1"/><text x="16.1624%" y="143.50"></text></g><g><title>itsi_server.bundle`bytes::bytes_mut::BytesMut::advance_unchecked (1 samples, 0.01%)</title><rect x="15.9271%" y="133" width="0.0147%" height="15" fill="rgb(233,213,13)" fg:x="1084" fg:w="1"/><text x="16.1771%" y="143.50"></text></g><g><title>itsi_server.bundle`bytes::bytes_mut::BytesMut::split_to (5 samples, 0.07%)</title><rect x="15.9418%" y="133" width="0.0735%" height="15" fill="rgb(233,141,41)" fg:x="1085" fg:w="5"/><text x="16.1918%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate_outlined (4 samples, 0.06%)</title><rect x="15.9565%" y="117" width="0.0588%" height="15" fill="rgb(239,167,4)" fg:x="1086" fg:w="4"/><text x="16.2065%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_find_block_and_allocate (1 samples, 0.01%)</title><rect x="16.0006%" y="101" width="0.0147%" height="15" fill="rgb(209,217,16)" fg:x="1089" fg:w="1"/><text x="16.2506%" y="111.50"></text></g><g><title>itsi_server.bundle`bytes::bytes_mut::shared_v_clone (2 samples, 0.03%)</title><rect x="16.0153%" y="133" width="0.0294%" height="15" fill="rgb(219,88,35)" fg:x="1090" fg:w="2"/><text x="16.2653%" y="143.50"></text></g><g><title>itsi_server.bundle`bytes::bytes_mut::shared_v_drop (2 samples, 0.03%)</title><rect x="16.0447%" y="133" width="0.0294%" height="15" fill="rgb(220,193,23)" fg:x="1092" fg:w="2"/><text x="16.2947%" y="143.50"></text></g><g><title>itsi_server.bundle`http::header::map::HeaderMap&lt;T&gt;::try_append2 (1 samples, 0.01%)</title><rect x="16.0741%" y="133" width="0.0147%" height="15" fill="rgb(230,90,52)" fg:x="1094" fg:w="1"/><text x="16.3241%" y="143.50"></text></g><g><title>itsi_server.bundle`http::header::map::HeaderMap&lt;T&gt;::try_reserve_one (1 samples, 0.01%)</title><rect x="16.0741%" y="117" width="0.0147%" height="15" fill="rgb(252,106,19)" fg:x="1094" fg:w="1"/><text x="16.3241%" y="127.50"></text></g><g><title>itsi_server.bundle`http::header::map::HeaderMap&lt;T&gt;::try_reserve (10 samples, 0.15%)</title><rect x="16.0887%" y="133" width="0.1469%" height="15" fill="rgb(206,74,20)" fg:x="1095" fg:w="10"/><text x="16.3387%" y="143.50"></text></g><g><title>itsi_server.bundle`http::header::map::HeaderMap&lt;T&gt;::try_reserve_one (1 samples, 0.01%)</title><rect x="16.2357%" y="133" width="0.0147%" height="15" fill="rgb(230,138,44)" fg:x="1105" fg:w="1"/><text x="16.4857%" y="143.50"></text></g><g><title>itsi_server.bundle`http::header::name::HeaderName::from_bytes (1 samples, 0.01%)</title><rect x="16.2504%" y="133" width="0.0147%" height="15" fill="rgb(235,182,43)" fg:x="1106" fg:w="1"/><text x="16.5004%" y="143.50"></text></g><g><title>itsi_server.bundle`http::header::name::StandardHeader::from_bytes (2 samples, 0.03%)</title><rect x="16.2651%" y="133" width="0.0294%" height="15" fill="rgb(242,16,51)" fg:x="1107" fg:w="2"/><text x="16.5151%" y="143.50"></text></g><g><title>itsi_server.bundle`core::str::converts::from_utf8 (1 samples, 0.01%)</title><rect x="16.3973%" y="101" width="0.0147%" height="15" fill="rgb(248,9,4)" fg:x="1116" fg:w="1"/><text x="16.6473%" y="111.50"></text></g><g><title>itsi_server.bundle`httparse::Request::parse_with_config_and_uninit_headers (12 samples, 0.18%)</title><rect x="16.2944%" y="117" width="0.1763%" height="15" fill="rgb(210,31,22)" fg:x="1109" fg:w="12"/><text x="16.5444%" y="127.50"></text></g><g><title>itsi_server.bundle`httparse::parse_headers_iter_uninit (4 samples, 0.06%)</title><rect x="16.4120%" y="101" width="0.0588%" height="15" fill="rgb(239,54,39)" fg:x="1117" fg:w="4"/><text x="16.6620%" y="111.50"></text></g><g><title>itsi_server.bundle`httparse::Request::parse_with_uninit_headers (13 samples, 0.19%)</title><rect x="16.2944%" y="133" width="0.1910%" height="15" fill="rgb(230,99,41)" fg:x="1109" fg:w="13"/><text x="16.5444%" y="143.50"></text></g><g><title>itsi_server.bundle`httparse::parse_version (1 samples, 0.01%)</title><rect x="16.4708%" y="117" width="0.0147%" height="15" fill="rgb(253,106,12)" fg:x="1121" fg:w="1"/><text x="16.7208%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (1 samples, 0.01%)</title><rect x="16.4855%" y="133" width="0.0147%" height="15" fill="rgb(213,46,41)" fg:x="1122" fg:w="1"/><text x="16.7355%" y="143.50"></text></g><g><title>itsi_server.bundle`&lt;hyper::proto::h1::role::Server as hyper::proto::h1::Http1Transaction&gt;::parse (61 samples, 0.90%)</title><rect x="15.6186%" y="149" width="0.8963%" height="15" fill="rgb(215,133,35)" fg:x="1063" fg:w="61"/><text x="15.8686%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (1 samples, 0.01%)</title><rect x="16.5001%" y="133" width="0.0147%" height="15" fill="rgb(213,28,5)" fg:x="1123" fg:w="1"/><text x="16.7501%" y="143.50"></text></g><g><title>itsi_server.bundle`http::header::map::HeaderMap&lt;T&gt;::try_append2 (1 samples, 0.01%)</title><rect x="16.5148%" y="149" width="0.0147%" height="15" fill="rgb(215,77,49)" fg:x="1124" fg:w="1"/><text x="16.7648%" y="159.50"></text></g><g><title>itsi_server.bundle`http::header::map::HeaderMap&lt;T&gt;::try_reserve (2 samples, 0.03%)</title><rect x="16.5295%" y="149" width="0.0294%" height="15" fill="rgb(248,100,22)" fg:x="1125" fg:w="2"/><text x="16.7795%" y="159.50"></text></g><g><title>itsi_server.bundle`http::header::name::HeaderName::from_bytes (1 samples, 0.01%)</title><rect x="16.5589%" y="149" width="0.0147%" height="15" fill="rgb(208,67,9)" fg:x="1127" fg:w="1"/><text x="16.8089%" y="159.50"></text></g><g><title>itsi_server.bundle`http::method::Method::from_bytes (1 samples, 0.01%)</title><rect x="16.5736%" y="149" width="0.0147%" height="15" fill="rgb(219,133,21)" fg:x="1128" fg:w="1"/><text x="16.8236%" y="159.50"></text></g><g><title>itsi_server.bundle`http::uri::Uri::from_shared (1 samples, 0.01%)</title><rect x="16.5883%" y="149" width="0.0147%" height="15" fill="rgb(246,46,29)" fg:x="1129" fg:w="1"/><text x="16.8383%" y="159.50"></text></g><g><title>itsi_server.bundle`&lt;&amp;mio::net::tcp::stream::TcpStream as std::io::Read&gt;::read (1,081 samples, 15.88%)</title><rect x="16.6471%" y="85" width="15.8830%" height="15" fill="rgb(246,185,52)" fg:x="1133" fg:w="1081"/><text x="16.8971%" y="95.50">itsi_server.bundle`&lt;&amp;mio..</text></g><g><title>libsystem_kernel.dylib`__recvfrom (1,080 samples, 15.87%)</title><rect x="16.6618%" y="69" width="15.8684%" height="15" fill="rgb(252,136,11)" fg:x="1134" fg:w="1080"/><text x="16.9118%" y="79.50">libsystem_kernel.dylib`_..</text></g><g><title>itsi_server.bundle`&lt;&amp;std::net::tcp::TcpStream as std::io::Read&gt;::read (1 samples, 0.01%)</title><rect x="32.5301%" y="85" width="0.0147%" height="15" fill="rgb(219,138,53)" fg:x="2214" fg:w="1"/><text x="32.7801%" y="95.50"></text></g><g><title>itsi_server.bundle`tokio::runtime::io::registration::Registration::poll_ready (12 samples, 0.18%)</title><rect x="32.5448%" y="85" width="0.1763%" height="15" fill="rgb(211,51,23)" fg:x="2215" fg:w="12"/><text x="32.7948%" y="95.50"></text></g><g><title>itsi_server.bundle`tokio::runtime::io::scheduled_io::ScheduledIo::poll_readiness (4 samples, 0.06%)</title><rect x="32.6624%" y="69" width="0.0588%" height="15" fill="rgb(247,221,28)" fg:x="2223" fg:w="4"/><text x="32.9124%" y="79.50"></text></g><g><title>itsi_server.bundle`tokio::runtime::io::scheduled_io::ScheduledIo::poll_readiness (1 samples, 0.01%)</title><rect x="32.7211%" y="85" width="0.0147%" height="15" fill="rgb(251,222,45)" fg:x="2227" fg:w="1"/><text x="32.9711%" y="95.50"></text></g><g><title>itsi_server.bundle`tokio::net::tcp::stream::TcpStream::poll_read_priv (1,100 samples, 16.16%)</title><rect x="16.6471%" y="101" width="16.1622%" height="15" fill="rgb(217,162,53)" fg:x="1133" fg:w="1100"/><text x="16.8971%" y="111.50">itsi_server.bundle`tokio:..</text></g><g><title>libdyld.dylib`tlv_get_addr (5 samples, 0.07%)</title><rect x="32.7358%" y="85" width="0.0735%" height="15" fill="rgb(229,93,14)" fg:x="2228" fg:w="5"/><text x="32.9858%" y="95.50"></text></g><g><title>itsi_server.bundle`hyper::proto::h1::io::Buffered&lt;T,B&gt;::poll_read_from_io (1,106 samples, 16.25%)</title><rect x="16.6030%" y="149" width="16.2504%" height="15" fill="rgb(209,67,49)" fg:x="1130" fg:w="1106"/><text x="16.8530%" y="159.50">itsi_server.bundle`hyper:..</text></g><g><title>itsi_server.bundle`&lt;hyper_util::common::rewind::Rewind&lt;T&gt; as hyper::rt::io::Read&gt;::poll_read (1,105 samples, 16.24%)</title><rect x="16.6177%" y="133" width="16.2357%" height="15" fill="rgb(213,87,29)" fg:x="1131" fg:w="1105"/><text x="16.8677%" y="143.50">itsi_server.bundle`&lt;hyper..</text></g><g><title>itsi_server.bundle`&lt;hyper_util::rt::tokio::TokioIo&lt;T&gt; as hyper::rt::io::Read&gt;::poll_read (1,104 samples, 16.22%)</title><rect x="16.6324%" y="117" width="16.2210%" height="15" fill="rgb(205,151,52)" fg:x="1132" fg:w="1104"/><text x="16.8824%" y="127.50">itsi_server.bundle`&lt;hyper..</text></g><g><title>itsi_server.bundle`tokio::runtime::io::registration::Registration::poll_ready (3 samples, 0.04%)</title><rect x="32.8093%" y="101" width="0.0441%" height="15" fill="rgb(253,215,39)" fg:x="2233" fg:w="3"/><text x="33.0593%" y="111.50"></text></g><g><title>itsi_server.bundle`hyper::proto::h1::io::ReadStrategy::record (2 samples, 0.03%)</title><rect x="32.8534%" y="149" width="0.0294%" height="15" fill="rgb(221,220,41)" fg:x="2236" fg:w="2"/><text x="33.1034%" y="159.50"></text></g><g><title>itsi_server.bundle`hyper::proto::h1::io::Buffered&lt;T,B&gt;::parse (1,187 samples, 17.44%)</title><rect x="15.4569%" y="165" width="17.4405%" height="15" fill="rgb(218,133,21)" fg:x="1052" fg:w="1187"/><text x="15.7069%" y="175.50">itsi_server.bundle`hyper::p..</text></g><g><title>libsystem_platform.dylib`_platform_memmove (1 samples, 0.01%)</title><rect x="32.8828%" y="149" width="0.0147%" height="15" fill="rgb(221,193,43)" fg:x="2238" fg:w="1"/><text x="33.1328%" y="159.50"></text></g><g><title>itsi_server.bundle`hyper::proto::h1::io::Buffered&lt;T,B&gt;::poll_read_from_io (1 samples, 0.01%)</title><rect x="32.8974%" y="165" width="0.0147%" height="15" fill="rgb(240,128,52)" fg:x="2239" fg:w="1"/><text x="33.1474%" y="175.50"></text></g><g><title>libsystem_c.dylib`clock_gettime (9 samples, 0.13%)</title><rect x="32.9121%" y="149" width="0.1322%" height="15" fill="rgb(253,114,12)" fg:x="2240" fg:w="9"/><text x="33.1621%" y="159.50"></text></g><g><title>libsystem_kernel.dylib`mach_absolute_time (9 samples, 0.13%)</title><rect x="32.9121%" y="133" width="0.1322%" height="15" fill="rgb(215,223,47)" fg:x="2240" fg:w="9"/><text x="33.1621%" y="143.50"></text></g><g><title>itsi_server.bundle`std::sys::pal::unix::time::Timespec::now (10 samples, 0.15%)</title><rect x="32.9121%" y="165" width="0.1469%" height="15" fill="rgb(248,225,23)" fg:x="2240" fg:w="10"/><text x="33.1621%" y="175.50"></text></g><g><title>libsystem_c.dylib`clock_gettime_nsec_np (1 samples, 0.01%)</title><rect x="33.0444%" y="149" width="0.0147%" height="15" fill="rgb(250,108,0)" fg:x="2249" fg:w="1"/><text x="33.2944%" y="159.50"></text></g><g><title>libdyld.dylib`tlv_get_addr (3 samples, 0.04%)</title><rect x="33.0591%" y="165" width="0.0441%" height="15" fill="rgb(228,208,7)" fg:x="2250" fg:w="3"/><text x="33.3091%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`DYLD-STUB$$_platform_bzero (2 samples, 0.03%)</title><rect x="33.1031%" y="165" width="0.0294%" height="15" fill="rgb(244,45,10)" fg:x="2253" fg:w="2"/><text x="33.3531%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (1 samples, 0.01%)</title><rect x="33.1325%" y="165" width="0.0147%" height="15" fill="rgb(207,125,25)" fg:x="2255" fg:w="1"/><text x="33.3825%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (2 samples, 0.03%)</title><rect x="33.1472%" y="165" width="0.0294%" height="15" fill="rgb(210,195,18)" fg:x="2256" fg:w="2"/><text x="33.3972%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (1 samples, 0.01%)</title><rect x="33.1766%" y="165" width="0.0147%" height="15" fill="rgb(249,80,12)" fg:x="2258" fg:w="1"/><text x="33.4266%" y="175.50"></text></g><g><title>itsi_server.bundle`hyper::proto::h1::conn::Conn&lt;I,B,T&gt;::poll_read_head (1,254 samples, 18.42%)</title><rect x="14.7811%" y="181" width="18.4249%" height="15" fill="rgb(221,65,9)" fg:x="1006" fg:w="1254"/><text x="15.0311%" y="191.50">itsi_server.bundle`hyper::pro..</text></g><g><title>libsystem_platform.dylib`_platform_memset (1 samples, 0.01%)</title><rect x="33.1913%" y="165" width="0.0147%" height="15" fill="rgb(235,49,36)" fg:x="2259" fg:w="1"/><text x="33.4413%" y="175.50"></text></g><g><title>itsi_server.bundle`&lt;hyper_util::common::rewind::Rewind&lt;T&gt; as hyper::rt::io::Read&gt;::poll_read (2 samples, 0.03%)</title><rect x="33.2207%" y="165" width="0.0294%" height="15" fill="rgb(225,32,20)" fg:x="2261" fg:w="2"/><text x="33.4707%" y="175.50"></text></g><g><title>itsi_server.bundle`tokio::runtime::io::registration::Registration::poll_ready (4 samples, 0.06%)</title><rect x="33.2795%" y="101" width="0.0588%" height="15" fill="rgb(215,141,46)" fg:x="2265" fg:w="4"/><text x="33.5295%" y="111.50"></text></g><g><title>itsi_server.bundle`tokio::runtime::io::scheduled_io::ScheduledIo::poll_readiness (2 samples, 0.03%)</title><rect x="33.3088%" y="85" width="0.0294%" height="15" fill="rgb(250,160,47)" fg:x="2267" fg:w="2"/><text x="33.5588%" y="95.50"></text></g><g><title>itsi_server.bundle`tokio::runtime::io::scheduled_io::ScheduledIo::poll_readiness (4 samples, 0.06%)</title><rect x="33.3382%" y="101" width="0.0588%" height="15" fill="rgb(216,222,40)" fg:x="2269" fg:w="4"/><text x="33.5882%" y="111.50"></text></g><g><title>itsi_server.bundle`&lt;hyper_util::common::rewind::Rewind&lt;T&gt; as hyper::rt::io::Read&gt;::poll_read (15 samples, 0.22%)</title><rect x="33.2501%" y="149" width="0.2204%" height="15" fill="rgb(234,217,39)" fg:x="2263" fg:w="15"/><text x="33.5001%" y="159.50"></text></g><g><title>itsi_server.bundle`&lt;hyper_util::rt::tokio::TokioIo&lt;T&gt; as hyper::rt::io::Read&gt;::poll_read (15 samples, 0.22%)</title><rect x="33.2501%" y="133" width="0.2204%" height="15" fill="rgb(207,178,40)" fg:x="2263" fg:w="15"/><text x="33.5001%" y="143.50"></text></g><g><title>itsi_server.bundle`tokio::net::tcp::stream::TcpStream::poll_read_priv (15 samples, 0.22%)</title><rect x="33.2501%" y="117" width="0.2204%" height="15" fill="rgb(221,136,13)" fg:x="2263" fg:w="15"/><text x="33.5001%" y="127.50"></text></g><g><title>libdyld.dylib`tlv_get_addr (5 samples, 0.07%)</title><rect x="33.3970%" y="101" width="0.0735%" height="15" fill="rgb(249,199,10)" fg:x="2273" fg:w="5"/><text x="33.6470%" y="111.50"></text></g><g><title>itsi_server.bundle`&lt;hyper_util::rt::tokio::TokioIo&lt;T&gt; as hyper::rt::io::Read&gt;::poll_read (1 samples, 0.01%)</title><rect x="33.4705%" y="149" width="0.0147%" height="15" fill="rgb(249,222,13)" fg:x="2278" fg:w="1"/><text x="33.7205%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`rack_get_thread_index (1 samples, 0.01%)</title><rect x="33.4852%" y="117" width="0.0147%" height="15" fill="rgb(244,185,38)" fg:x="2279" fg:w="1"/><text x="33.7352%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`small_free_list_add_ptr (31 samples, 0.46%)</title><rect x="33.5586%" y="85" width="0.4555%" height="15" fill="rgb(236,202,9)" fg:x="2284" fg:w="31"/><text x="33.8086%" y="95.50"></text></g><g><title>libsystem_malloc.dylib`small_free_list_remove_ptr (1 samples, 0.01%)</title><rect x="34.0141%" y="85" width="0.0147%" height="15" fill="rgb(250,229,37)" fg:x="2315" fg:w="1"/><text x="34.2641%" y="95.50"></text></g><g><title>itsi_server.bundle`bytes::bytes_mut::BytesMut::reserve_inner (38 samples, 0.56%)</title><rect x="33.4852%" y="149" width="0.5583%" height="15" fill="rgb(206,174,23)" fg:x="2279" fg:w="38"/><text x="33.7352%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (38 samples, 0.56%)</title><rect x="33.4852%" y="133" width="0.5583%" height="15" fill="rgb(211,33,43)" fg:x="2279" fg:w="38"/><text x="33.7352%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`small_malloc_should_clear (37 samples, 0.54%)</title><rect x="33.4999%" y="117" width="0.5436%" height="15" fill="rgb(245,58,50)" fg:x="2280" fg:w="37"/><text x="33.7499%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`small_malloc_from_free_list (34 samples, 0.50%)</title><rect x="33.5439%" y="101" width="0.4996%" height="15" fill="rgb(244,68,36)" fg:x="2283" fg:w="34"/><text x="33.7939%" y="111.50"></text></g><g><title>libsystem_malloc.dylib`small_free_list_remove_ptr_no_clear (1 samples, 0.01%)</title><rect x="34.0288%" y="85" width="0.0147%" height="15" fill="rgb(232,229,15)" fg:x="2316" fg:w="1"/><text x="34.2788%" y="95.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (1 samples, 0.01%)</title><rect x="34.0435%" y="149" width="0.0147%" height="15" fill="rgb(254,30,23)" fg:x="2317" fg:w="1"/><text x="34.2935%" y="159.50"></text></g><g><title>itsi_server.bundle`hyper::proto::h1::conn::Conn&lt;I,B,T&gt;::poll_read_keep_alive (60 samples, 0.88%)</title><rect x="33.2060%" y="181" width="0.8816%" height="15" fill="rgb(235,160,14)" fg:x="2260" fg:w="60"/><text x="33.4560%" y="191.50"></text></g><g><title>itsi_server.bundle`hyper::proto::h1::io::Buffered&lt;T,B&gt;::poll_read_from_io (57 samples, 0.84%)</title><rect x="33.2501%" y="165" width="0.8375%" height="15" fill="rgb(212,155,44)" fg:x="2263" fg:w="57"/><text x="33.5001%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (2 samples, 0.03%)</title><rect x="34.0582%" y="149" width="0.0294%" height="15" fill="rgb(226,2,50)" fg:x="2318" fg:w="2"/><text x="34.3082%" y="159.50"></text></g><g><title>itsi_server.bundle`DYLD-STUB$$free (1 samples, 0.01%)</title><rect x="34.0876%" y="165" width="0.0147%" height="15" fill="rgb(234,177,6)" fg:x="2320" fg:w="1"/><text x="34.3376%" y="175.50"></text></g><g><title>itsi_server.bundle`hyper::proto::h1::io::WriteBuf&lt;B&gt;::buffer (1 samples, 0.01%)</title><rect x="34.1023%" y="149" width="0.0147%" height="15" fill="rgb(217,24,9)" fg:x="2321" fg:w="1"/><text x="34.3523%" y="159.50"></text></g><g><title>itsi_server.bundle`hyper::proto::h1::io::Cursor&lt;alloc::vec::Vec&lt;u8&gt;&gt;::maybe_unshift (1 samples, 0.01%)</title><rect x="34.1023%" y="133" width="0.0147%" height="15" fill="rgb(220,13,46)" fg:x="2321" fg:w="1"/><text x="34.3523%" y="143.50"></text></g><g><title>itsi_server.bundle`hyper::proto::h1::encode::Encoder::encode_and_end (4 samples, 0.06%)</title><rect x="34.1023%" y="165" width="0.0588%" height="15" fill="rgb(239,221,27)" fg:x="2321" fg:w="4"/><text x="34.3523%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (3 samples, 0.04%)</title><rect x="34.1170%" y="149" width="0.0441%" height="15" fill="rgb(222,198,25)" fg:x="2322" fg:w="3"/><text x="34.3670%" y="159.50"></text></g><g><title>itsi_server.bundle`hyper::proto::h1::conn::Conn&lt;I,B,T&gt;::write_body_and_end (6 samples, 0.09%)</title><rect x="34.0876%" y="181" width="0.0882%" height="15" fill="rgb(211,99,13)" fg:x="2320" fg:w="6"/><text x="34.3376%" y="191.50"></text></g><g><title>itsi_server.bundle`hyper::proto::h1::io::WriteBuf&lt;B&gt;::buffer (1 samples, 0.01%)</title><rect x="34.1610%" y="165" width="0.0147%" height="15" fill="rgb(232,111,31)" fg:x="2325" fg:w="1"/><text x="34.4110%" y="175.50"></text></g><g><title>itsi_server.bundle`&lt;http::header::map::Drain&lt;T&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.01%)</title><rect x="34.1904%" y="165" width="0.0147%" height="15" fill="rgb(245,82,37)" fg:x="2327" fg:w="1"/><text x="34.4404%" y="175.50"></text></g><g><title>itsi_server.bundle`&lt;http::header::map::Drain&lt;T&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.01%)</title><rect x="34.9545%" y="149" width="0.0147%" height="15" fill="rgb(227,149,46)" fg:x="2379" fg:w="1"/><text x="35.2045%" y="159.50"></text></g><g><title>itsi_server.bundle`DYLD-STUB$$free (1 samples, 0.01%)</title><rect x="34.9691%" y="149" width="0.0147%" height="15" fill="rgb(218,36,50)" fg:x="2380" fg:w="1"/><text x="35.2191%" y="159.50"></text></g><g><title>itsi_server.bundle`bytes::bytes::shared_drop (8 samples, 0.12%)</title><rect x="34.9838%" y="149" width="0.1175%" height="15" fill="rgb(226,80,48)" fg:x="2381" fg:w="8"/><text x="35.2338%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (7 samples, 0.10%)</title><rect x="34.9985%" y="133" width="0.1029%" height="15" fill="rgb(238,224,15)" fg:x="2382" fg:w="7"/><text x="35.2485%" y="143.50"></text></g><g><title>itsi_server.bundle`hyper::common::date::extend (1 samples, 0.01%)</title><rect x="35.1014%" y="149" width="0.0147%" height="15" fill="rgb(241,136,10)" fg:x="2389" fg:w="1"/><text x="35.3514%" y="159.50"></text></g><g><title>libdyld.dylib`tlv_get_addr (3 samples, 0.04%)</title><rect x="35.1161%" y="149" width="0.0441%" height="15" fill="rgb(208,32,45)" fg:x="2390" fg:w="3"/><text x="35.3661%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`_free (1 samples, 0.01%)</title><rect x="35.1602%" y="149" width="0.0147%" height="15" fill="rgb(207,135,9)" fg:x="2393" fg:w="1"/><text x="35.4102%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (6 samples, 0.09%)</title><rect x="35.1748%" y="149" width="0.0882%" height="15" fill="rgb(206,86,44)" fg:x="2394" fg:w="6"/><text x="35.4248%" y="159.50"></text></g><g><title>itsi_server.bundle`&lt;hyper::proto::h1::role::Server as hyper::proto::h1::Http1Transaction&gt;::encode (73 samples, 1.07%)</title><rect x="34.2051%" y="165" width="1.0726%" height="15" fill="rgb(245,177,15)" fg:x="2328" fg:w="73"/><text x="34.4551%" y="175.50"></text></g><g><title>libsystem_platform.dylib`_platform_memset (1 samples, 0.01%)</title><rect x="35.2630%" y="149" width="0.0147%" height="15" fill="rgb(206,64,50)" fg:x="2400" fg:w="1"/><text x="35.5130%" y="159.50"></text></g><g><title>itsi_server.bundle`http::header::name::StandardHeader::as_str (4 samples, 0.06%)</title><rect x="35.2777%" y="165" width="0.0588%" height="15" fill="rgb(234,36,40)" fg:x="2401" fg:w="4"/><text x="35.5277%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`_free (12 samples, 0.18%)</title><rect x="35.3365%" y="165" width="0.1763%" height="15" fill="rgb(213,64,8)" fg:x="2405" fg:w="12"/><text x="35.5865%" y="175.50"></text></g><g><title>itsi_server.bundle`hyper::proto::h1::conn::Conn&lt;I,B,T&gt;::write_head (99 samples, 1.45%)</title><rect x="34.1757%" y="181" width="1.4546%" height="15" fill="rgb(210,75,36)" fg:x="2326" fg:w="99"/><text x="34.4257%" y="191.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (8 samples, 0.12%)</title><rect x="35.5128%" y="165" width="0.1175%" height="15" fill="rgb(229,88,21)" fg:x="2417" fg:w="8"/><text x="35.7628%" y="175.50"></text></g><g><title>itsi_server.bundle`hyper::proto::h1::io::Buffered&lt;T,B&gt;::parse (1 samples, 0.01%)</title><rect x="35.6303%" y="181" width="0.0147%" height="15" fill="rgb(252,204,47)" fg:x="2425" fg:w="1"/><text x="35.8803%" y="191.50"></text></g><g><title>itsi_server.bundle`&lt;&amp;mio::net::tcp::stream::TcpStream as std::io::Write&gt;::write (1,064 samples, 15.63%)</title><rect x="35.8066%" y="149" width="15.6333%" height="15" fill="rgb(208,77,27)" fg:x="2437" fg:w="1064"/><text x="36.0566%" y="159.50">itsi_server.bundle`&lt;&amp;mio..</text></g><g><title>libsystem_kernel.dylib`__sendto (1,063 samples, 15.62%)</title><rect x="35.8213%" y="133" width="15.6186%" height="15" fill="rgb(221,76,26)" fg:x="2438" fg:w="1063"/><text x="36.0713%" y="143.50">libsystem_kernel.dylib`_..</text></g><g><title>itsi_server.bundle`&lt;&amp;std::net::tcp::TcpStream as std::io::Write&gt;::write (1 samples, 0.01%)</title><rect x="51.4399%" y="149" width="0.0147%" height="15" fill="rgb(225,139,18)" fg:x="3501" fg:w="1"/><text x="51.6899%" y="159.50"></text></g><g><title>itsi_server.bundle`tokio::runtime::io::registration::Registration::poll_ready (2 samples, 0.03%)</title><rect x="51.4546%" y="149" width="0.0294%" height="15" fill="rgb(230,137,11)" fg:x="3502" fg:w="2"/><text x="51.7046%" y="159.50"></text></g><g><title>itsi_server.bundle`tokio::net::tcp::stream::TcpStream::poll_write_priv (1,078 samples, 15.84%)</title><rect x="35.7185%" y="165" width="15.8390%" height="15" fill="rgb(212,28,1)" fg:x="2431" fg:w="1078"/><text x="35.9685%" y="175.50">itsi_server.bundle`tokio..</text></g><g><title>itsi_server.bundle`tokio::runtime::io::scheduled_io::ScheduledIo::poll_readiness (5 samples, 0.07%)</title><rect x="51.4840%" y="149" width="0.0735%" height="15" fill="rgb(248,164,17)" fg:x="3504" fg:w="5"/><text x="51.7340%" y="159.50"></text></g><g><title>itsi_server.bundle`hyper::proto::h1::io::Buffered&lt;T,B&gt;::poll_flush (1,084 samples, 15.93%)</title><rect x="35.6450%" y="181" width="15.9271%" height="15" fill="rgb(222,171,42)" fg:x="2426" fg:w="1084"/><text x="35.8950%" y="191.50">itsi_server.bundle`hyper..</text></g><g><title>itsi_server.bundle`tokio::runtime::io::registration::Registration::poll_ready (1 samples, 0.01%)</title><rect x="51.5574%" y="165" width="0.0147%" height="15" fill="rgb(243,84,45)" fg:x="3509" fg:w="1"/><text x="51.8074%" y="175.50"></text></g><g><title>itsi_server.bundle`hyper::proto::h1::io::Buffered&lt;T,B&gt;::poll_read_from_io (1 samples, 0.01%)</title><rect x="51.5721%" y="181" width="0.0147%" height="15" fill="rgb(252,49,23)" fg:x="3510" fg:w="1"/><text x="51.8221%" y="191.50"></text></g><g><title>itsi_server.bundle`&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (3 samples, 0.04%)</title><rect x="51.7044%" y="165" width="0.0441%" height="15" fill="rgb(215,19,7)" fg:x="3519" fg:w="3"/><text x="51.9544%" y="175.50"></text></g><g><title>itsi_server.bundle`&lt;regex_automata::meta::strategy::Core as regex_automata::meta::strategy::Strategy&gt;::which_overlapping_matches (18 samples, 0.26%)</title><rect x="51.7485%" y="165" width="0.2645%" height="15" fill="rgb(238,81,41)" fg:x="3522" fg:w="18"/><text x="51.9985%" y="175.50"></text></g><g><title>itsi_server.bundle`regex_automata::meta::wrappers::HybridEngine::try_which_overlapping_matches (18 samples, 0.26%)</title><rect x="51.7485%" y="149" width="0.2645%" height="15" fill="rgb(210,199,37)" fg:x="3522" fg:w="18"/><text x="51.9985%" y="159.50"></text></g><g><title>itsi_server.bundle`regex_automata::hybrid::search::find_overlapping_fwd (7 samples, 0.10%)</title><rect x="51.9101%" y="133" width="0.1029%" height="15" fill="rgb(244,192,49)" fg:x="3533" fg:w="7"/><text x="52.1601%" y="143.50"></text></g><g><title>itsi_server.bundle`http::header::map::HeaderMap&lt;T&gt;::get (2 samples, 0.03%)</title><rect x="52.0129%" y="165" width="0.0294%" height="15" fill="rgb(226,211,11)" fg:x="3540" fg:w="2"/><text x="52.2629%" y="175.50"></text></g><g><title>itsi_server.bundle`regex_automata::util::search::PatternSet::new (4 samples, 0.06%)</title><rect x="52.0423%" y="165" width="0.0588%" height="15" fill="rgb(236,162,54)" fg:x="3542" fg:w="4"/><text x="52.2923%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_calloc (4 samples, 0.06%)</title><rect x="52.0423%" y="149" width="0.0588%" height="15" fill="rgb(220,229,9)" fg:x="3542" fg:w="4"/><text x="52.2923%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_calloc (1 samples, 0.01%)</title><rect x="52.1011%" y="165" width="0.0147%" height="15" fill="rgb(250,87,22)" fg:x="3546" fg:w="1"/><text x="52.3511%" y="175.50"></text></g><g><title>itsi_server.bundle`itsi_server::server::middleware_stack::MiddlewareSet::stack_for (39 samples, 0.57%)</title><rect x="51.5868%" y="181" width="0.5730%" height="15" fill="rgb(239,43,17)" fg:x="3511" fg:w="39"/><text x="51.8368%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (3 samples, 0.04%)</title><rect x="52.1158%" y="165" width="0.0441%" height="15" fill="rgb(231,177,25)" fg:x="3547" fg:w="3"/><text x="52.3658%" y="175.50"></text></g><g><title>itsi_server.bundle`DYLD-STUB$$clock_gettime (1 samples, 0.01%)</title><rect x="52.1599%" y="165" width="0.0147%" height="15" fill="rgb(219,179,1)" fg:x="3550" fg:w="1"/><text x="52.4099%" y="175.50"></text></g><g><title>libsystem_c.dylib`DYLD-STUB$$mach_timebase_info (4 samples, 0.06%)</title><rect x="52.2039%" y="133" width="0.0588%" height="15" fill="rgb(238,219,53)" fg:x="3553" fg:w="4"/><text x="52.4539%" y="143.50"></text></g><g><title>libsystem_kernel.dylib`mach_absolute_time (20 samples, 0.29%)</title><rect x="52.2627%" y="133" width="0.2939%" height="15" fill="rgb(232,167,36)" fg:x="3557" fg:w="20"/><text x="52.5127%" y="143.50"></text></g><g><title>itsi_server.bundle`std::sys::pal::unix::time::Timespec::now (29 samples, 0.43%)</title><rect x="52.1746%" y="165" width="0.4261%" height="15" fill="rgb(244,19,51)" fg:x="3551" fg:w="29"/><text x="52.4246%" y="175.50"></text></g><g><title>libsystem_c.dylib`clock_gettime (29 samples, 0.43%)</title><rect x="52.1746%" y="149" width="0.4261%" height="15" fill="rgb(224,6,22)" fg:x="3551" fg:w="29"/><text x="52.4246%" y="159.50"></text></g><g><title>libsystem_kernel.dylib`mach_timebase_info (3 samples, 0.04%)</title><rect x="52.5566%" y="133" width="0.0441%" height="15" fill="rgb(224,145,5)" fg:x="3577" fg:w="3"/><text x="52.8066%" y="143.50"></text></g><g><title>libsystem_c.dylib`clock_gettime (1 samples, 0.01%)</title><rect x="52.6006%" y="165" width="0.0147%" height="15" fill="rgb(234,130,49)" fg:x="3580" fg:w="1"/><text x="52.8506%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`rack_get_thread_index (1 samples, 0.01%)</title><rect x="52.6153%" y="149" width="0.0147%" height="15" fill="rgb(254,6,2)" fg:x="3581" fg:w="1"/><text x="52.8653%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (1 samples, 0.01%)</title><rect x="52.6300%" y="149" width="0.0147%" height="15" fill="rgb(208,96,46)" fg:x="3582" fg:w="1"/><text x="52.8800%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`set_tiny_meta_header_in_use (4 samples, 0.06%)</title><rect x="52.6741%" y="133" width="0.0588%" height="15" fill="rgb(239,3,39)" fg:x="3585" fg:w="4"/><text x="52.9241%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`_tiny_check_and_zero_inline_meta_from_freelist (1 samples, 0.01%)</title><rect x="52.8357%" y="117" width="0.0147%" height="15" fill="rgb(233,210,1)" fg:x="3596" fg:w="1"/><text x="53.0857%" y="127.50"></text></g><g><title>itsi_server.bundle`itsi_server::services::itsi_http_service::HttpRequestContext::new (49 samples, 0.72%)</title><rect x="52.1599%" y="181" width="0.7200%" height="15" fill="rgb(244,137,37)" fg:x="3550" fg:w="49"/><text x="52.4099%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (18 samples, 0.26%)</title><rect x="52.6153%" y="165" width="0.2645%" height="15" fill="rgb(240,136,2)" fg:x="3581" fg:w="18"/><text x="52.8653%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (16 samples, 0.24%)</title><rect x="52.6447%" y="149" width="0.2351%" height="15" fill="rgb(239,18,37)" fg:x="3583" fg:w="16"/><text x="52.8947%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (10 samples, 0.15%)</title><rect x="52.7329%" y="133" width="0.1469%" height="15" fill="rgb(218,185,22)" fg:x="3589" fg:w="10"/><text x="52.9829%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_add_ptr (2 samples, 0.03%)</title><rect x="52.8504%" y="117" width="0.0294%" height="15" fill="rgb(225,218,4)" fg:x="3597" fg:w="2"/><text x="53.1004%" y="127.50"></text></g><g><title>itsi_server.bundle`regex_automata::util::search::PatternSet::new (2 samples, 0.03%)</title><rect x="52.8798%" y="181" width="0.0294%" height="15" fill="rgb(230,182,32)" fg:x="3599" fg:w="2"/><text x="53.1298%" y="191.50"></text></g><g><title>itsi_server.bundle`std::sys::pal::unix::time::Timespec::now (1 samples, 0.01%)</title><rect x="52.9092%" y="181" width="0.0147%" height="15" fill="rgb(242,56,43)" fg:x="3601" fg:w="1"/><text x="53.1592%" y="191.50"></text></g><g><title>libdyld.dylib`tlv_get_addr (9 samples, 0.13%)</title><rect x="52.9239%" y="181" width="0.1322%" height="15" fill="rgb(233,99,24)" fg:x="3602" fg:w="9"/><text x="53.1739%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`DYLD-STUB$$_platform_bzero (1 samples, 0.01%)</title><rect x="53.0561%" y="181" width="0.0147%" height="15" fill="rgb(234,209,42)" fg:x="3611" fg:w="1"/><text x="53.3061%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`_free (2 samples, 0.03%)</title><rect x="53.0708%" y="181" width="0.0294%" height="15" fill="rgb(227,7,12)" fg:x="3612" fg:w="2"/><text x="53.3208%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (3 samples, 0.04%)</title><rect x="53.1002%" y="181" width="0.0441%" height="15" fill="rgb(245,203,43)" fg:x="3614" fg:w="3"/><text x="53.3502%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`_szone_free (2 samples, 0.03%)</title><rect x="53.1443%" y="181" width="0.0294%" height="15" fill="rgb(238,205,33)" fg:x="3617" fg:w="2"/><text x="53.3943%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`free (1 samples, 0.01%)</title><rect x="53.1737%" y="181" width="0.0147%" height="15" fill="rgb(231,56,7)" fg:x="3619" fg:w="1"/><text x="53.4237%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`get_tiny_previous_free_msize (2 samples, 0.03%)</title><rect x="53.3059%" y="165" width="0.0294%" height="15" fill="rgb(244,186,29)" fg:x="3628" fg:w="2"/><text x="53.5559%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_add_ptr (4 samples, 0.06%)</title><rect x="53.4234%" y="149" width="0.0588%" height="15" fill="rgb(234,111,31)" fg:x="3636" fg:w="4"/><text x="53.6734%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (21 samples, 0.31%)</title><rect x="53.1884%" y="181" width="0.3086%" height="15" fill="rgb(241,149,10)" fg:x="3620" fg:w="21"/><text x="53.4384%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (11 samples, 0.16%)</title><rect x="53.3353%" y="165" width="0.1616%" height="15" fill="rgb(249,206,44)" fg:x="3630" fg:w="11"/><text x="53.5853%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_remove_ptr (1 samples, 0.01%)</title><rect x="53.4822%" y="149" width="0.0147%" height="15" fill="rgb(251,153,30)" fg:x="3640" fg:w="1"/><text x="53.7322%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`rack_get_thread_index (1 samples, 0.01%)</title><rect x="53.4969%" y="165" width="0.0147%" height="15" fill="rgb(239,152,38)" fg:x="3641" fg:w="1"/><text x="53.7469%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`set_tiny_meta_header_in_use (10 samples, 0.15%)</title><rect x="53.5410%" y="149" width="0.1469%" height="15" fill="rgb(249,139,47)" fg:x="3644" fg:w="10"/><text x="53.7910%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`_tiny_check_and_zero_inline_meta_from_freelist (2 samples, 0.03%)</title><rect x="53.8055%" y="133" width="0.0294%" height="15" fill="rgb(244,64,35)" fg:x="3662" fg:w="2"/><text x="54.0555%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (27 samples, 0.40%)</title><rect x="53.4969%" y="181" width="0.3967%" height="15" fill="rgb(216,46,15)" fg:x="3641" fg:w="27"/><text x="53.7469%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (26 samples, 0.38%)</title><rect x="53.5116%" y="165" width="0.3820%" height="15" fill="rgb(250,74,19)" fg:x="3642" fg:w="26"/><text x="53.7616%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (14 samples, 0.21%)</title><rect x="53.6879%" y="149" width="0.2057%" height="15" fill="rgb(249,42,33)" fg:x="3654" fg:w="14"/><text x="53.9379%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_add_ptr (4 samples, 0.06%)</title><rect x="53.8349%" y="133" width="0.0588%" height="15" fill="rgb(242,149,17)" fg:x="3664" fg:w="4"/><text x="54.0849%" y="143.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (11 samples, 0.16%)</title><rect x="53.8936%" y="181" width="0.1616%" height="15" fill="rgb(244,29,21)" fg:x="3668" fg:w="11"/><text x="54.1436%" y="191.50"></text></g><g><title>itsi_server.bundle`hyper::proto::h1::dispatch::Dispatcher&lt;D,Bs,I,T&gt;::poll_catch (3,404 samples, 50.01%)</title><rect x="4.0552%" y="197" width="50.0147%" height="15" fill="rgb(220,130,37)" fg:x="276" fg:w="3404"/><text x="4.3052%" y="207.50">itsi_server.bundle`hyper::proto::h1::dispatch::Dispatcher&lt;D,Bs,I,T&gt;::poll_catch</text></g><g><title>libsystem_platform.dylib`_platform_memset (1 samples, 0.01%)</title><rect x="54.0552%" y="181" width="0.0147%" height="15" fill="rgb(211,67,2)" fg:x="3679" fg:w="1"/><text x="54.3052%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`_free (3 samples, 0.04%)</title><rect x="54.0699%" y="197" width="0.0441%" height="15" fill="rgb(235,68,52)" fg:x="3680" fg:w="3"/><text x="54.3199%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (1 samples, 0.01%)</title><rect x="54.1140%" y="197" width="0.0147%" height="15" fill="rgb(246,142,3)" fg:x="3683" fg:w="1"/><text x="54.3640%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`malloc (1 samples, 0.01%)</title><rect x="54.1287%" y="197" width="0.0147%" height="15" fill="rgb(241,25,7)" fg:x="3684" fg:w="1"/><text x="54.3787%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (2 samples, 0.03%)</title><rect x="54.1434%" y="197" width="0.0294%" height="15" fill="rgb(242,119,39)" fg:x="3685" fg:w="2"/><text x="54.3934%" y="207.50"></text></g><g><title>itsi_server.bundle`&lt;hyper::server::conn::http1::UpgradeableConnection&lt;I,S&gt; as core::future::future::Future&gt;::poll (3,452 samples, 50.72%)</title><rect x="3.8789%" y="213" width="50.7200%" height="15" fill="rgb(241,98,45)" fg:x="264" fg:w="3452"/><text x="4.1289%" y="223.50">itsi_server.bundle`&lt;hyper::server::conn::http1::UpgradeableConnection&lt;I,S&gt; as core:..</text></g><g><title>libsystem_platform.dylib`_platform_memmove (29 samples, 0.43%)</title><rect x="54.1728%" y="197" width="0.4261%" height="15" fill="rgb(254,28,30)" fg:x="3687" fg:w="29"/><text x="54.4228%" y="207.50"></text></g><g><title>itsi_server.bundle`&lt;hyper_util::server::conn::auto::UpgradeableConnection&lt;I,S,E&gt; as core::future::future::Future&gt;::poll (3,460 samples, 50.84%)</title><rect x="3.8055%" y="229" width="50.8375%" height="15" fill="rgb(241,142,54)" fg:x="259" fg:w="3460"/><text x="4.0555%" y="239.50">itsi_server.bundle`&lt;hyper_util::server::conn::auto::UpgradeableConnection&lt;I,S,E&gt; as ..</text></g><g><title>itsi_server.bundle`hyper::proto::h1::dispatch::Dispatcher&lt;D,Bs,I,T&gt;::poll_catch (3 samples, 0.04%)</title><rect x="54.5989%" y="213" width="0.0441%" height="15" fill="rgb(222,85,15)" fg:x="3716" fg:w="3"/><text x="54.8489%" y="223.50"></text></g><g><title>itsi_server.bundle`tokio::runtime::context::thread_rng_n (1 samples, 0.01%)</title><rect x="54.6430%" y="229" width="0.0147%" height="15" fill="rgb(210,85,47)" fg:x="3719" fg:w="1"/><text x="54.8930%" y="239.50"></text></g><g><title>itsi_server.bundle`&lt;tokio::task::coop::RestoreOnPending as core::ops::drop::Drop&gt;::drop (6 samples, 0.09%)</title><rect x="54.6870%" y="197" width="0.0882%" height="15" fill="rgb(224,206,25)" fg:x="3722" fg:w="6"/><text x="54.9370%" y="207.50"></text></g><g><title>itsi_server.bundle`&lt;tokio::task::coop::Coop&lt;F&gt; as core::future::future::Future&gt;::poll (19 samples, 0.28%)</title><rect x="54.6577%" y="213" width="0.2792%" height="15" fill="rgb(243,201,19)" fg:x="3720" fg:w="19"/><text x="54.9077%" y="223.50"></text></g><g><title>itsi_server.bundle`tokio::sync::notify::Notified::poll_notified (11 samples, 0.16%)</title><rect x="54.7752%" y="197" width="0.1616%" height="15" fill="rgb(236,59,4)" fg:x="3728" fg:w="11"/><text x="55.0252%" y="207.50"></text></g><g><title>itsi_server.bundle`tokio::sync::notify::Notified::poll_notified (2 samples, 0.03%)</title><rect x="54.9368%" y="213" width="0.0294%" height="15" fill="rgb(254,179,45)" fg:x="3739" fg:w="2"/><text x="55.1868%" y="223.50"></text></g><g><title>itsi_server.bundle`tokio::sync::watch::Receiver&lt;T&gt;::changed::_{{closure}} (26 samples, 0.38%)</title><rect x="54.6577%" y="229" width="0.3820%" height="15" fill="rgb(226,14,10)" fg:x="3720" fg:w="26"/><text x="54.9077%" y="239.50"></text></g><g><title>libdyld.dylib`tlv_get_addr (5 samples, 0.07%)</title><rect x="54.9662%" y="213" width="0.0735%" height="15" fill="rgb(244,27,41)" fg:x="3741" fg:w="5"/><text x="55.2162%" y="223.50"></text></g><g><title>itsi_server.bundle`&lt;core::future::poll_fn::PollFn&lt;F&gt; as core::future::future::Future&gt;::poll (3,505 samples, 51.50%)</title><rect x="3.6879%" y="245" width="51.4987%" height="15" fill="rgb(235,35,32)" fg:x="251" fg:w="3505"/><text x="3.9379%" y="255.50">itsi_server.bundle`&lt;core::future::poll_fn::PollFn&lt;F&gt; as core::future::future::Future&gt;..</text></g><g><title>libdyld.dylib`tlv_get_addr (10 samples, 0.15%)</title><rect x="55.0397%" y="229" width="0.1469%" height="15" fill="rgb(218,68,31)" fg:x="3746" fg:w="10"/><text x="55.2897%" y="239.50"></text></g><g><title>itsi_server.bundle`&lt;hyper_util::server::conn::auto::UpgradeableConnection&lt;I,S,E&gt; as core::future::future::Future&gt;::poll (2 samples, 0.03%)</title><rect x="55.1866%" y="245" width="0.0294%" height="15" fill="rgb(207,120,37)" fg:x="3756" fg:w="2"/><text x="55.4366%" y="255.50"></text></g><g><title>itsi_server.bundle`tokio::sync::watch::Receiver&lt;T&gt;::changed::_{{closure}} (1 samples, 0.01%)</title><rect x="55.2160%" y="245" width="0.0147%" height="15" fill="rgb(227,98,0)" fg:x="3758" fg:w="1"/><text x="55.4660%" y="255.50"></text></g><g><title>itsi_server.bundle`itsi_server::server::serve_strategy::acceptor::Acceptor::serve_connection::_{{closure}}::_{{closure}} (3,517 samples, 51.67%)</title><rect x="3.5998%" y="261" width="51.6750%" height="15" fill="rgb(207,7,3)" fg:x="245" fg:w="3517"/><text x="3.8498%" y="271.50">itsi_server.bundle`itsi_server::server::serve_strategy::acceptor::Acceptor::serve_con..</text></g><g><title>libdyld.dylib`tlv_get_addr (3 samples, 0.04%)</title><rect x="55.2307%" y="245" width="0.0441%" height="15" fill="rgb(206,98,19)" fg:x="3759" fg:w="3"/><text x="55.4807%" y="255.50"></text></g><g><title>itsi_server.bundle`tokio::runtime::task::core::Core&lt;T,S&gt;::poll (3,527 samples, 51.82%)</title><rect x="3.5410%" y="277" width="51.8219%" height="15" fill="rgb(217,5,26)" fg:x="241" fg:w="3527"/><text x="3.7910%" y="287.50">itsi_server.bundle`tokio::runtime::task::core::Core&lt;T,S&gt;::poll</text></g><g><title>libdyld.dylib`tlv_get_addr (6 samples, 0.09%)</title><rect x="55.2748%" y="261" width="0.0882%" height="15" fill="rgb(235,190,38)" fg:x="3762" fg:w="6"/><text x="55.5248%" y="271.50"></text></g><g><title>itsi_server.bundle`tokio::runtime::task::core::TaskIdGuard::enter (1 samples, 0.01%)</title><rect x="55.3629%" y="277" width="0.0147%" height="15" fill="rgb(247,86,24)" fg:x="3768" fg:w="1"/><text x="55.6129%" y="287.50"></text></g><g><title>itsi_server.bundle`tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll (3,535 samples, 51.94%)</title><rect x="3.4822%" y="293" width="51.9395%" height="15" fill="rgb(205,101,16)" fg:x="237" fg:w="3535"/><text x="3.7322%" y="303.50">itsi_server.bundle`tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll</text></g><g><title>itsi_server.bundle`tokio::runtime::task::state::State::transition_to_idle (3 samples, 0.04%)</title><rect x="55.3776%" y="277" width="0.0441%" height="15" fill="rgb(246,168,33)" fg:x="3769" fg:w="3"/><text x="55.6276%" y="287.50"></text></g><g><title>itsi_server.bundle`tokio::runtime::scheduler::current_thread::CoreGuard::block_on (3,777 samples, 55.50%)</title><rect x="0.0000%" y="309" width="55.4952%" height="15" fill="rgb(231,114,1)" fg:x="0" fg:w="3777"/><text x="0.2500%" y="319.50">itsi_server.bundle`tokio::runtime::scheduler::current_thread::CoreGuard::block_on</text></g><g><title>libdyld.dylib`tlv_get_addr (5 samples, 0.07%)</title><rect x="55.4217%" y="293" width="0.0735%" height="15" fill="rgb(207,184,53)" fg:x="3772" fg:w="5"/><text x="55.6717%" y="303.50"></text></g><g><title>itsi_server.bundle`tokio::runtime::scheduler::defer::Defer::is_empty (1 samples, 0.01%)</title><rect x="55.4952%" y="309" width="0.0147%" height="15" fill="rgb(224,95,51)" fg:x="3777" fg:w="1"/><text x="55.7452%" y="319.50"></text></g><g><title>itsi_server.bundle`tokio::runtime::task::raw::RawTask::poll (1 samples, 0.01%)</title><rect x="55.5098%" y="309" width="0.0147%" height="15" fill="rgb(212,188,45)" fg:x="3778" fg:w="1"/><text x="55.7598%" y="319.50"></text></g><g><title>dyld`start (3,784 samples, 55.60%)</title><rect x="0.0000%" y="837" width="55.5980%" height="15" fill="rgb(223,154,38)" fg:x="0" fg:w="3784"/><text x="0.2500%" y="847.50">dyld`start</text></g><g><title>ruby`main (3,784 samples, 55.60%)</title><rect x="0.0000%" y="821" width="55.5980%" height="15" fill="rgb(251,22,52)" fg:x="0" fg:w="3784"/><text x="0.2500%" y="831.50">ruby`main</text></g><g><title>libruby.3.4.dylib`ruby_run_node (3,784 samples, 55.60%)</title><rect x="0.0000%" y="805" width="55.5980%" height="15" fill="rgb(229,209,22)" fg:x="0" fg:w="3784"/><text x="0.2500%" y="815.50">libruby.3.4.dylib`ruby_run_node</text></g><g><title>libruby.3.4.dylib`rb_ec_exec_node (3,784 samples, 55.60%)</title><rect x="0.0000%" y="789" width="55.5980%" height="15" fill="rgb(234,138,34)" fg:x="0" fg:w="3784"/><text x="0.2500%" y="799.50">libruby.3.4.dylib`rb_ec_exec_node</text></g><g><title>libruby.3.4.dylib`rb_vm_exec (3,784 samples, 55.60%)</title><rect x="0.0000%" y="773" width="55.5980%" height="15" fill="rgb(212,95,11)" fg:x="0" fg:w="3784"/><text x="0.2500%" y="783.50">libruby.3.4.dylib`rb_vm_exec</text></g><g><title>libruby.3.4.dylib`vm_exec_core (3,784 samples, 55.60%)</title><rect x="0.0000%" y="757" width="55.5980%" height="15" fill="rgb(240,179,47)" fg:x="0" fg:w="3784"/><text x="0.2500%" y="767.50">libruby.3.4.dylib`vm_exec_core</text></g><g><title>libruby.3.4.dylib`vm_call_cfunc_with_frame_ (3,784 samples, 55.60%)</title><rect x="0.0000%" y="741" width="55.5980%" height="15" fill="rgb(240,163,11)" fg:x="0" fg:w="3784"/><text x="0.2500%" y="751.50">libruby.3.4.dylib`vm_call_cfunc_with_frame_</text></g><g><title>libruby.3.4.dylib`rb_f_load (3,784 samples, 55.60%)</title><rect x="0.0000%" y="725" width="55.5980%" height="15" fill="rgb(236,37,12)" fg:x="0" fg:w="3784"/><text x="0.2500%" y="735.50">libruby.3.4.dylib`rb_f_load</text></g><g><title>libruby.3.4.dylib`rb_load_internal (3,784 samples, 55.60%)</title><rect x="0.0000%" y="709" width="55.5980%" height="15" fill="rgb(232,164,16)" fg:x="0" fg:w="3784"/><text x="0.2500%" y="719.50">libruby.3.4.dylib`rb_load_internal</text></g><g><title>libruby.3.4.dylib`load_iseq_eval (3,784 samples, 55.60%)</title><rect x="0.0000%" y="693" width="55.5980%" height="15" fill="rgb(244,205,15)" fg:x="0" fg:w="3784"/><text x="0.2500%" y="703.50">libruby.3.4.dylib`load_iseq_eval</text></g><g><title>libruby.3.4.dylib`rb_vm_exec (3,784 samples, 55.60%)</title><rect x="0.0000%" y="677" width="55.5980%" height="15" fill="rgb(223,117,47)" fg:x="0" fg:w="3784"/><text x="0.2500%" y="687.50">libruby.3.4.dylib`rb_vm_exec</text></g><g><title>libruby.3.4.dylib`vm_exec_core (3,784 samples, 55.60%)</title><rect x="0.0000%" y="661" width="55.5980%" height="15" fill="rgb(244,107,35)" fg:x="0" fg:w="3784"/><text x="0.2500%" y="671.50">libruby.3.4.dylib`vm_exec_core</text></g><g><title>libruby.3.4.dylib`vm_call_cfunc_with_frame_ (3,784 samples, 55.60%)</title><rect x="0.0000%" y="645" width="55.5980%" height="15" fill="rgb(205,140,8)" fg:x="0" fg:w="3784"/><text x="0.2500%" y="655.50">libruby.3.4.dylib`vm_call_cfunc_with_frame_</text></g><g><title>libruby.3.4.dylib`rb_f_load (3,784 samples, 55.60%)</title><rect x="0.0000%" y="629" width="55.5980%" height="15" fill="rgb(228,84,46)" fg:x="0" fg:w="3784"/><text x="0.2500%" y="639.50">libruby.3.4.dylib`rb_f_load</text></g><g><title>libruby.3.4.dylib`rb_load_internal (3,784 samples, 55.60%)</title><rect x="0.0000%" y="613" width="55.5980%" height="15" fill="rgb(254,188,9)" fg:x="0" fg:w="3784"/><text x="0.2500%" y="623.50">libruby.3.4.dylib`rb_load_internal</text></g><g><title>libruby.3.4.dylib`load_iseq_eval (3,784 samples, 55.60%)</title><rect x="0.0000%" y="597" width="55.5980%" height="15" fill="rgb(206,112,54)" fg:x="0" fg:w="3784"/><text x="0.2500%" y="607.50">libruby.3.4.dylib`load_iseq_eval</text></g><g><title>libruby.3.4.dylib`rb_vm_exec (3,784 samples, 55.60%)</title><rect x="0.0000%" y="581" width="55.5980%" height="15" fill="rgb(216,84,49)" fg:x="0" fg:w="3784"/><text x="0.2500%" y="591.50">libruby.3.4.dylib`rb_vm_exec</text></g><g><title>libruby.3.4.dylib`vm_exec_core (3,784 samples, 55.60%)</title><rect x="0.0000%" y="565" width="55.5980%" height="15" fill="rgb(214,194,35)" fg:x="0" fg:w="3784"/><text x="0.2500%" y="575.50">libruby.3.4.dylib`vm_exec_core</text></g><g><title>libruby.3.4.dylib`vm_call_cfunc_with_frame_ (3,784 samples, 55.60%)</title><rect x="0.0000%" y="549" width="55.5980%" height="15" fill="rgb(249,28,3)" fg:x="0" fg:w="3784"/><text x="0.2500%" y="559.50">libruby.3.4.dylib`vm_call_cfunc_with_frame_</text></g><g><title>libruby.3.4.dylib`rb_f_load (3,784 samples, 55.60%)</title><rect x="0.0000%" y="533" width="55.5980%" height="15" fill="rgb(222,56,52)" fg:x="0" fg:w="3784"/><text x="0.2500%" y="543.50">libruby.3.4.dylib`rb_f_load</text></g><g><title>libruby.3.4.dylib`rb_load_internal (3,784 samples, 55.60%)</title><rect x="0.0000%" y="517" width="55.5980%" height="15" fill="rgb(245,217,50)" fg:x="0" fg:w="3784"/><text x="0.2500%" y="527.50">libruby.3.4.dylib`rb_load_internal</text></g><g><title>libruby.3.4.dylib`load_iseq_eval (3,784 samples, 55.60%)</title><rect x="0.0000%" y="501" width="55.5980%" height="15" fill="rgb(213,201,24)" fg:x="0" fg:w="3784"/><text x="0.2500%" y="511.50">libruby.3.4.dylib`load_iseq_eval</text></g><g><title>libruby.3.4.dylib`rb_vm_exec (3,784 samples, 55.60%)</title><rect x="0.0000%" y="485" width="55.5980%" height="15" fill="rgb(248,116,28)" fg:x="0" fg:w="3784"/><text x="0.2500%" y="495.50">libruby.3.4.dylib`rb_vm_exec</text></g><g><title>libruby.3.4.dylib`vm_exec_core (3,784 samples, 55.60%)</title><rect x="0.0000%" y="469" width="55.5980%" height="15" fill="rgb(219,72,43)" fg:x="0" fg:w="3784"/><text x="0.2500%" y="479.50">libruby.3.4.dylib`vm_exec_core</text></g><g><title>libruby.3.4.dylib`vm_call_cfunc_with_frame_ (3,784 samples, 55.60%)</title><rect x="0.0000%" y="453" width="55.5980%" height="15" fill="rgb(209,138,14)" fg:x="0" fg:w="3784"/><text x="0.2500%" y="463.50">libruby.3.4.dylib`vm_call_cfunc_with_frame_</text></g><g><title>itsi_server.bundle`itsi_server::init::anon (3,784 samples, 55.60%)</title><rect x="0.0000%" y="437" width="55.5980%" height="15" fill="rgb(222,18,33)" fg:x="0" fg:w="3784"/><text x="0.2500%" y="447.50">itsi_server.bundle`itsi_server::init::anon</text></g><g><title>itsi_server.bundle`itsi_server::ruby_types::itsi_server::ItsiServer::start (3,784 samples, 55.60%)</title><rect x="0.0000%" y="421" width="55.5980%" height="15" fill="rgb(213,199,7)" fg:x="0" fg:w="3784"/><text x="0.2500%" y="431.50">itsi_server.bundle`itsi_server::ruby_types::itsi_server::ItsiServer::start</text></g><g><title>itsi_server.bundle`itsi_server::ruby_types::itsi_server::ItsiServer::build_and_run_strategy (3,784 samples, 55.60%)</title><rect x="0.0000%" y="405" width="55.5980%" height="15" fill="rgb(250,110,10)" fg:x="0" fg:w="3784"/><text x="0.2500%" y="415.50">itsi_server.bundle`itsi_server::ruby_types::itsi_server::ItsiServer::build_and_run_strategy</text></g><g><title>libruby.3.4.dylib`rb_nogvl (3,784 samples, 55.60%)</title><rect x="0.0000%" y="389" width="55.5980%" height="15" fill="rgb(248,123,6)" fg:x="0" fg:w="3784"/><text x="0.2500%" y="399.50">libruby.3.4.dylib`rb_nogvl</text></g><g><title>itsi_server.bundle`itsi_rb_helpers::call_without_gvl::trampoline (3,784 samples, 55.60%)</title><rect x="0.0000%" y="373" width="55.5980%" height="15" fill="rgb(206,91,31)" fg:x="0" fg:w="3784"/><text x="0.2500%" y="383.50">itsi_server.bundle`itsi_rb_helpers::call_without_gvl::trampoline</text></g><g><title>itsi_server.bundle`itsi_server::server::serve_strategy::single_mode::SingleMode::run (3,784 samples, 55.60%)</title><rect x="0.0000%" y="357" width="55.5980%" height="15" fill="rgb(211,154,13)" fg:x="0" fg:w="3784"/><text x="0.2500%" y="367.50">itsi_server.bundle`itsi_server::server::serve_strategy::single_mode::SingleMode::run</text></g><g><title>itsi_server.bundle`tokio::runtime::runtime::Runtime::block_on (3,784 samples, 55.60%)</title><rect x="0.0000%" y="341" width="55.5980%" height="15" fill="rgb(225,148,7)" fg:x="0" fg:w="3784"/><text x="0.2500%" y="351.50">itsi_server.bundle`tokio::runtime::runtime::Runtime::block_on</text></g><g><title>itsi_server.bundle`tokio::runtime::context::runtime::enter_runtime (3,784 samples, 55.60%)</title><rect x="0.0000%" y="325" width="55.5980%" height="15" fill="rgb(220,160,43)" fg:x="0" fg:w="3784"/><text x="0.2500%" y="335.50">itsi_server.bundle`tokio::runtime::context::runtime::enter_runtime</text></g><g><title>libdyld.dylib`tlv_get_addr (5 samples, 0.07%)</title><rect x="55.5245%" y="309" width="0.0735%" height="15" fill="rgb(213,52,39)" fg:x="3779" fg:w="5"/><text x="55.7745%" y="319.50"></text></g><g><title>itsi_server.bundle`&lt;event_listener_strategy::Blocking as event_listener_strategy::Strategy&gt;::poll (1 samples, 0.01%)</title><rect x="55.5980%" y="725" width="0.0147%" height="15" fill="rgb(243,137,7)" fg:x="3784" fg:w="1"/><text x="55.8480%" y="735.50"></text></g><g><title>itsi_server.bundle`core::ptr::drop_in_place&lt;event_listener::InnerListener&lt;(),alloc::sync::Arc&lt;event_listener::Inner&lt;()&gt;&gt;&gt;&gt; (1 samples, 0.01%)</title><rect x="55.6274%" y="693" width="0.0147%" height="15" fill="rgb(230,79,13)" fg:x="3786" fg:w="1"/><text x="55.8774%" y="703.50"></text></g><g><title>itsi_server.bundle`std::sys::pal::unix::sync::mutex::Mutex::unlock (1 samples, 0.01%)</title><rect x="55.6274%" y="677" width="0.0147%" height="15" fill="rgb(247,105,23)" fg:x="3786" fg:w="1"/><text x="55.8774%" y="687.50"></text></g><g><title>itsi_server.bundle`event_listener::TaskRef::into_task (1 samples, 0.01%)</title><rect x="55.6421%" y="693" width="0.0147%" height="15" fill="rgb(223,179,41)" fg:x="3787" fg:w="1"/><text x="55.8921%" y="703.50"></text></g><g><title>itsi_server.bundle`event_listener::sys::Inner&lt;T&gt;::remove (1 samples, 0.01%)</title><rect x="55.6862%" y="677" width="0.0147%" height="15" fill="rgb(218,9,34)" fg:x="3790" fg:w="1"/><text x="55.9362%" y="687.50"></text></g><g><title>itsi_server.bundle`event_listener::sys::_&lt;impl event_listener::Inner&lt;T&gt;&gt;::with_inner (4 samples, 0.06%)</title><rect x="55.6568%" y="693" width="0.0588%" height="15" fill="rgb(222,106,8)" fg:x="3788" fg:w="4"/><text x="55.9068%" y="703.50"></text></g><g><title>itsi_server.bundle`std::sys::pal::unix::sync::mutex::Mutex::lock (1 samples, 0.01%)</title><rect x="55.7009%" y="677" width="0.0147%" height="15" fill="rgb(211,220,0)" fg:x="3791" fg:w="1"/><text x="55.9509%" y="687.50"></text></g><g><title>libsystem_pthread.dylib`pthread_mutex_lock (1 samples, 0.01%)</title><rect x="55.7009%" y="661" width="0.0147%" height="15" fill="rgb(229,52,16)" fg:x="3791" fg:w="1"/><text x="55.9509%" y="671.50"></text></g><g><title>itsi_server.bundle`std::sys::pal::unix::sync::mutex::Mutex::lock (1 samples, 0.01%)</title><rect x="55.7743%" y="677" width="0.0147%" height="15" fill="rgb(212,155,18)" fg:x="3796" fg:w="1"/><text x="56.0243%" y="687.50"></text></g><g><title>libsystem_kernel.dylib`__psynch_cvwait (75 samples, 1.10%)</title><rect x="55.7890%" y="677" width="1.1020%" height="15" fill="rgb(242,21,14)" fg:x="3797" fg:w="75"/><text x="56.0390%" y="687.50"></text></g><g><title>itsi_server.bundle`&lt;event_listener_strategy::Blocking as event_listener_strategy::Strategy&gt;::poll (88 samples, 1.29%)</title><rect x="55.6127%" y="709" width="1.2930%" height="15" fill="rgb(222,19,48)" fg:x="3785" fg:w="88"/><text x="55.8627%" y="719.50"></text></g><g><title>itsi_server.bundle`parking::Inner::park (81 samples, 1.19%)</title><rect x="55.7155%" y="693" width="1.1901%" height="15" fill="rgb(232,45,27)" fg:x="3792" fg:w="81"/><text x="55.9655%" y="703.50"></text></g><g><title>libsystem_pthread.dylib`_pthread_cond_wait (1 samples, 0.01%)</title><rect x="56.8910%" y="677" width="0.0147%" height="15" fill="rgb(249,103,42)" fg:x="3872" fg:w="1"/><text x="57.1410%" y="687.50"></text></g><g><title>libsystem_pthread.dylib`pthread_testcancel (1 samples, 0.01%)</title><rect x="56.8910%" y="661" width="0.0147%" height="15" fill="rgb(246,81,33)" fg:x="3872" fg:w="1"/><text x="57.1410%" y="671.50"></text></g><g><title>itsi_server.bundle`async_channel::Receiver&lt;T&gt;::try_recv (3 samples, 0.04%)</title><rect x="56.9057%" y="709" width="0.0441%" height="15" fill="rgb(252,33,42)" fg:x="3873" fg:w="3"/><text x="57.1557%" y="719.50"></text></g><g><title>libsystem_pthread.dylib`pthread_mutex_unlock (1 samples, 0.01%)</title><rect x="56.9351%" y="693" width="0.0147%" height="15" fill="rgb(209,212,41)" fg:x="3875" fg:w="1"/><text x="57.1851%" y="703.50"></text></g><g><title>itsi_server.bundle`event_listener::Event&lt;T&gt;::listen (1 samples, 0.01%)</title><rect x="56.9498%" y="709" width="0.0147%" height="15" fill="rgb(207,154,6)" fg:x="3876" fg:w="1"/><text x="57.1998%" y="719.50"></text></g><g><title>libsystem_pthread.dylib`pthread_mutex_unlock (1 samples, 0.01%)</title><rect x="56.9498%" y="693" width="0.0147%" height="15" fill="rgb(223,64,47)" fg:x="3876" fg:w="1"/><text x="57.1998%" y="703.50"></text></g><g><title>itsi_server.bundle`event_listener::sys::_&lt;impl event_listener::Inner&lt;T&gt;&gt;::with_inner (1 samples, 0.01%)</title><rect x="56.9644%" y="709" width="0.0147%" height="15" fill="rgb(211,161,38)" fg:x="3877" fg:w="1"/><text x="57.2144%" y="719.50"></text></g><g><title>itsi_server.bundle`&lt;magnus::value::LazyId as core::ops::deref::Deref&gt;::deref (1 samples, 0.01%)</title><rect x="57.0673%" y="677" width="0.0147%" height="15" fill="rgb(219,138,40)" fg:x="3884" fg:w="1"/><text x="57.3173%" y="687.50"></text></g><g><title>itsi_server.bundle`event_listener::sys::Inner&lt;T&gt;::notify (7 samples, 0.10%)</title><rect x="57.1261%" y="661" width="0.1029%" height="15" fill="rgb(241,228,46)" fg:x="3888" fg:w="7"/><text x="57.3761%" y="671.50"></text></g><g><title>itsi_server.bundle`event_listener::sys::_&lt;impl event_listener::Inner&lt;T&gt;&gt;::notify (4 samples, 0.06%)</title><rect x="57.2289%" y="661" width="0.0588%" height="15" fill="rgb(223,209,38)" fg:x="3895" fg:w="4"/><text x="57.4789%" y="671.50"></text></g><g><title>itsi_server.bundle`std::sys::pal::unix::sync::mutex::Mutex::lock (3 samples, 0.04%)</title><rect x="57.2436%" y="645" width="0.0441%" height="15" fill="rgb(236,164,45)" fg:x="3896" fg:w="3"/><text x="57.4936%" y="655.50"></text></g><g><title>libsystem_pthread.dylib`pthread_mutex_lock (2 samples, 0.03%)</title><rect x="57.2583%" y="629" width="0.0294%" height="15" fill="rgb(231,15,5)" fg:x="3897" fg:w="2"/><text x="57.5083%" y="639.50"></text></g><g><title>itsi_server.bundle`std::sys::pal::unix::sync::mutex::Mutex::unlock (20 samples, 0.29%)</title><rect x="57.2877%" y="661" width="0.2939%" height="15" fill="rgb(252,35,15)" fg:x="3899" fg:w="20"/><text x="57.5377%" y="671.50"></text></g><g><title>itsi_server.bundle`async_channel::Receiver&lt;T&gt;::try_recv (36 samples, 0.53%)</title><rect x="57.0820%" y="677" width="0.5289%" height="15" fill="rgb(248,181,18)" fg:x="3885" fg:w="36"/><text x="57.3320%" y="687.50"></text></g><g><title>libsystem_pthread.dylib`pthread_mutex_unlock (2 samples, 0.03%)</title><rect x="57.5815%" y="661" width="0.0294%" height="15" fill="rgb(233,39,42)" fg:x="3919" fg:w="2"/><text x="57.8315%" y="671.50"></text></g><g><title>itsi_server.bundle`core::ptr::drop_in_place&lt;itsi_server::ruby_types::itsi_http_response::ItsiHttpResponse&gt; (1 samples, 0.01%)</title><rect x="57.6109%" y="677" width="0.0147%" height="15" fill="rgb(238,110,33)" fg:x="3921" fg:w="1"/><text x="57.8609%" y="687.50"></text></g><g><title>itsi_server.bundle`event_listener::sys::_&lt;impl event_listener::Inner&lt;T&gt;&gt;::notify (1 samples, 0.01%)</title><rect x="57.6256%" y="677" width="0.0147%" height="15" fill="rgb(233,195,10)" fg:x="3922" fg:w="1"/><text x="57.8756%" y="687.50"></text></g><g><title>itsi_server.bundle`DYLD-STUB$$clock_gettime (1 samples, 0.01%)</title><rect x="57.6697%" y="661" width="0.0147%" height="15" fill="rgb(254,105,3)" fg:x="3925" fg:w="1"/><text x="57.9197%" y="671.50"></text></g><g><title>itsi_server.bundle`std::sys::pal::unix::time::Timespec::now (12 samples, 0.18%)</title><rect x="57.6844%" y="661" width="0.1763%" height="15" fill="rgb(221,225,9)" fg:x="3926" fg:w="12"/><text x="57.9344%" y="671.50"></text></g><g><title>libsystem_c.dylib`clock_gettime (12 samples, 0.18%)</title><rect x="57.6844%" y="645" width="0.1763%" height="15" fill="rgb(224,227,45)" fg:x="3926" fg:w="12"/><text x="57.9344%" y="655.50"></text></g><g><title>libsystem_c.dylib`gettimeofday (12 samples, 0.18%)</title><rect x="57.6844%" y="629" width="0.1763%" height="15" fill="rgb(229,198,43)" fg:x="3926" fg:w="12"/><text x="57.9344%" y="639.50"></text></g><g><title>libsystem_kernel.dylib`mach_absolute_time (12 samples, 0.18%)</title><rect x="57.6844%" y="613" width="0.1763%" height="15" fill="rgb(206,209,35)" fg:x="3926" fg:w="12"/><text x="57.9344%" y="623.50"></text></g><g><title>itsi_server.bundle`std::time::SystemTime::duration_since (1 samples, 0.01%)</title><rect x="57.8607%" y="661" width="0.0147%" height="15" fill="rgb(245,195,53)" fg:x="3938" fg:w="1"/><text x="58.1107%" y="671.50"></text></g><g><title>itsi_server.bundle`std::sys::pal::unix::time::Timespec::sub_timespec (1 samples, 0.01%)</title><rect x="57.8607%" y="645" width="0.0147%" height="15" fill="rgb(240,92,26)" fg:x="3938" fg:w="1"/><text x="58.1107%" y="655.50"></text></g><g><title>itsi_server.bundle`std::time::SystemTime::now (4 samples, 0.06%)</title><rect x="57.8754%" y="661" width="0.0588%" height="15" fill="rgb(207,40,23)" fg:x="3939" fg:w="4"/><text x="58.1254%" y="671.50"></text></g><g><title>libruby.3.4.dylib`newobj_of (1 samples, 0.01%)</title><rect x="57.9342%" y="661" width="0.0147%" height="15" fill="rgb(223,111,35)" fg:x="3943" fg:w="1"/><text x="58.1842%" y="671.50"></text></g><g><title>itsi_server.bundle`DYLD-STUB$$rb_funcallv (1 samples, 0.01%)</title><rect x="58.2133%" y="645" width="0.0147%" height="15" fill="rgb(229,147,28)" fg:x="3962" fg:w="1"/><text x="58.4633%" y="655.50"></text></g><g><title>itsi_server.bundle`magnus::api::Ruby::get (2 samples, 0.03%)</title><rect x="58.2574%" y="629" width="0.0294%" height="15" fill="rgb(211,29,28)" fg:x="3965" fg:w="2"/><text x="58.5074%" y="639.50"></text></g><g><title>libdyld.dylib`tlv_get_addr (2 samples, 0.03%)</title><rect x="58.2868%" y="629" width="0.0294%" height="15" fill="rgb(228,72,33)" fg:x="3967" fg:w="2"/><text x="58.5368%" y="639.50"></text></g><g><title>libruby.3.4.dylib`rb_current_ec (2 samples, 0.03%)</title><rect x="58.3162%" y="629" width="0.0294%" height="15" fill="rgb(205,214,31)" fg:x="3969" fg:w="2"/><text x="58.5662%" y="639.50"></text></g><g><title>libdyld.dylib`tlv_get_addr (8 samples, 0.12%)</title><rect x="58.6247%" y="613" width="0.1175%" height="15" fill="rgb(224,111,15)" fg:x="3990" fg:w="8"/><text x="58.8747%" y="623.50"></text></g><g><title>libruby.3.4.dylib`rb_current_ec (11 samples, 0.16%)</title><rect x="58.7423%" y="613" width="0.1616%" height="15" fill="rgb(253,21,26)" fg:x="3998" fg:w="11"/><text x="58.9923%" y="623.50"></text></g><g><title>libruby.3.4.dylib`CALLER_SETUP_ARG (1 samples, 0.01%)</title><rect x="59.0655%" y="581" width="0.0147%" height="15" fill="rgb(245,139,43)" fg:x="4020" fg:w="1"/><text x="59.3155%" y="591.50"></text></g><g><title>libruby.3.4.dylib`rb_ec_ary_new_from_values (1 samples, 0.01%)</title><rect x="59.1243%" y="565" width="0.0147%" height="15" fill="rgb(252,170,7)" fg:x="4024" fg:w="1"/><text x="59.3743%" y="575.50"></text></g><g><title>libruby.3.4.dylib`rb_hash_aset (5 samples, 0.07%)</title><rect x="59.1390%" y="565" width="0.0735%" height="15" fill="rgb(231,118,14)" fg:x="4025" fg:w="5"/><text x="59.3890%" y="575.50"></text></g><g><title>libruby.3.4.dylib`rb_hash_bulk_insert (1 samples, 0.01%)</title><rect x="59.2125%" y="565" width="0.0147%" height="15" fill="rgb(238,83,0)" fg:x="4030" fg:w="1"/><text x="59.4625%" y="575.50"></text></g><g><title>libruby.3.4.dylib`rb_vm_opt_getconstant_path (4 samples, 0.06%)</title><rect x="59.2272%" y="565" width="0.0588%" height="15" fill="rgb(221,39,39)" fg:x="4031" fg:w="4"/><text x="59.4772%" y="575.50"></text></g><g><title>libruby.3.4.dylib`vm_call_cfunc_with_frame_ (10 samples, 0.15%)</title><rect x="59.2859%" y="565" width="0.1469%" height="15" fill="rgb(222,119,46)" fg:x="4035" fg:w="10"/><text x="59.5359%" y="575.50"></text></g><g><title>libruby.3.4.dylib`vm_call_iseq_setup_normal_0start (1 samples, 0.01%)</title><rect x="59.4329%" y="565" width="0.0147%" height="15" fill="rgb(222,165,49)" fg:x="4045" fg:w="1"/><text x="59.6829%" y="575.50"></text></g><g><title>libruby.3.4.dylib`vm_call_iseq_setup_normal_0start_0params_0locals (1 samples, 0.01%)</title><rect x="59.4475%" y="565" width="0.0147%" height="15" fill="rgb(219,113,52)" fg:x="4046" fg:w="1"/><text x="59.6975%" y="575.50"></text></g><g><title>libruby.3.4.dylib`vm_caller_setup_arg_block (1 samples, 0.01%)</title><rect x="59.4622%" y="565" width="0.0147%" height="15" fill="rgb(214,7,15)" fg:x="4047" fg:w="1"/><text x="59.7122%" y="575.50"></text></g><g><title>itsi_server.bundle`itsi_server::init::anon (2 samples, 0.03%)</title><rect x="64.3109%" y="549" width="0.0294%" height="15" fill="rgb(235,32,4)" fg:x="4377" fg:w="2"/><text x="64.5609%" y="559.50"></text></g><g><title>libruby.3.4.dylib`DYLD-STUB$$memset_pattern16 (3 samples, 0.04%)</title><rect x="64.3403%" y="549" width="0.0441%" height="15" fill="rgb(238,90,54)" fg:x="4379" fg:w="3"/><text x="64.5903%" y="559.50"></text></g><g><title>libruby.3.4.dylib`ary_memcpy0 (1 samples, 0.01%)</title><rect x="64.3844%" y="549" width="0.0147%" height="15" fill="rgb(213,208,19)" fg:x="4382" fg:w="1"/><text x="64.6344%" y="559.50"></text></g><g><title>libruby.3.4.dylib`call_cfunc_0 (10 samples, 0.15%)</title><rect x="64.3991%" y="549" width="0.1469%" height="15" fill="rgb(233,156,4)" fg:x="4383" fg:w="10"/><text x="64.6491%" y="559.50"></text></g><g><title>libruby.3.4.dylib`newobj_of (1 samples, 0.01%)</title><rect x="64.5460%" y="549" width="0.0147%" height="15" fill="rgb(207,194,5)" fg:x="4393" fg:w="1"/><text x="64.7960%" y="559.50"></text></g><g><title>libruby.3.4.dylib`obj_method (1 samples, 0.01%)</title><rect x="64.5607%" y="549" width="0.0147%" height="15" fill="rgb(206,111,30)" fg:x="4394" fg:w="1"/><text x="64.8107%" y="559.50"></text></g><g><title>libruby.3.4.dylib`ractor_safe_call_cfunc_m1 (1 samples, 0.01%)</title><rect x="64.5754%" y="549" width="0.0147%" height="15" fill="rgb(243,70,54)" fg:x="4395" fg:w="1"/><text x="64.8254%" y="559.50"></text></g><g><title>libruby.3.4.dylib`rb_ary_pop (2 samples, 0.03%)</title><rect x="64.5901%" y="549" width="0.0294%" height="15" fill="rgb(242,28,8)" fg:x="4396" fg:w="2"/><text x="64.8401%" y="559.50"></text></g><g><title>libruby.3.4.dylib`ary_ensure_room_for_push (2 samples, 0.03%)</title><rect x="64.6195%" y="533" width="0.0294%" height="15" fill="rgb(219,106,18)" fg:x="4398" fg:w="2"/><text x="64.8695%" y="543.50"></text></g><g><title>libruby.3.4.dylib`rb_ary_push (3 samples, 0.04%)</title><rect x="64.6195%" y="549" width="0.0441%" height="15" fill="rgb(244,222,10)" fg:x="4398" fg:w="3"/><text x="64.8695%" y="559.50"></text></g><g><title>libruby.3.4.dylib`rb_gc_writebarrier (1 samples, 0.01%)</title><rect x="64.6488%" y="533" width="0.0147%" height="15" fill="rgb(236,179,52)" fg:x="4400" fg:w="1"/><text x="64.8988%" y="543.50"></text></g><g><title>libruby.3.4.dylib`ary_memcpy0 (4 samples, 0.06%)</title><rect x="64.6782%" y="533" width="0.0588%" height="15" fill="rgb(213,23,39)" fg:x="4402" fg:w="4"/><text x="64.9282%" y="543.50"></text></g><g><title>libruby.3.4.dylib`rb_gc_writebarrier (3 samples, 0.04%)</title><rect x="64.6929%" y="517" width="0.0441%" height="15" fill="rgb(238,48,10)" fg:x="4403" fg:w="3"/><text x="64.9429%" y="527.50"></text></g><g><title>libruby.3.4.dylib`rb_ec_ary_new_from_values (10 samples, 0.15%)</title><rect x="64.6635%" y="549" width="0.1469%" height="15" fill="rgb(251,196,23)" fg:x="4401" fg:w="10"/><text x="64.9135%" y="559.50"></text></g><g><title>libruby.3.4.dylib`newobj_of (5 samples, 0.07%)</title><rect x="64.7370%" y="533" width="0.0735%" height="15" fill="rgb(250,152,24)" fg:x="4406" fg:w="5"/><text x="64.9870%" y="543.50"></text></g><g><title>itsi_server.bundle`magnus::typed_data::DataTypeFunctions::extern_free (1 samples, 0.01%)</title><rect x="65.0896%" y="453" width="0.0147%" height="15" fill="rgb(209,150,17)" fg:x="4430" fg:w="1"/><text x="65.3396%" y="463.50"></text></g><g><title>libruby.3.4.dylib`rb_ary_free (1 samples, 0.01%)</title><rect x="65.1043%" y="453" width="0.0147%" height="15" fill="rgb(234,202,34)" fg:x="4431" fg:w="1"/><text x="65.3543%" y="463.50"></text></g><g><title>itsi_server.bundle`__rdl_dealloc (1 samples, 0.01%)</title><rect x="65.3541%" y="437" width="0.0147%" height="15" fill="rgb(253,148,53)" fg:x="4448" fg:w="1"/><text x="65.6041%" y="447.50"></text></g><g><title>itsi_server.bundle`DYLD-STUB$$free (1 samples, 0.01%)</title><rect x="65.3688%" y="421" width="0.0147%" height="15" fill="rgb(218,129,16)" fg:x="4449" fg:w="1"/><text x="65.6188%" y="431.50"></text></g><g><title>itsi_server.bundle`&lt;itsi_server::ruby_types::itsi_body_proxy::big_bytes::BigBytes as core::ops::drop::Drop&gt;::drop (1 samples, 0.01%)</title><rect x="65.3835%" y="405" width="0.0147%" height="15" fill="rgb(216,85,19)" fg:x="4450" fg:w="1"/><text x="65.6335%" y="415.50"></text></g><g><title>itsi_server.bundle`core::ptr::drop_in_place&lt;itsi_server::services::itsi_http_service::RequestContextInner&gt; (2 samples, 0.03%)</title><rect x="65.4276%" y="389" width="0.0294%" height="15" fill="rgb(235,228,7)" fg:x="4453" fg:w="2"/><text x="65.6776%" y="399.50"></text></g><g><title>itsi_server.bundle`alloc::sync::Arc&lt;T,A&gt;::drop_slow (6 samples, 0.09%)</title><rect x="65.3982%" y="405" width="0.0882%" height="15" fill="rgb(245,175,0)" fg:x="4451" fg:w="6"/><text x="65.6482%" y="415.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (2 samples, 0.03%)</title><rect x="65.4569%" y="389" width="0.0294%" height="15" fill="rgb(208,168,36)" fg:x="4455" fg:w="2"/><text x="65.7069%" y="399.50"></text></g><g><title>itsi_server.bundle`core::ptr::drop_in_place&lt;itsi_server::ruby_types::itsi_body_proxy::big_bytes::BigBytes&gt; (1 samples, 0.01%)</title><rect x="65.4863%" y="405" width="0.0147%" height="15" fill="rgb(246,171,24)" fg:x="4457" fg:w="1"/><text x="65.7363%" y="415.50"></text></g><g><title>libsystem_malloc.dylib`_szone_free (2 samples, 0.03%)</title><rect x="65.5598%" y="309" width="0.0294%" height="15" fill="rgb(215,142,24)" fg:x="4462" fg:w="2"/><text x="65.8098%" y="319.50"></text></g><g><title>libsystem_kernel.dylib`__ulock_wait2 (1 samples, 0.01%)</title><rect x="65.6480%" y="293" width="0.0147%" height="15" fill="rgb(250,187,7)" fg:x="4468" fg:w="1"/><text x="65.8980%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`small_free_list_add_ptr (2 samples, 0.03%)</title><rect x="65.6627%" y="293" width="0.0294%" height="15" fill="rgb(228,66,33)" fg:x="4469" fg:w="2"/><text x="65.9127%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`small_free_scan_madvise_free (9 samples, 0.13%)</title><rect x="65.6920%" y="293" width="0.1322%" height="15" fill="rgb(234,215,21)" fg:x="4471" fg:w="9"/><text x="65.9420%" y="303.50"></text></g><g><title>libsystem_kernel.dylib`madvise (8 samples, 0.12%)</title><rect x="65.7067%" y="277" width="0.1175%" height="15" fill="rgb(222,191,20)" fg:x="4472" fg:w="8"/><text x="65.9567%" y="287.50"></text></g><g><title>itsi_server.bundle`bytes::bytes_mut::shared_v_drop (24 samples, 0.35%)</title><rect x="65.5451%" y="325" width="0.3526%" height="15" fill="rgb(245,79,54)" fg:x="4461" fg:w="24"/><text x="65.7951%" y="335.50"></text></g><g><title>libsystem_malloc.dylib`free_small (21 samples, 0.31%)</title><rect x="65.5892%" y="309" width="0.3086%" height="15" fill="rgb(240,10,37)" fg:x="4464" fg:w="21"/><text x="65.8392%" y="319.50"></text></g><g><title>libsystem_malloc.dylib`small_madvise_free_range_no_lock (5 samples, 0.07%)</title><rect x="65.8243%" y="293" width="0.0735%" height="15" fill="rgb(214,192,32)" fg:x="4480" fg:w="5"/><text x="66.0743%" y="303.50"></text></g><g><title>libsystem_kernel.dylib`madvise (4 samples, 0.06%)</title><rect x="65.8390%" y="277" width="0.0588%" height="15" fill="rgb(209,36,54)" fg:x="4481" fg:w="4"/><text x="66.0890%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`_free (1 samples, 0.01%)</title><rect x="65.8977%" y="325" width="0.0147%" height="15" fill="rgb(220,10,11)" fg:x="4485" fg:w="1"/><text x="66.1477%" y="335.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (4 samples, 0.06%)</title><rect x="65.9124%" y="325" width="0.0588%" height="15" fill="rgb(221,106,17)" fg:x="4486" fg:w="4"/><text x="66.1624%" y="335.50"></text></g><g><title>itsi_server.bundle`&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (31 samples, 0.46%)</title><rect x="65.5451%" y="341" width="0.4555%" height="15" fill="rgb(251,142,44)" fg:x="4461" fg:w="31"/><text x="65.7951%" y="351.50"></text></g><g><title>libsystem_malloc.dylib`_szone_free (2 samples, 0.03%)</title><rect x="65.9712%" y="325" width="0.0294%" height="15" fill="rgb(238,13,15)" fg:x="4490" fg:w="2"/><text x="66.2212%" y="335.50"></text></g><g><title>libsystem_malloc.dylib`_free (1 samples, 0.01%)</title><rect x="66.0006%" y="341" width="0.0147%" height="15" fill="rgb(208,107,27)" fg:x="4492" fg:w="1"/><text x="66.2506%" y="351.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (2 samples, 0.03%)</title><rect x="66.0153%" y="341" width="0.0294%" height="15" fill="rgb(205,136,37)" fg:x="4493" fg:w="2"/><text x="66.2653%" y="351.50"></text></g><g><title>itsi_server.bundle`alloc::sync::Arc&lt;T,A&gt;::drop_slow (36 samples, 0.53%)</title><rect x="65.5451%" y="389" width="0.5289%" height="15" fill="rgb(250,205,27)" fg:x="4461" fg:w="36"/><text x="65.7951%" y="399.50"></text></g><g><title>itsi_server.bundle`core::ptr::drop_in_place&lt;http::request::Parts&gt; (36 samples, 0.53%)</title><rect x="65.5451%" y="373" width="0.5289%" height="15" fill="rgb(210,80,43)" fg:x="4461" fg:w="36"/><text x="65.7951%" y="383.50"></text></g><g><title>itsi_server.bundle`core::ptr::drop_in_place&lt;http::header::map::HeaderMap&gt; (36 samples, 0.53%)</title><rect x="65.5451%" y="357" width="0.5289%" height="15" fill="rgb(247,160,36)" fg:x="4461" fg:w="36"/><text x="65.7951%" y="367.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_madvise_block (2 samples, 0.03%)</title><rect x="66.0447%" y="341" width="0.0294%" height="15" fill="rgb(234,13,49)" fg:x="4495" fg:w="2"/><text x="66.2947%" y="351.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_madvise_block_locked (2 samples, 0.03%)</title><rect x="66.0447%" y="325" width="0.0294%" height="15" fill="rgb(234,122,0)" fg:x="4495" fg:w="2"/><text x="66.2947%" y="335.50"></text></g><g><title>libsystem_kernel.dylib`madvise (2 samples, 0.03%)</title><rect x="66.0447%" y="309" width="0.0294%" height="15" fill="rgb(207,146,38)" fg:x="4495" fg:w="2"/><text x="66.2947%" y="319.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (5 samples, 0.07%)</title><rect x="66.0741%" y="389" width="0.0735%" height="15" fill="rgb(207,177,25)" fg:x="4497" fg:w="5"/><text x="66.3241%" y="399.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_madvise_block (1 samples, 0.01%)</title><rect x="66.1475%" y="389" width="0.0147%" height="15" fill="rgb(211,178,42)" fg:x="4502" fg:w="1"/><text x="66.3975%" y="399.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_madvise_block_locked (1 samples, 0.01%)</title><rect x="66.1475%" y="373" width="0.0147%" height="15" fill="rgb(230,69,54)" fg:x="4502" fg:w="1"/><text x="66.3975%" y="383.50"></text></g><g><title>libsystem_kernel.dylib`madvise (1 samples, 0.01%)</title><rect x="66.1475%" y="357" width="0.0147%" height="15" fill="rgb(214,135,41)" fg:x="4502" fg:w="1"/><text x="66.3975%" y="367.50"></text></g><g><title>itsi_server.bundle`core::ptr::drop_in_place&lt;itsi_server::ruby_types::itsi_http_response::ItsiHttpResponse&gt; (47 samples, 0.69%)</title><rect x="65.5010%" y="405" width="0.6906%" height="15" fill="rgb(237,67,25)" fg:x="4458" fg:w="47"/><text x="65.7510%" y="415.50"></text></g><g><title>libsystem_platform.dylib`_platform_memset (2 samples, 0.03%)</title><rect x="66.1622%" y="389" width="0.0294%" height="15" fill="rgb(222,189,50)" fg:x="4503" fg:w="2"/><text x="66.4122%" y="399.50"></text></g><g><title>libsystem_malloc.dylib`_free (3 samples, 0.04%)</title><rect x="66.1916%" y="405" width="0.0441%" height="15" fill="rgb(245,148,34)" fg:x="4505" fg:w="3"/><text x="66.4416%" y="415.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (3 samples, 0.04%)</title><rect x="66.2357%" y="405" width="0.0441%" height="15" fill="rgb(222,29,6)" fg:x="4508" fg:w="3"/><text x="66.4857%" y="415.50"></text></g><g><title>libsystem_malloc.dylib`_szone_free (1 samples, 0.01%)</title><rect x="66.2798%" y="405" width="0.0147%" height="15" fill="rgb(221,189,43)" fg:x="4511" fg:w="1"/><text x="66.5298%" y="415.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_remove_ptr (1 samples, 0.01%)</title><rect x="66.3091%" y="389" width="0.0147%" height="15" fill="rgb(207,36,27)" fg:x="4513" fg:w="1"/><text x="66.5591%" y="399.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_add_ptr (3 samples, 0.04%)</title><rect x="66.4267%" y="373" width="0.0441%" height="15" fill="rgb(217,90,24)" fg:x="4521" fg:w="3"/><text x="66.6767%" y="383.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (18 samples, 0.26%)</title><rect x="66.2944%" y="405" width="0.2645%" height="15" fill="rgb(224,66,35)" fg:x="4512" fg:w="18"/><text x="66.5444%" y="415.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (16 samples, 0.24%)</title><rect x="66.3238%" y="389" width="0.2351%" height="15" fill="rgb(221,13,50)" fg:x="4514" fg:w="16"/><text x="66.5738%" y="399.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_remove_ptr (6 samples, 0.09%)</title><rect x="66.4708%" y="373" width="0.0882%" height="15" fill="rgb(236,68,49)" fg:x="4524" fg:w="6"/><text x="66.7208%" y="383.50"></text></g><g><title>libsystem_platform.dylib`__bzero (1 samples, 0.01%)</title><rect x="66.5589%" y="405" width="0.0147%" height="15" fill="rgb(229,146,28)" fg:x="4530" fg:w="1"/><text x="66.8089%" y="415.50"></text></g><g><title>itsi_server.bundle`core::ptr::drop_in_place&lt;itsi_server::ruby_types::itsi_http_request::ItsiHttpRequest&gt; (82 samples, 1.20%)</title><rect x="65.3835%" y="421" width="1.2048%" height="15" fill="rgb(225,31,38)" fg:x="4450" fg:w="82"/><text x="65.6335%" y="431.50"></text></g><g><title>libsystem_platform.dylib`_platform_memset (1 samples, 0.01%)</title><rect x="66.5736%" y="405" width="0.0147%" height="15" fill="rgb(250,208,3)" fg:x="4531" fg:w="1"/><text x="66.8236%" y="415.50"></text></g><g><title>itsi_server.bundle`core::ptr::drop_in_place&lt;itsi_server::ruby_types::itsi_http_response::ItsiHttpResponse&gt; (1 samples, 0.01%)</title><rect x="66.5883%" y="421" width="0.0147%" height="15" fill="rgb(246,54,23)" fg:x="4532" fg:w="1"/><text x="66.8383%" y="431.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_madvise_block (1 samples, 0.01%)</title><rect x="66.5883%" y="405" width="0.0147%" height="15" fill="rgb(243,76,11)" fg:x="4532" fg:w="1"/><text x="66.8383%" y="415.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_madvise_block_locked (1 samples, 0.01%)</title><rect x="66.5883%" y="389" width="0.0147%" height="15" fill="rgb(245,21,50)" fg:x="4532" fg:w="1"/><text x="66.8383%" y="399.50"></text></g><g><title>libsystem_kernel.dylib`madvise (1 samples, 0.01%)</title><rect x="66.5883%" y="373" width="0.0147%" height="15" fill="rgb(228,9,43)" fg:x="4532" fg:w="1"/><text x="66.8383%" y="383.50"></text></g><g><title>itsi_server.bundle`magnus::typed_data::DataTypeFunctions::extern_free (85 samples, 1.25%)</title><rect x="65.3688%" y="437" width="1.2489%" height="15" fill="rgb(208,100,47)" fg:x="4449" fg:w="85"/><text x="65.6188%" y="447.50"></text></g><g><title>libsystem_malloc.dylib`_free (1 samples, 0.01%)</title><rect x="66.6030%" y="421" width="0.0147%" height="15" fill="rgb(232,26,8)" fg:x="4533" fg:w="1"/><text x="66.8530%" y="431.50"></text></g><g><title>libsystem_malloc.dylib`_free (1 samples, 0.01%)</title><rect x="66.6177%" y="437" width="0.0147%" height="15" fill="rgb(216,166,38)" fg:x="4534" fg:w="1"/><text x="66.8677%" y="447.50"></text></g><g><title>libruby.3.4.dylib`rb_gc_obj_free (106 samples, 1.56%)</title><rect x="65.1190%" y="453" width="1.5574%" height="15" fill="rgb(251,202,51)" fg:x="4432" fg:w="106"/><text x="65.3690%" y="463.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (3 samples, 0.04%)</title><rect x="66.6324%" y="437" width="0.0441%" height="15" fill="rgb(254,216,34)" fg:x="4535" fg:w="3"/><text x="66.8824%" y="447.50"></text></g><g><title>libruby.3.4.dylib`rb_gc_obj_free_vm_weak_references (11 samples, 0.16%)</title><rect x="66.6765%" y="453" width="0.1616%" height="15" fill="rgb(251,32,27)" fg:x="4538" fg:w="11"/><text x="66.9265%" y="463.50"></text></g><g><title>libruby.3.4.dylib`rb_str_free (3 samples, 0.04%)</title><rect x="66.8381%" y="453" width="0.0441%" height="15" fill="rgb(208,127,28)" fg:x="4549" fg:w="3"/><text x="67.0881%" y="463.50"></text></g><g><title>libruby.3.4.dylib`gc_sweep_plane (137 samples, 2.01%)</title><rect x="64.8839%" y="469" width="2.0129%" height="15" fill="rgb(224,137,22)" fg:x="4416" fg:w="137"/><text x="65.1339%" y="479.50">l..</text></g><g><title>libsystem_malloc.dylib`_free (1 samples, 0.01%)</title><rect x="66.8822%" y="453" width="0.0147%" height="15" fill="rgb(254,70,32)" fg:x="4552" fg:w="1"/><text x="67.1322%" y="463.50"></text></g><g><title>libruby.3.4.dylib`rb_gc_obj_free (2 samples, 0.03%)</title><rect x="66.8969%" y="469" width="0.0294%" height="15" fill="rgb(229,75,37)" fg:x="4553" fg:w="2"/><text x="67.1469%" y="479.50"></text></g><g><title>libruby.3.4.dylib`gc_sweep_step (142 samples, 2.09%)</title><rect x="64.8839%" y="485" width="2.0864%" height="15" fill="rgb(252,64,23)" fg:x="4416" fg:w="142"/><text x="65.1339%" y="495.50">l..</text></g><g><title>libruby.3.4.dylib`rb_gc_obj_free_vm_weak_references (3 samples, 0.04%)</title><rect x="66.9262%" y="469" width="0.0441%" height="15" fill="rgb(232,162,48)" fg:x="4555" fg:w="3"/><text x="67.1762%" y="479.50"></text></g><g><title>libruby.3.4.dylib`gc_continue (144 samples, 2.12%)</title><rect x="64.8839%" y="501" width="2.1158%" height="15" fill="rgb(246,160,12)" fg:x="4416" fg:w="144"/><text x="65.1339%" y="511.50">l..</text></g><g><title>libsystem_kernel.dylib`getrusage (2 samples, 0.03%)</title><rect x="66.9703%" y="485" width="0.0294%" height="15" fill="rgb(247,166,0)" fg:x="4558" fg:w="2"/><text x="67.2203%" y="495.50"></text></g><g><title>libruby.3.4.dylib`each_location (2 samples, 0.03%)</title><rect x="67.0144%" y="421" width="0.0294%" height="15" fill="rgb(249,219,21)" fg:x="4561" fg:w="2"/><text x="67.2644%" y="431.50"></text></g><g><title>libruby.3.4.dylib`gc_mark_maybe_internal (2 samples, 0.03%)</title><rect x="67.0144%" y="405" width="0.0294%" height="15" fill="rgb(205,209,3)" fg:x="4561" fg:w="2"/><text x="67.2644%" y="415.50"></text></g><g><title>libsystem_c.dylib`bsearch (1 samples, 0.01%)</title><rect x="67.0291%" y="389" width="0.0147%" height="15" fill="rgb(243,44,1)" fg:x="4562" fg:w="1"/><text x="67.2791%" y="399.50"></text></g><g><title>libruby.3.4.dylib`cont_mark (3 samples, 0.04%)</title><rect x="67.0144%" y="469" width="0.0441%" height="15" fill="rgb(206,159,16)" fg:x="4561" fg:w="3"/><text x="67.2644%" y="479.50"></text></g><g><title>libruby.3.4.dylib`rb_execution_context_mark (3 samples, 0.04%)</title><rect x="67.0144%" y="453" width="0.0441%" height="15" fill="rgb(244,77,30)" fg:x="4561" fg:w="3"/><text x="67.2644%" y="463.50"></text></g><g><title>libruby.3.4.dylib`rb_gc_mark_machine_context (3 samples, 0.04%)</title><rect x="67.0144%" y="437" width="0.0441%" height="15" fill="rgb(218,69,12)" fg:x="4561" fg:w="3"/><text x="67.2644%" y="447.50"></text></g><g><title>libruby.3.4.dylib`gc_mark_maybe_internal (1 samples, 0.01%)</title><rect x="67.0438%" y="421" width="0.0147%" height="15" fill="rgb(212,87,7)" fg:x="4563" fg:w="1"/><text x="67.2938%" y="431.50"></text></g><g><title>libruby.3.4.dylib`gc_marks_rest (4 samples, 0.06%)</title><rect x="67.0144%" y="485" width="0.0588%" height="15" fill="rgb(245,114,25)" fg:x="4561" fg:w="4"/><text x="67.2644%" y="495.50"></text></g><g><title>libruby.3.4.dylib`thread_mark (1 samples, 0.01%)</title><rect x="67.0585%" y="469" width="0.0147%" height="15" fill="rgb(210,61,42)" fg:x="4564" fg:w="1"/><text x="67.3085%" y="479.50"></text></g><g><title>libruby.3.4.dylib`rb_execution_context_mark (1 samples, 0.01%)</title><rect x="67.0585%" y="453" width="0.0147%" height="15" fill="rgb(211,52,33)" fg:x="4564" fg:w="1"/><text x="67.3085%" y="463.50"></text></g><g><title>libruby.3.4.dylib`rb_gc_mark_vm_stack_values (1 samples, 0.01%)</title><rect x="67.0585%" y="437" width="0.0147%" height="15" fill="rgb(234,58,33)" fg:x="4564" fg:w="1"/><text x="67.3085%" y="447.50"></text></g><g><title>libruby.3.4.dylib`gc_sweep_plane (1 samples, 0.01%)</title><rect x="67.0879%" y="469" width="0.0147%" height="15" fill="rgb(220,115,36)" fg:x="4566" fg:w="1"/><text x="67.3379%" y="479.50"></text></g><g><title>itsi_server.bundle`alloc::sync::Arc&lt;T,A&gt;::drop_slow (2 samples, 0.03%)</title><rect x="67.7197%" y="389" width="0.0294%" height="15" fill="rgb(243,153,54)" fg:x="4609" fg:w="2"/><text x="67.9697%" y="399.50"></text></g><g><title>itsi_server.bundle`core::ptr::drop_in_place&lt;itsi_server::services::itsi_http_service::RequestContextInner&gt; (1 samples, 0.01%)</title><rect x="67.7344%" y="373" width="0.0147%" height="15" fill="rgb(251,47,18)" fg:x="4610" fg:w="1"/><text x="67.9844%" y="383.50"></text></g><g><title>itsi_server.bundle`bytes::bytes_mut::shared_v_drop (1 samples, 0.01%)</title><rect x="67.7490%" y="309" width="0.0147%" height="15" fill="rgb(242,102,42)" fg:x="4611" fg:w="1"/><text x="67.9990%" y="319.50"></text></g><g><title>libsystem_malloc.dylib`free_small (1 samples, 0.01%)</title><rect x="67.7490%" y="293" width="0.0147%" height="15" fill="rgb(234,31,38)" fg:x="4611" fg:w="1"/><text x="67.9990%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`small_free_list_find_by_ptr (1 samples, 0.01%)</title><rect x="67.7490%" y="277" width="0.0147%" height="15" fill="rgb(221,117,51)" fg:x="4611" fg:w="1"/><text x="67.9990%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`_szone_free (1 samples, 0.01%)</title><rect x="67.7637%" y="309" width="0.0147%" height="15" fill="rgb(212,20,18)" fg:x="4612" fg:w="1"/><text x="68.0137%" y="319.50"></text></g><g><title>itsi_server.bundle`core::ptr::drop_in_place&lt;http::header::map::HeaderMap&gt; (3 samples, 0.04%)</title><rect x="67.7490%" y="341" width="0.0441%" height="15" fill="rgb(245,133,36)" fg:x="4611" fg:w="3"/><text x="67.9990%" y="351.50"></text></g><g><title>itsi_server.bundle`&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (3 samples, 0.04%)</title><rect x="67.7490%" y="325" width="0.0441%" height="15" fill="rgb(212,6,19)" fg:x="4611" fg:w="3"/><text x="67.9990%" y="335.50"></text></g><g><title>libsystem_platform.dylib`_platform_memset (1 samples, 0.01%)</title><rect x="67.7784%" y="309" width="0.0147%" height="15" fill="rgb(218,1,36)" fg:x="4613" fg:w="1"/><text x="68.0284%" y="319.50"></text></g><g><title>itsi_server.bundle`alloc::sync::Arc&lt;T,A&gt;::drop_slow (4 samples, 0.06%)</title><rect x="67.7490%" y="373" width="0.0588%" height="15" fill="rgb(246,84,54)" fg:x="4611" fg:w="4"/><text x="67.9990%" y="383.50"></text></g><g><title>itsi_server.bundle`core::ptr::drop_in_place&lt;http::request::Parts&gt; (4 samples, 0.06%)</title><rect x="67.7490%" y="357" width="0.0588%" height="15" fill="rgb(242,110,6)" fg:x="4611" fg:w="4"/><text x="67.9990%" y="367.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (1 samples, 0.01%)</title><rect x="67.7931%" y="341" width="0.0147%" height="15" fill="rgb(214,47,5)" fg:x="4614" fg:w="1"/><text x="68.0431%" y="351.50"></text></g><g><title>itsi_server.bundle`core::ptr::drop_in_place&lt;itsi_server::ruby_types::itsi_http_response::ItsiHttpResponse&gt; (5 samples, 0.07%)</title><rect x="67.7490%" y="389" width="0.0735%" height="15" fill="rgb(218,159,25)" fg:x="4611" fg:w="5"/><text x="67.9990%" y="399.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (1 samples, 0.01%)</title><rect x="67.8078%" y="373" width="0.0147%" height="15" fill="rgb(215,211,28)" fg:x="4615" fg:w="1"/><text x="68.0578%" y="383.50"></text></g><g><title>libsystem_malloc.dylib`_free (1 samples, 0.01%)</title><rect x="67.8225%" y="389" width="0.0147%" height="15" fill="rgb(238,59,32)" fg:x="4616" fg:w="1"/><text x="68.0725%" y="399.50"></text></g><g><title>itsi_server.bundle`core::ptr::drop_in_place&lt;itsi_server::ruby_types::itsi_http_request::ItsiHttpRequest&gt; (11 samples, 0.16%)</title><rect x="67.7197%" y="405" width="0.1616%" height="15" fill="rgb(226,82,3)" fg:x="4609" fg:w="11"/><text x="67.9697%" y="415.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (3 samples, 0.04%)</title><rect x="67.8372%" y="389" width="0.0441%" height="15" fill="rgb(240,164,32)" fg:x="4617" fg:w="3"/><text x="68.0872%" y="399.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (2 samples, 0.03%)</title><rect x="67.8519%" y="373" width="0.0294%" height="15" fill="rgb(232,46,7)" fg:x="4618" fg:w="2"/><text x="68.1019%" y="383.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_remove_ptr (1 samples, 0.01%)</title><rect x="67.8666%" y="357" width="0.0147%" height="15" fill="rgb(229,129,53)" fg:x="4619" fg:w="1"/><text x="68.1166%" y="367.50"></text></g><g><title>itsi_server.bundle`magnus::typed_data::DataTypeFunctions::extern_free (12 samples, 0.18%)</title><rect x="67.7197%" y="421" width="0.1763%" height="15" fill="rgb(234,188,29)" fg:x="4609" fg:w="12"/><text x="67.9697%" y="431.50"></text></g><g><title>itsi_server.bundle`core::ptr::drop_in_place&lt;itsi_server::ruby_types::itsi_http_response::ItsiHttpResponse&gt; (1 samples, 0.01%)</title><rect x="67.8813%" y="405" width="0.0147%" height="15" fill="rgb(246,141,4)" fg:x="4620" fg:w="1"/><text x="68.1313%" y="415.50"></text></g><g><title>libruby.3.4.dylib`rb_str_free (1 samples, 0.01%)</title><rect x="67.8960%" y="421" width="0.0147%" height="15" fill="rgb(229,23,39)" fg:x="4621" fg:w="1"/><text x="68.1460%" y="431.50"></text></g><g><title>libruby.3.4.dylib`rb_gc_obj_free (22 samples, 0.32%)</title><rect x="67.6168%" y="437" width="0.3232%" height="15" fill="rgb(206,12,3)" fg:x="4602" fg:w="22"/><text x="67.8668%" y="447.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (2 samples, 0.03%)</title><rect x="67.9107%" y="421" width="0.0294%" height="15" fill="rgb(252,226,20)" fg:x="4622" fg:w="2"/><text x="68.1607%" y="431.50"></text></g><g><title>libruby.3.4.dylib`rb_gc_obj_free_vm_weak_references (5 samples, 0.07%)</title><rect x="67.9401%" y="437" width="0.0735%" height="15" fill="rgb(216,123,35)" fg:x="4624" fg:w="5"/><text x="68.1901%" y="447.50"></text></g><g><title>libruby.3.4.dylib`rb_str_free (1 samples, 0.01%)</title><rect x="68.0135%" y="437" width="0.0147%" height="15" fill="rgb(212,68,40)" fg:x="4629" fg:w="1"/><text x="68.2635%" y="447.50"></text></g><g><title>libruby.3.4.dylib`gc_sweep_plane (62 samples, 0.91%)</title><rect x="67.1319%" y="453" width="0.9110%" height="15" fill="rgb(254,125,32)" fg:x="4569" fg:w="62"/><text x="67.3819%" y="463.50"></text></g><g><title>libsystem_malloc.dylib`_free (1 samples, 0.01%)</title><rect x="68.0282%" y="437" width="0.0147%" height="15" fill="rgb(253,97,22)" fg:x="4630" fg:w="1"/><text x="68.2782%" y="447.50"></text></g><g><title>libruby.3.4.dylib`rb_gc_obj_free (1 samples, 0.01%)</title><rect x="68.0429%" y="453" width="0.0147%" height="15" fill="rgb(241,101,14)" fg:x="4631" fg:w="1"/><text x="68.2929%" y="463.50"></text></g><g><title>libruby.3.4.dylib`gc_sweep_step (67 samples, 0.98%)</title><rect x="67.1026%" y="469" width="0.9844%" height="15" fill="rgb(238,103,29)" fg:x="4567" fg:w="67"/><text x="67.3526%" y="479.50"></text></g><g><title>libruby.3.4.dylib`rb_gc_obj_free_vm_weak_references (2 samples, 0.03%)</title><rect x="68.0576%" y="453" width="0.0294%" height="15" fill="rgb(233,195,47)" fg:x="4632" fg:w="2"/><text x="68.3076%" y="463.50"></text></g><g><title>libruby.3.4.dylib`gc_sweep (70 samples, 1.03%)</title><rect x="67.0732%" y="485" width="1.0285%" height="15" fill="rgb(246,218,30)" fg:x="4565" fg:w="70"/><text x="67.3232%" y="495.50"></text></g><g><title>libsystem_kernel.dylib`getrusage (1 samples, 0.01%)</title><rect x="68.0870%" y="469" width="0.0147%" height="15" fill="rgb(219,145,47)" fg:x="4634" fg:w="1"/><text x="68.3370%" y="479.50"></text></g><g><title>libruby.3.4.dylib`rb_gc_mark_children (2 samples, 0.03%)</title><rect x="68.1017%" y="485" width="0.0294%" height="15" fill="rgb(243,12,26)" fg:x="4635" fg:w="2"/><text x="68.3517%" y="495.50"></text></g><g><title>libruby.3.4.dylib`rb_id_table_foreach_values (2 samples, 0.03%)</title><rect x="68.1017%" y="469" width="0.0294%" height="15" fill="rgb(214,87,16)" fg:x="4635" fg:w="2"/><text x="68.3517%" y="479.50"></text></g><g><title>libruby.3.4.dylib`mark_const_table_i (2 samples, 0.03%)</title><rect x="68.1017%" y="453" width="0.0294%" height="15" fill="rgb(208,99,42)" fg:x="4635" fg:w="2"/><text x="68.3517%" y="463.50"></text></g><g><title>libruby.3.4.dylib`gc_mark_maybe_internal (1 samples, 0.01%)</title><rect x="68.1311%" y="469" width="0.0147%" height="15" fill="rgb(253,99,2)" fg:x="4637" fg:w="1"/><text x="68.3811%" y="479.50"></text></g><g><title>libruby.3.4.dylib`rb_gc_mark_roots (5 samples, 0.07%)</title><rect x="68.1311%" y="485" width="0.0735%" height="15" fill="rgb(220,168,23)" fg:x="4637" fg:w="5"/><text x="68.3811%" y="495.50"></text></g><g><title>libruby.3.4.dylib`rb_vm_mark (4 samples, 0.06%)</title><rect x="68.1458%" y="469" width="0.0588%" height="15" fill="rgb(242,38,24)" fg:x="4638" fg:w="4"/><text x="68.3958%" y="479.50"></text></g><g><title>libruby.3.4.dylib`rb_id_table_foreach_values (1 samples, 0.01%)</title><rect x="68.1898%" y="453" width="0.0147%" height="15" fill="rgb(225,182,9)" fg:x="4641" fg:w="1"/><text x="68.4398%" y="463.50"></text></g><g><title>libruby.3.4.dylib`rb_gc_mark_vm_stack_values (3 samples, 0.04%)</title><rect x="68.2045%" y="485" width="0.0441%" height="15" fill="rgb(243,178,37)" fg:x="4642" fg:w="3"/><text x="68.4545%" y="495.50"></text></g><g><title>libruby.3.4.dylib`gc_mark (2 samples, 0.03%)</title><rect x="68.2192%" y="469" width="0.0294%" height="15" fill="rgb(232,139,19)" fg:x="4643" fg:w="2"/><text x="68.4692%" y="479.50"></text></g><g><title>libruby.3.4.dylib`newobj_of (231 samples, 3.39%)</title><rect x="64.8692%" y="533" width="3.3941%" height="15" fill="rgb(225,201,24)" fg:x="4415" fg:w="231"/><text x="65.1192%" y="543.50">lib..</text></g><g><title>libruby.3.4.dylib`newobj_cache_miss (230 samples, 3.38%)</title><rect x="64.8839%" y="517" width="3.3794%" height="15" fill="rgb(221,47,46)" fg:x="4416" fg:w="230"/><text x="65.1339%" y="527.50">lib..</text></g><g><title>libruby.3.4.dylib`gc_start (86 samples, 1.26%)</title><rect x="66.9997%" y="501" width="1.2636%" height="15" fill="rgb(249,23,13)" fg:x="4560" fg:w="86"/><text x="67.2497%" y="511.50"></text></g><g><title>libruby.3.4.dylib`rb_st_foreach (1 samples, 0.01%)</title><rect x="68.2486%" y="485" width="0.0147%" height="15" fill="rgb(219,9,5)" fg:x="4645" fg:w="1"/><text x="68.4986%" y="495.50"></text></g><g><title>libruby.3.4.dylib`st_general_foreach (1 samples, 0.01%)</title><rect x="68.2486%" y="469" width="0.0147%" height="15" fill="rgb(254,171,16)" fg:x="4645" fg:w="1"/><text x="68.4986%" y="479.50"></text></g><g><title>libruby.3.4.dylib`gc_mark_tbl_no_pin_i (1 samples, 0.01%)</title><rect x="68.2486%" y="453" width="0.0147%" height="15" fill="rgb(230,171,20)" fg:x="4645" fg:w="1"/><text x="68.4986%" y="463.50"></text></g><g><title>libruby.3.4.dylib`gc_mark (1 samples, 0.01%)</title><rect x="68.2486%" y="437" width="0.0147%" height="15" fill="rgb(210,71,41)" fg:x="4645" fg:w="1"/><text x="68.4986%" y="447.50"></text></g><g><title>libruby.3.4.dylib`rb_ivar_defined (4 samples, 0.06%)</title><rect x="68.2633%" y="533" width="0.0588%" height="15" fill="rgb(206,173,20)" fg:x="4646" fg:w="4"/><text x="68.5133%" y="543.50"></text></g><g><title>libruby.3.4.dylib`rb_shape_get_iv_index (2 samples, 0.03%)</title><rect x="68.2927%" y="517" width="0.0294%" height="15" fill="rgb(233,88,34)" fg:x="4648" fg:w="2"/><text x="68.5427%" y="527.50"></text></g><g><title>libruby.3.4.dylib`rb_ec_str_resurrect (241 samples, 3.54%)</title><rect x="64.8105%" y="549" width="3.5410%" height="15" fill="rgb(223,209,46)" fg:x="4411" fg:w="241"/><text x="65.0605%" y="559.50">libr..</text></g><g><title>libruby.3.4.dylib`rb_shape_obj_too_complex (2 samples, 0.03%)</title><rect x="68.3221%" y="533" width="0.0294%" height="15" fill="rgb(250,43,18)" fg:x="4650" fg:w="2"/><text x="68.5721%" y="543.50"></text></g><g><title>libruby.3.4.dylib`rb_gc_writebarrier (2 samples, 0.03%)</title><rect x="68.5572%" y="533" width="0.0294%" height="15" fill="rgb(208,13,10)" fg:x="4666" fg:w="2"/><text x="68.8072%" y="543.50"></text></g><g><title>libruby.3.4.dylib`rb_st_update (2 samples, 0.03%)</title><rect x="68.5865%" y="533" width="0.0294%" height="15" fill="rgb(212,200,36)" fg:x="4668" fg:w="2"/><text x="68.8365%" y="543.50"></text></g><g><title>libruby.3.4.dylib`any_hash (3 samples, 0.04%)</title><rect x="68.7922%" y="517" width="0.0441%" height="15" fill="rgb(225,90,30)" fg:x="4682" fg:w="3"/><text x="69.0422%" y="527.50"></text></g><g><title>libruby.3.4.dylib`gc_writebarrier_generational (3 samples, 0.04%)</title><rect x="68.8363%" y="517" width="0.0441%" height="15" fill="rgb(236,182,39)" fg:x="4685" fg:w="3"/><text x="69.0863%" y="527.50"></text></g><g><title>libruby.3.4.dylib`rb_any_hash (1 samples, 0.01%)</title><rect x="68.8804%" y="517" width="0.0147%" height="15" fill="rgb(212,144,35)" fg:x="4688" fg:w="1"/><text x="69.1304%" y="527.50"></text></g><g><title>libruby.3.4.dylib`rb_gc_writebarrier (26 samples, 0.38%)</title><rect x="68.8951%" y="517" width="0.3820%" height="15" fill="rgb(228,63,44)" fg:x="4689" fg:w="26"/><text x="69.1451%" y="527.50"></text></g><g><title>libruby.3.4.dylib`gc_writebarrier_generational (9 samples, 0.13%)</title><rect x="69.1449%" y="501" width="0.1322%" height="15" fill="rgb(228,109,6)" fg:x="4706" fg:w="9"/><text x="69.3949%" y="511.50"></text></g><g><title>libruby.3.4.dylib`any_hash (13 samples, 0.19%)</title><rect x="69.7179%" y="501" width="0.1910%" height="15" fill="rgb(238,117,24)" fg:x="4745" fg:w="13"/><text x="69.9679%" y="511.50"></text></g><g><title>libruby.3.4.dylib`rb_str_hash (3 samples, 0.04%)</title><rect x="69.8648%" y="485" width="0.0441%" height="15" fill="rgb(242,26,26)" fg:x="4755" fg:w="3"/><text x="70.1148%" y="495.50"></text></g><g><title>libruby.3.4.dylib`hash_aset_str_insert (4 samples, 0.06%)</title><rect x="69.9089%" y="501" width="0.0588%" height="15" fill="rgb(221,92,48)" fg:x="4758" fg:w="4"/><text x="70.1589%" y="511.50"></text></g><g><title>libruby.3.4.dylib`rb_str_hash (1 samples, 0.01%)</title><rect x="69.9677%" y="501" width="0.0147%" height="15" fill="rgb(209,209,32)" fg:x="4762" fg:w="1"/><text x="70.2177%" y="511.50"></text></g><g><title>libruby.3.4.dylib`rb_st_update (78 samples, 1.15%)</title><rect x="69.2771%" y="517" width="1.1460%" height="15" fill="rgb(221,70,22)" fg:x="4715" fg:w="78"/><text x="69.5271%" y="527.50"></text></g><g><title>libruby.3.4.dylib`tbl_update_modify (30 samples, 0.44%)</title><rect x="69.9824%" y="501" width="0.4408%" height="15" fill="rgb(248,145,5)" fg:x="4763" fg:w="30"/><text x="70.2324%" y="511.50"></text></g><g><title>libruby.3.4.dylib`rb_hash_aset (148 samples, 2.17%)</title><rect x="68.3515%" y="549" width="2.1746%" height="15" fill="rgb(226,116,26)" fg:x="4652" fg:w="148"/><text x="68.6015%" y="559.50">l..</text></g><g><title>libruby.3.4.dylib`tbl_update (130 samples, 1.91%)</title><rect x="68.6159%" y="533" width="1.9101%" height="15" fill="rgb(244,5,17)" fg:x="4670" fg:w="130"/><text x="68.8659%" y="543.50">l..</text></g><g><title>libruby.3.4.dylib`tbl_update_modify (7 samples, 0.10%)</title><rect x="70.4232%" y="517" width="0.1029%" height="15" fill="rgb(252,159,33)" fg:x="4793" fg:w="7"/><text x="70.6732%" y="527.50"></text></g><g><title>libruby.3.4.dylib`any_hash (3 samples, 0.04%)</title><rect x="70.5701%" y="517" width="0.0441%" height="15" fill="rgb(206,71,0)" fg:x="4803" fg:w="3"/><text x="70.8201%" y="527.50"></text></g><g><title>libruby.3.4.dylib`rb_str_hash (1 samples, 0.01%)</title><rect x="70.5995%" y="501" width="0.0147%" height="15" fill="rgb(233,118,54)" fg:x="4805" fg:w="1"/><text x="70.8495%" y="511.50"></text></g><g><title>libruby.3.4.dylib`ar_insert (5 samples, 0.07%)</title><rect x="70.5554%" y="533" width="0.0735%" height="15" fill="rgb(234,83,48)" fg:x="4802" fg:w="5"/><text x="70.8054%" y="543.50"></text></g><g><title>libruby.3.4.dylib`rb_str_hash (1 samples, 0.01%)</title><rect x="70.6142%" y="517" width="0.0147%" height="15" fill="rgb(228,3,54)" fg:x="4806" fg:w="1"/><text x="70.8642%" y="527.50"></text></g><g><title>libruby.3.4.dylib`rb_hash_bulk_insert (10 samples, 0.15%)</title><rect x="70.5260%" y="549" width="0.1469%" height="15" fill="rgb(226,155,13)" fg:x="4800" fg:w="10"/><text x="70.7760%" y="559.50"></text></g><g><title>libruby.3.4.dylib`rb_gc_writebarrier (3 samples, 0.04%)</title><rect x="70.6289%" y="533" width="0.0441%" height="15" fill="rgb(241,28,37)" fg:x="4807" fg:w="3"/><text x="70.8789%" y="543.50"></text></g><g><title>libdyld.dylib`tlv_get_addr (1 samples, 0.01%)</title><rect x="70.6876%" y="533" width="0.0147%" height="15" fill="rgb(233,93,10)" fg:x="4811" fg:w="1"/><text x="70.9376%" y="543.50"></text></g><g><title>libruby.3.4.dylib`rb_hash_new_with_size (4 samples, 0.06%)</title><rect x="70.6729%" y="549" width="0.0588%" height="15" fill="rgb(225,113,19)" fg:x="4810" fg:w="4"/><text x="70.9229%" y="559.50"></text></g><g><title>libruby.3.4.dylib`newobj_of (2 samples, 0.03%)</title><rect x="70.7023%" y="533" width="0.0294%" height="15" fill="rgb(241,2,18)" fg:x="4812" fg:w="2"/><text x="70.9523%" y="543.50"></text></g><g><title>libruby.3.4.dylib`rb_int_to_s (2 samples, 0.03%)</title><rect x="70.7317%" y="549" width="0.0294%" height="15" fill="rgb(228,207,21)" fg:x="4814" fg:w="2"/><text x="70.9817%" y="559.50"></text></g><g><title>libruby.3.4.dylib`rb_ivar_defined (2 samples, 0.03%)</title><rect x="70.7611%" y="549" width="0.0294%" height="15" fill="rgb(213,211,35)" fg:x="4816" fg:w="2"/><text x="71.0111%" y="559.50"></text></g><g><title>libruby.3.4.dylib`rb_obj_class (10 samples, 0.15%)</title><rect x="70.7905%" y="549" width="0.1469%" height="15" fill="rgb(209,83,10)" fg:x="4818" fg:w="10"/><text x="71.0405%" y="559.50"></text></g><g><title>libruby.3.4.dylib`rb_str_equal (1 samples, 0.01%)</title><rect x="70.9374%" y="549" width="0.0147%" height="15" fill="rgb(209,164,1)" fg:x="4828" fg:w="1"/><text x="71.1874%" y="559.50"></text></g><g><title>libruby.3.4.dylib`rb_vm_opt_getconstant_path (8 samples, 0.12%)</title><rect x="70.9521%" y="549" width="0.1175%" height="15" fill="rgb(213,184,43)" fg:x="4829" fg:w="8"/><text x="71.2021%" y="559.50"></text></g><g><title>libruby.3.4.dylib`rb_wb_protected_newobj_of (2 samples, 0.03%)</title><rect x="71.0696%" y="549" width="0.0294%" height="15" fill="rgb(231,61,34)" fg:x="4837" fg:w="2"/><text x="71.3196%" y="559.50"></text></g><g><title>libruby.3.4.dylib`tbl_update (1 samples, 0.01%)</title><rect x="71.0990%" y="549" width="0.0147%" height="15" fill="rgb(235,75,3)" fg:x="4839" fg:w="1"/><text x="71.3490%" y="559.50"></text></g><g><title>itsi_server.bundle`&lt;core::result::Result&lt;T,E&gt; as magnus::method::private::ReturnValue&gt;::into_return_value (1 samples, 0.01%)</title><rect x="71.9806%" y="533" width="0.0147%" height="15" fill="rgb(220,106,47)" fg:x="4899" fg:w="1"/><text x="72.2306%" y="543.50"></text></g><g><title>itsi_server.bundle`&lt;magnus::integer::Integer as magnus::try_convert::TryConvert&gt;::try_convert (1 samples, 0.01%)</title><rect x="71.9953%" y="533" width="0.0147%" height="15" fill="rgb(210,196,33)" fg:x="4900" fg:w="1"/><text x="72.2453%" y="543.50"></text></g><g><title>itsi_server.bundle`&lt;magnus::r_string::RString as magnus::try_convert::TryConvert&gt;::try_convert (1 samples, 0.01%)</title><rect x="72.0100%" y="533" width="0.0147%" height="15" fill="rgb(229,154,42)" fg:x="4901" fg:w="1"/><text x="72.2600%" y="543.50"></text></g><g><title>itsi_server.bundle`DYLD-STUB$$rb_utf8_str_new (3 samples, 0.04%)</title><rect x="72.0247%" y="533" width="0.0441%" height="15" fill="rgb(228,114,26)" fg:x="4902" fg:w="3"/><text x="72.2747%" y="543.50"></text></g><g><title>itsi_server.bundle`&lt;bytes::bytes::Bytes as core::convert::From&lt;alloc::vec::Vec&lt;u8&gt;&gt;&gt;::from (1 samples, 0.01%)</title><rect x="72.2598%" y="517" width="0.0147%" height="15" fill="rgb(208,144,1)" fg:x="4918" fg:w="1"/><text x="72.5098%" y="527.50"></text></g><g><title>itsi_server.bundle`core::ptr::drop_in_place&lt;itsi_server::ruby_types::itsi_body_proxy::big_bytes::BigBytes&gt; (1 samples, 0.01%)</title><rect x="72.4655%" y="373" width="0.0147%" height="15" fill="rgb(239,112,37)" fg:x="4932" fg:w="1"/><text x="72.7155%" y="383.50"></text></g><g><title>itsi_server.bundle`alloc::sync::Arc&lt;T,A&gt;::drop_slow (9 samples, 0.13%)</title><rect x="72.4802%" y="357" width="0.1322%" height="15" fill="rgb(210,96,50)" fg:x="4933" fg:w="9"/><text x="72.7302%" y="367.50"></text></g><g><title>itsi_server.bundle`core::ptr::drop_in_place&lt;http::request::Parts&gt; (9 samples, 0.13%)</title><rect x="72.4802%" y="341" width="0.1322%" height="15" fill="rgb(222,178,2)" fg:x="4933" fg:w="9"/><text x="72.7302%" y="351.50"></text></g><g><title>itsi_server.bundle`core::ptr::drop_in_place&lt;http::header::map::HeaderMap&gt; (8 samples, 0.12%)</title><rect x="72.4949%" y="325" width="0.1175%" height="15" fill="rgb(226,74,18)" fg:x="4934" fg:w="8"/><text x="72.7449%" y="335.50"></text></g><g><title>itsi_server.bundle`&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (8 samples, 0.12%)</title><rect x="72.4949%" y="309" width="0.1175%" height="15" fill="rgb(225,67,54)" fg:x="4934" fg:w="8"/><text x="72.7449%" y="319.50"></text></g><g><title>itsi_server.bundle`bytes::bytes_mut::shared_v_drop (8 samples, 0.12%)</title><rect x="72.4949%" y="293" width="0.1175%" height="15" fill="rgb(251,92,32)" fg:x="4934" fg:w="8"/><text x="72.7449%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`free_small (8 samples, 0.12%)</title><rect x="72.4949%" y="277" width="0.1175%" height="15" fill="rgb(228,149,22)" fg:x="4934" fg:w="8"/><text x="72.7449%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`small_free_list_remove_ptr_no_clear (3 samples, 0.04%)</title><rect x="72.5683%" y="261" width="0.0441%" height="15" fill="rgb(243,54,13)" fg:x="4939" fg:w="3"/><text x="72.8183%" y="271.50"></text></g><g><title>itsi_server.bundle`core::ptr::drop_in_place&lt;itsi_server::ruby_types::itsi_http_response::ItsiHttpResponse&gt; (10 samples, 0.15%)</title><rect x="72.4802%" y="373" width="0.1469%" height="15" fill="rgb(243,180,28)" fg:x="4933" fg:w="10"/><text x="72.7302%" y="383.50"></text></g><g><title>libsystem_platform.dylib`_platform_memset (1 samples, 0.01%)</title><rect x="72.6124%" y="357" width="0.0147%" height="15" fill="rgb(208,167,24)" fg:x="4942" fg:w="1"/><text x="72.8624%" y="367.50"></text></g><g><title>libsystem_malloc.dylib`_free (2 samples, 0.03%)</title><rect x="72.6271%" y="373" width="0.0294%" height="15" fill="rgb(245,73,45)" fg:x="4943" fg:w="2"/><text x="72.8771%" y="383.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (1 samples, 0.01%)</title><rect x="72.6565%" y="373" width="0.0147%" height="15" fill="rgb(237,203,48)" fg:x="4945" fg:w="1"/><text x="72.9065%" y="383.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_remove_ptr (1 samples, 0.01%)</title><rect x="72.6859%" y="357" width="0.0147%" height="15" fill="rgb(211,197,16)" fg:x="4947" fg:w="1"/><text x="72.9359%" y="367.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_add_ptr (2 samples, 0.03%)</title><rect x="72.7153%" y="341" width="0.0294%" height="15" fill="rgb(243,99,51)" fg:x="4949" fg:w="2"/><text x="72.9653%" y="351.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (7 samples, 0.10%)</title><rect x="72.6712%" y="373" width="0.1029%" height="15" fill="rgb(215,123,29)" fg:x="4946" fg:w="7"/><text x="72.9212%" y="383.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (5 samples, 0.07%)</title><rect x="72.7006%" y="357" width="0.0735%" height="15" fill="rgb(239,186,37)" fg:x="4948" fg:w="5"/><text x="72.9506%" y="367.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_remove_ptr (2 samples, 0.03%)</title><rect x="72.7446%" y="341" width="0.0294%" height="15" fill="rgb(252,136,39)" fg:x="4951" fg:w="2"/><text x="72.9946%" y="351.50"></text></g><g><title>itsi_server.bundle`core::ptr::drop_in_place&lt;itsi_server::ruby_types::itsi_http_request::ItsiHttpRequest&gt; (22 samples, 0.32%)</title><rect x="72.4655%" y="389" width="0.3232%" height="15" fill="rgb(223,213,32)" fg:x="4932" fg:w="22"/><text x="72.7155%" y="399.50"></text></g><g><title>libsystem_platform.dylib`_platform_memset (1 samples, 0.01%)</title><rect x="72.7740%" y="373" width="0.0147%" height="15" fill="rgb(233,115,5)" fg:x="4953" fg:w="1"/><text x="73.0240%" y="383.50"></text></g><g><title>itsi_server.bundle`magnus::typed_data::DataTypeFunctions::extern_free (23 samples, 0.34%)</title><rect x="72.4655%" y="405" width="0.3379%" height="15" fill="rgb(207,226,44)" fg:x="4932" fg:w="23"/><text x="72.7155%" y="415.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_madvise_block (1 samples, 0.01%)</title><rect x="72.7887%" y="389" width="0.0147%" height="15" fill="rgb(208,126,0)" fg:x="4954" fg:w="1"/><text x="73.0387%" y="399.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_madvise_block_locked (1 samples, 0.01%)</title><rect x="72.7887%" y="373" width="0.0147%" height="15" fill="rgb(244,66,21)" fg:x="4954" fg:w="1"/><text x="73.0387%" y="383.50"></text></g><g><title>libsystem_kernel.dylib`madvise (1 samples, 0.01%)</title><rect x="72.7887%" y="357" width="0.0147%" height="15" fill="rgb(222,97,12)" fg:x="4954" fg:w="1"/><text x="73.0387%" y="367.50"></text></g><g><title>libruby.3.4.dylib`rb_ary_free (1 samples, 0.01%)</title><rect x="72.8034%" y="405" width="0.0147%" height="15" fill="rgb(219,213,19)" fg:x="4955" fg:w="1"/><text x="73.0534%" y="415.50"></text></g><g><title>libruby.3.4.dylib`rb_str_free (1 samples, 0.01%)</title><rect x="72.8181%" y="405" width="0.0147%" height="15" fill="rgb(252,169,30)" fg:x="4956" fg:w="1"/><text x="73.0681%" y="415.50"></text></g><g><title>libruby.3.4.dylib`rb_gc_obj_free (29 samples, 0.43%)</title><rect x="72.4214%" y="421" width="0.4261%" height="15" fill="rgb(206,32,51)" fg:x="4929" fg:w="29"/><text x="72.6714%" y="431.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (1 samples, 0.01%)</title><rect x="72.8328%" y="405" width="0.0147%" height="15" fill="rgb(250,172,42)" fg:x="4957" fg:w="1"/><text x="73.0828%" y="415.50"></text></g><g><title>libruby.3.4.dylib`rb_gc_obj_free_vm_weak_references (5 samples, 0.07%)</title><rect x="72.8475%" y="421" width="0.0735%" height="15" fill="rgb(209,34,43)" fg:x="4958" fg:w="5"/><text x="73.0975%" y="431.50"></text></g><g><title>libruby.3.4.dylib`gc_sweep_plane (43 samples, 0.63%)</title><rect x="72.3185%" y="437" width="0.6318%" height="15" fill="rgb(223,11,35)" fg:x="4922" fg:w="43"/><text x="72.5685%" y="447.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (2 samples, 0.03%)</title><rect x="72.9210%" y="421" width="0.0294%" height="15" fill="rgb(251,219,26)" fg:x="4963" fg:w="2"/><text x="73.1710%" y="431.50"></text></g><g><title>libruby.3.4.dylib`newobj_of (46 samples, 0.68%)</title><rect x="72.2892%" y="501" width="0.6759%" height="15" fill="rgb(231,119,3)" fg:x="4920" fg:w="46"/><text x="72.5392%" y="511.50"></text></g><g><title>libruby.3.4.dylib`newobj_cache_miss (44 samples, 0.65%)</title><rect x="72.3185%" y="485" width="0.6465%" height="15" fill="rgb(216,97,11)" fg:x="4922" fg:w="44"/><text x="72.5685%" y="495.50"></text></g><g><title>libruby.3.4.dylib`gc_continue (44 samples, 0.65%)</title><rect x="72.3185%" y="469" width="0.6465%" height="15" fill="rgb(223,59,9)" fg:x="4922" fg:w="44"/><text x="72.5685%" y="479.50"></text></g><g><title>libruby.3.4.dylib`gc_sweep_step (44 samples, 0.65%)</title><rect x="72.3185%" y="453" width="0.6465%" height="15" fill="rgb(233,93,31)" fg:x="4922" fg:w="44"/><text x="72.5685%" y="463.50"></text></g><g><title>libruby.3.4.dylib`rb_gc_obj_free_vm_weak_references (1 samples, 0.01%)</title><rect x="72.9503%" y="437" width="0.0147%" height="15" fill="rgb(239,81,33)" fg:x="4965" fg:w="1"/><text x="73.2003%" y="447.50"></text></g><g><title>libruby.3.4.dylib`typed_data_alloc (2 samples, 0.03%)</title><rect x="72.9650%" y="501" width="0.0294%" height="15" fill="rgb(213,120,34)" fg:x="4966" fg:w="2"/><text x="73.2150%" y="511.50"></text></g><g><title>libruby.3.4.dylib`rb_get_alloc_func (1 samples, 0.01%)</title><rect x="72.9797%" y="485" width="0.0147%" height="15" fill="rgb(243,49,53)" fg:x="4967" fg:w="1"/><text x="73.2297%" y="495.50"></text></g><g><title>itsi_server.bundle`&lt;core::result::Result&lt;T,E&gt; as magnus::method::private::ReturnValue&gt;::into_return_value (50 samples, 0.73%)</title><rect x="72.2745%" y="517" width="0.7346%" height="15" fill="rgb(247,216,33)" fg:x="4919" fg:w="50"/><text x="72.5245%" y="527.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate_outlined (1 samples, 0.01%)</title><rect x="72.9944%" y="501" width="0.0147%" height="15" fill="rgb(226,26,14)" fg:x="4968" fg:w="1"/><text x="73.2444%" y="511.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_find_block_and_allocate (1 samples, 0.01%)</title><rect x="72.9944%" y="485" width="0.0147%" height="15" fill="rgb(215,49,53)" fg:x="4968" fg:w="1"/><text x="73.2444%" y="495.50"></text></g><g><title>itsi_server.bundle`DYLD-STUB$$malloc (3 samples, 0.04%)</title><rect x="73.0091%" y="517" width="0.0441%" height="15" fill="rgb(245,162,40)" fg:x="4969" fg:w="3"/><text x="73.2591%" y="527.50"></text></g><g><title>itsi_server.bundle`DYLD-STUB$$rb_protect (1 samples, 0.01%)</title><rect x="73.0532%" y="517" width="0.0147%" height="15" fill="rgb(229,68,17)" fg:x="4972" fg:w="1"/><text x="73.3032%" y="527.50"></text></g><g><title>itsi_server.bundle`DYLD-STUB$$rb_utf8_str_new (1 samples, 0.01%)</title><rect x="73.0679%" y="517" width="0.0147%" height="15" fill="rgb(213,182,10)" fg:x="4973" fg:w="1"/><text x="73.3179%" y="527.50"></text></g><g><title>itsi_server.bundle`core::str::_&lt;impl str&gt;::trim_end_matches (1 samples, 0.01%)</title><rect x="73.0826%" y="517" width="0.0147%" height="15" fill="rgb(245,125,30)" fg:x="4974" fg:w="1"/><text x="73.3326%" y="527.50"></text></g><g><title>itsi_server.bundle`core::str::pattern::StrSearcher::new (2 samples, 0.03%)</title><rect x="73.0973%" y="517" width="0.0294%" height="15" fill="rgb(232,202,2)" fg:x="4975" fg:w="2"/><text x="73.3473%" y="527.50"></text></g><g><title>itsi_server.bundle`http::header::map::HeaderMap&lt;T&gt;::try_reserve (4 samples, 0.06%)</title><rect x="73.1267%" y="517" width="0.0588%" height="15" fill="rgb(237,140,51)" fg:x="4977" fg:w="4"/><text x="73.3767%" y="527.50"></text></g><g><title>itsi_server.bundle`http::header::value::HeaderValue::to_str (2 samples, 0.03%)</title><rect x="73.1854%" y="517" width="0.0294%" height="15" fill="rgb(236,157,25)" fg:x="4981" fg:w="2"/><text x="73.4354%" y="527.50"></text></g><g><title>itsi_server.bundle`itsi_server::ruby_types::itsi_body_proxy::big_bytes::BigBytes::as_value (1 samples, 0.01%)</title><rect x="73.2295%" y="501" width="0.0147%" height="15" fill="rgb(219,209,0)" fg:x="4984" fg:w="1"/><text x="73.4795%" y="511.50"></text></g><g><title>itsi_server.bundle`itsi_server::ruby_types::itsi_body_proxy::ItsiBody::into_value (3 samples, 0.04%)</title><rect x="73.2148%" y="517" width="0.0441%" height="15" fill="rgb(240,116,54)" fg:x="4983" fg:w="3"/><text x="73.4648%" y="527.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (1 samples, 0.01%)</title><rect x="73.2442%" y="501" width="0.0147%" height="15" fill="rgb(216,10,36)" fg:x="4985" fg:w="1"/><text x="73.4942%" y="511.50"></text></g><g><title>libruby.3.4.dylib`rb_enc_raw_set (2 samples, 0.03%)</title><rect x="73.3030%" y="501" width="0.0294%" height="15" fill="rgb(222,72,44)" fg:x="4989" fg:w="2"/><text x="73.5530%" y="511.50"></text></g><g><title>libruby.3.4.dylib`rb_gc_size_allocatable_p (2 samples, 0.03%)</title><rect x="73.3324%" y="501" width="0.0294%" height="15" fill="rgb(232,159,9)" fg:x="4991" fg:w="2"/><text x="73.5824%" y="511.50"></text></g><g><title>itsi_server.bundle`magnus::error::protect::call (1 samples, 0.01%)</title><rect x="73.4058%" y="485" width="0.0147%" height="15" fill="rgb(210,39,32)" fg:x="4996" fg:w="1"/><text x="73.6558%" y="495.50"></text></g><g><title>libdyld.dylib`tlv_get_addr (1 samples, 0.01%)</title><rect x="73.4205%" y="485" width="0.0147%" height="15" fill="rgb(216,194,45)" fg:x="4997" fg:w="1"/><text x="73.6705%" y="495.50"></text></g><g><title>libruby.3.4.dylib`invoke_block_from_c_bh (1 samples, 0.01%)</title><rect x="73.4352%" y="485" width="0.0147%" height="15" fill="rgb(218,18,35)" fg:x="4998" fg:w="1"/><text x="73.6852%" y="495.50"></text></g><g><title>libruby.3.4.dylib`CALLER_SETUP_ARG (1 samples, 0.01%)</title><rect x="73.5234%" y="453" width="0.0147%" height="15" fill="rgb(207,83,51)" fg:x="5004" fg:w="1"/><text x="73.7734%" y="463.50"></text></g><g><title>libruby.3.4.dylib`rb_st_lookup (3 samples, 0.04%)</title><rect x="73.5381%" y="437" width="0.0441%" height="15" fill="rgb(225,63,43)" fg:x="5005" fg:w="3"/><text x="73.7881%" y="447.50"></text></g><g><title>libruby.3.4.dylib`any_hash (1 samples, 0.01%)</title><rect x="73.7878%" y="405" width="0.0147%" height="15" fill="rgb(207,57,36)" fg:x="5022" fg:w="1"/><text x="74.0378%" y="415.50"></text></g><g><title>libruby.3.4.dylib`any_hash (3 samples, 0.04%)</title><rect x="73.8466%" y="389" width="0.0441%" height="15" fill="rgb(216,99,33)" fg:x="5026" fg:w="3"/><text x="74.0966%" y="399.50"></text></g><g><title>libruby.3.4.dylib`ruby_sip_hash13 (2 samples, 0.03%)</title><rect x="73.8613%" y="373" width="0.0294%" height="15" fill="rgb(225,42,16)" fg:x="5027" fg:w="2"/><text x="74.1113%" y="383.50"></text></g><g><title>libruby.3.4.dylib`rb_hash_aref (13 samples, 0.19%)</title><rect x="73.7438%" y="421" width="0.1910%" height="15" fill="rgb(220,201,45)" fg:x="5019" fg:w="13"/><text x="73.9938%" y="431.50"></text></g><g><title>libruby.3.4.dylib`rb_st_lookup (9 samples, 0.13%)</title><rect x="73.8025%" y="405" width="0.1322%" height="15" fill="rgb(225,33,4)" fg:x="5023" fg:w="9"/><text x="74.0525%" y="415.50"></text></g><g><title>libsystem_platform.dylib`_platform_memcmp (3 samples, 0.04%)</title><rect x="73.8907%" y="389" width="0.0441%" height="15" fill="rgb(224,33,50)" fg:x="5029" fg:w="3"/><text x="74.1407%" y="399.50"></text></g><g><title>libruby.3.4.dylib`rb_gc_writebarrier (1 samples, 0.01%)</title><rect x="73.9348%" y="405" width="0.0147%" height="15" fill="rgb(246,198,51)" fg:x="5032" fg:w="1"/><text x="74.1848%" y="415.50"></text></g><g><title>libruby.3.4.dylib`rb_gc_writebarrier (1 samples, 0.01%)</title><rect x="73.9641%" y="389" width="0.0147%" height="15" fill="rgb(205,22,4)" fg:x="5034" fg:w="1"/><text x="74.2141%" y="399.50"></text></g><g><title>libruby.3.4.dylib`any_hash (1 samples, 0.01%)</title><rect x="74.0082%" y="373" width="0.0147%" height="15" fill="rgb(206,3,8)" fg:x="5037" fg:w="1"/><text x="74.2582%" y="383.50"></text></g><g><title>libruby.3.4.dylib`ruby_sip_hash13 (1 samples, 0.01%)</title><rect x="74.0082%" y="357" width="0.0147%" height="15" fill="rgb(251,23,15)" fg:x="5037" fg:w="1"/><text x="74.2582%" y="367.50"></text></g><g><title>libruby.3.4.dylib`hash_aset_str_insert (1 samples, 0.01%)</title><rect x="74.0229%" y="373" width="0.0147%" height="15" fill="rgb(252,88,28)" fg:x="5038" fg:w="1"/><text x="74.2729%" y="383.50"></text></g><g><title>libruby.3.4.dylib`rb_any_cmp (1 samples, 0.01%)</title><rect x="74.0376%" y="373" width="0.0147%" height="15" fill="rgb(212,127,14)" fg:x="5039" fg:w="1"/><text x="74.2876%" y="383.50"></text></g><g><title>libruby.3.4.dylib`rb_str_comparable (1 samples, 0.01%)</title><rect x="74.0523%" y="373" width="0.0147%" height="15" fill="rgb(247,145,37)" fg:x="5040" fg:w="1"/><text x="74.3023%" y="383.50"></text></g><g><title>libruby.3.4.dylib`str_do_hash (1 samples, 0.01%)</title><rect x="74.0670%" y="373" width="0.0147%" height="15" fill="rgb(209,117,53)" fg:x="5041" fg:w="1"/><text x="74.3170%" y="383.50"></text></g><g><title>libruby.3.4.dylib`rb_st_update (8 samples, 0.12%)</title><rect x="73.9788%" y="389" width="0.1175%" height="15" fill="rgb(212,90,42)" fg:x="5035" fg:w="8"/><text x="74.2288%" y="399.50"></text></g><g><title>libsystem_platform.dylib`_platform_memcmp (1 samples, 0.01%)</title><rect x="74.0817%" y="373" width="0.0147%" height="15" fill="rgb(218,164,37)" fg:x="5042" fg:w="1"/><text x="74.3317%" y="383.50"></text></g><g><title>libruby.3.4.dylib`rb_hash_aset (12 samples, 0.18%)</title><rect x="73.9348%" y="421" width="0.1763%" height="15" fill="rgb(246,65,34)" fg:x="5032" fg:w="12"/><text x="74.1848%" y="431.50"></text></g><g><title>libruby.3.4.dylib`tbl_update (11 samples, 0.16%)</title><rect x="73.9495%" y="405" width="0.1616%" height="15" fill="rgb(231,100,33)" fg:x="5033" fg:w="11"/><text x="74.1995%" y="415.50"></text></g><g><title>libruby.3.4.dylib`rb_str_hash_cmp (1 samples, 0.01%)</title><rect x="74.0964%" y="389" width="0.0147%" height="15" fill="rgb(228,126,14)" fg:x="5043" fg:w="1"/><text x="74.3464%" y="399.50"></text></g><g><title>libruby.3.4.dylib`ruby_sip_hash13 (4 samples, 0.06%)</title><rect x="74.1699%" y="405" width="0.0588%" height="15" fill="rgb(215,173,21)" fg:x="5048" fg:w="4"/><text x="74.4199%" y="415.50"></text></g><g><title>libruby.3.4.dylib`rb_vm_exec (49 samples, 0.72%)</title><rect x="73.5381%" y="453" width="0.7200%" height="15" fill="rgb(210,6,40)" fg:x="5005" fg:w="49"/><text x="73.7881%" y="463.50"></text></g><g><title>libruby.3.4.dylib`vm_exec_core (46 samples, 0.68%)</title><rect x="73.5821%" y="437" width="0.6759%" height="15" fill="rgb(212,48,18)" fg:x="5008" fg:w="46"/><text x="73.8321%" y="447.50"></text></g><g><title>libruby.3.4.dylib`rb_st_lookup (10 samples, 0.15%)</title><rect x="74.1111%" y="421" width="0.1469%" height="15" fill="rgb(230,214,11)" fg:x="5044" fg:w="10"/><text x="74.3611%" y="431.50"></text></g><g><title>libruby.3.4.dylib`str_do_hash (2 samples, 0.03%)</title><rect x="74.2286%" y="405" width="0.0294%" height="15" fill="rgb(254,105,39)" fg:x="5052" fg:w="2"/><text x="74.4786%" y="415.50"></text></g><g><title>libruby.3.4.dylib`rb_enc_dummy_p (1 samples, 0.01%)</title><rect x="74.2433%" y="389" width="0.0147%" height="15" fill="rgb(245,158,5)" fg:x="5053" fg:w="1"/><text x="74.4933%" y="399.50"></text></g><g><title>libruby.3.4.dylib`vm_exec_core (2 samples, 0.03%)</title><rect x="74.2580%" y="453" width="0.0294%" height="15" fill="rgb(249,208,11)" fg:x="5054" fg:w="2"/><text x="74.5080%" y="463.50"></text></g><g><title>libruby.3.4.dylib`invoke_block_from_c_bh (58 samples, 0.85%)</title><rect x="73.4499%" y="469" width="0.8522%" height="15" fill="rgb(210,39,28)" fg:x="4999" fg:w="58"/><text x="73.6999%" y="479.50"></text></g><g><title>libsystem_platform.dylib`_setjmp (1 samples, 0.01%)</title><rect x="74.2874%" y="453" width="0.0147%" height="15" fill="rgb(211,56,53)" fg:x="5056" fg:w="1"/><text x="74.5374%" y="463.50"></text></g><g><title>libruby.3.4.dylib`rb_protect (65 samples, 0.96%)</title><rect x="73.3617%" y="501" width="0.9550%" height="15" fill="rgb(226,201,30)" fg:x="4993" fg:w="65"/><text x="73.6117%" y="511.50"></text></g><g><title>libruby.3.4.dylib`rb_yield_values_kw (59 samples, 0.87%)</title><rect x="73.4499%" y="485" width="0.8669%" height="15" fill="rgb(239,101,34)" fg:x="4999" fg:w="59"/><text x="73.6999%" y="495.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (1 samples, 0.01%)</title><rect x="74.3021%" y="469" width="0.0147%" height="15" fill="rgb(226,209,5)" fg:x="5057" fg:w="1"/><text x="74.5521%" y="479.50"></text></g><g><title>libdyld.dylib`tlv_get_addr (2 samples, 0.03%)</title><rect x="74.3609%" y="485" width="0.0294%" height="15" fill="rgb(250,105,47)" fg:x="5061" fg:w="2"/><text x="74.6109%" y="495.50"></text></g><g><title>libruby.3.4.dylib`newobj_of (5 samples, 0.07%)</title><rect x="74.3902%" y="485" width="0.0735%" height="15" fill="rgb(230,72,3)" fg:x="5063" fg:w="5"/><text x="74.6402%" y="495.50"></text></g><g><title>libruby.3.4.dylib`str_enc_new (12 samples, 0.18%)</title><rect x="74.3168%" y="501" width="0.1763%" height="15" fill="rgb(232,218,39)" fg:x="5058" fg:w="12"/><text x="74.5668%" y="511.50"></text></g><g><title>libruby.3.4.dylib`rb_current_ec (2 samples, 0.03%)</title><rect x="74.4637%" y="485" width="0.0294%" height="15" fill="rgb(248,166,6)" fg:x="5068" fg:w="2"/><text x="74.7137%" y="495.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (10 samples, 0.15%)</title><rect x="74.4931%" y="501" width="0.1469%" height="15" fill="rgb(247,89,20)" fg:x="5070" fg:w="10"/><text x="74.7431%" y="511.50"></text></g><g><title>itsi_server.bundle`itsi_server::ruby_types::itsi_http_request::ItsiHttpRequest::each_header (95 samples, 1.40%)</title><rect x="73.2589%" y="517" width="1.3958%" height="15" fill="rgb(248,130,54)" fg:x="4986" fg:w="95"/><text x="73.5089%" y="527.50"></text></g><g><title>libsystem_platform.dylib`_setjmp (1 samples, 0.01%)</title><rect x="74.6400%" y="501" width="0.0147%" height="15" fill="rgb(234,196,4)" fg:x="5080" fg:w="1"/><text x="74.8900%" y="511.50"></text></g><g><title>itsi_server.bundle`core::str::_&lt;impl str&gt;::trim_end_matches (5 samples, 0.07%)</title><rect x="74.6547%" y="501" width="0.0735%" height="15" fill="rgb(250,143,31)" fg:x="5081" fg:w="5"/><text x="74.9047%" y="511.50"></text></g><g><title>itsi_server.bundle`core::str::pattern::StrSearcher::new (3 samples, 0.04%)</title><rect x="74.6841%" y="485" width="0.0441%" height="15" fill="rgb(211,110,34)" fg:x="5083" fg:w="3"/><text x="74.9341%" y="495.50"></text></g><g><title>itsi_server.bundle`itsi_server::ruby_types::itsi_http_request::ItsiHttpRequest::path (6 samples, 0.09%)</title><rect x="74.6547%" y="517" width="0.0882%" height="15" fill="rgb(215,124,48)" fg:x="5081" fg:w="6"/><text x="74.9047%" y="527.50"></text></g><g><title>itsi_server.bundle`core::str::pattern::StrSearcher::new (1 samples, 0.01%)</title><rect x="74.7282%" y="501" width="0.0147%" height="15" fill="rgb(216,46,13)" fg:x="5086" fg:w="1"/><text x="74.9782%" y="511.50"></text></g><g><title>itsi_server.bundle`core::ptr::drop_in_place&lt;itsi_server::ruby_types::itsi_http_response::BodyState&gt; (1 samples, 0.01%)</title><rect x="74.7870%" y="501" width="0.0147%" height="15" fill="rgb(205,184,25)" fg:x="5090" fg:w="1"/><text x="75.0370%" y="511.50"></text></g><g><title>itsi_server.bundle`tokio::runtime::context::with_scheduler (1 samples, 0.01%)</title><rect x="74.8016%" y="501" width="0.0147%" height="15" fill="rgb(228,1,10)" fg:x="5091" fg:w="1"/><text x="75.0516%" y="511.50"></text></g><g><title>itsi_server.bundle`tokio::runtime::task::raw::schedule (2 samples, 0.03%)</title><rect x="74.8163%" y="501" width="0.0294%" height="15" fill="rgb(213,116,27)" fg:x="5092" fg:w="2"/><text x="75.0663%" y="511.50"></text></g><g><title>itsi_server.bundle`DYLD-STUB$$kevent (1 samples, 0.01%)</title><rect x="74.8457%" y="469" width="0.0147%" height="15" fill="rgb(241,95,50)" fg:x="5094" fg:w="1"/><text x="75.0957%" y="479.50"></text></g><g><title>itsi_server.bundle`tokio::runtime::scheduler::inject::Inject&lt;T&gt;::push (2 samples, 0.03%)</title><rect x="74.8604%" y="469" width="0.0294%" height="15" fill="rgb(238,48,32)" fg:x="5095" fg:w="2"/><text x="75.1104%" y="479.50"></text></g><g><title>itsi_server.bundle`parking_lot::raw_mutex::RawMutex::lock_slow (2 samples, 0.03%)</title><rect x="74.8604%" y="453" width="0.0294%" height="15" fill="rgb(235,113,49)" fg:x="5095" fg:w="2"/><text x="75.1104%" y="463.50"></text></g><g><title>libsystem_kernel.dylib`swtch_pri (1 samples, 0.01%)</title><rect x="74.8751%" y="437" width="0.0147%" height="15" fill="rgb(205,127,43)" fg:x="5096" fg:w="1"/><text x="75.1251%" y="447.50"></text></g><g><title>itsi_server.bundle`tokio::runtime::context::with_scheduler (287 samples, 4.22%)</title><rect x="74.8457%" y="485" width="4.2169%" height="15" fill="rgb(250,162,2)" fg:x="5094" fg:w="287"/><text x="75.0957%" y="495.50">itsi_..</text></g><g><title>libsystem_kernel.dylib`kevent (284 samples, 4.17%)</title><rect x="74.8898%" y="469" width="4.1728%" height="15" fill="rgb(220,13,41)" fg:x="5097" fg:w="284"/><text x="75.1398%" y="479.50">libsy..</text></g><g><title>itsi_server.bundle`tokio::runtime::task::waker::wake_by_val (290 samples, 4.26%)</title><rect x="74.8457%" y="501" width="4.2609%" height="15" fill="rgb(249,221,25)" fg:x="5094" fg:w="290"/><text x="75.0957%" y="511.50">itsi_..</text></g><g><title>libdyld.dylib`tlv_get_addr (3 samples, 0.04%)</title><rect x="79.0626%" y="485" width="0.0441%" height="15" fill="rgb(215,208,19)" fg:x="5381" fg:w="3"/><text x="79.3126%" y="495.50"></text></g><g><title>itsi_server.bundle`itsi_server::ruby_types::itsi_http_response::ItsiHttpResponse::send_and_close (326 samples, 4.79%)</title><rect x="74.7429%" y="517" width="4.7899%" height="15" fill="rgb(236,175,2)" fg:x="5087" fg:w="326"/><text x="74.9929%" y="527.50">itsi_s..</text></g><g><title>itsi_server.bundle`tokio::sync::notify::Notify::notify_with_strategy (29 samples, 0.43%)</title><rect x="79.1067%" y="501" width="0.4261%" height="15" fill="rgb(241,52,2)" fg:x="5384" fg:w="29"/><text x="79.3567%" y="511.50"></text></g><g><title>itsi_server.bundle`tokio::sync::notify::notify_locked (28 samples, 0.41%)</title><rect x="79.1214%" y="485" width="0.4114%" height="15" fill="rgb(248,140,14)" fg:x="5385" fg:w="28"/><text x="79.3714%" y="495.50"></text></g><g><title>itsi_server.bundle`itsi_server::ruby_types::itsi_http_response::ItsiHttpResponse::set_status (2 samples, 0.03%)</title><rect x="79.5328%" y="517" width="0.0294%" height="15" fill="rgb(253,22,42)" fg:x="5413" fg:w="2"/><text x="79.7828%" y="527.50"></text></g><g><title>itsi_server.bundle`magnus::error::protect::call (7 samples, 0.10%)</title><rect x="79.7972%" y="501" width="0.1029%" height="15" fill="rgb(234,61,47)" fg:x="5431" fg:w="7"/><text x="80.0472%" y="511.50"></text></g><g><title>libruby.3.4.dylib`DYLD-STUB$$_setjmp (1 samples, 0.01%)</title><rect x="79.9001%" y="501" width="0.0147%" height="15" fill="rgb(208,226,15)" fg:x="5438" fg:w="1"/><text x="80.1501%" y="511.50"></text></g><g><title>itsi_server.bundle`DYLD-STUB$$rb_check_typeddata (3 samples, 0.04%)</title><rect x="80.3409%" y="485" width="0.0441%" height="15" fill="rgb(217,221,4)" fg:x="5468" fg:w="3"/><text x="80.5909%" y="495.50"></text></g><g><title>itsi_server.bundle`magnus::error::protect::call (16 samples, 0.24%)</title><rect x="80.3850%" y="485" width="0.2351%" height="15" fill="rgb(212,174,34)" fg:x="5471" fg:w="16"/><text x="80.6350%" y="495.50"></text></g><g><title>libruby.3.4.dylib`rb_check_typeddata (9 samples, 0.13%)</title><rect x="80.4878%" y="469" width="0.1322%" height="15" fill="rgb(253,83,4)" fg:x="5478" fg:w="9"/><text x="80.7378%" y="479.50"></text></g><g><title>libdyld.dylib`tlv_get_addr (11 samples, 0.16%)</title><rect x="80.6200%" y="485" width="0.1616%" height="15" fill="rgb(250,195,49)" fg:x="5487" fg:w="11"/><text x="80.8700%" y="495.50"></text></g><g><title>libruby.3.4.dylib`rb_check_typeddata (4 samples, 0.06%)</title><rect x="80.7817%" y="485" width="0.0588%" height="15" fill="rgb(241,192,25)" fg:x="5498" fg:w="4"/><text x="81.0317%" y="495.50"></text></g><g><title>libruby.3.4.dylib`rb_protect (65 samples, 0.96%)</title><rect x="79.9148%" y="501" width="0.9550%" height="15" fill="rgb(208,124,10)" fg:x="5439" fg:w="65"/><text x="80.1648%" y="511.50"></text></g><g><title>libruby.3.4.dylib`rb_current_ec (2 samples, 0.03%)</title><rect x="80.8404%" y="485" width="0.0294%" height="15" fill="rgb(222,33,0)" fg:x="5502" fg:w="2"/><text x="81.0904%" y="495.50"></text></g><g><title>itsi_server.bundle`magnus::typed_data::_&lt;impl magnus::try_convert::TryConvert for &amp;T&gt;::try_convert (99 samples, 1.45%)</title><rect x="79.5622%" y="517" width="1.4546%" height="15" fill="rgb(234,209,28)" fg:x="5415" fg:w="99"/><text x="79.8122%" y="527.50"></text></g><g><title>libsystem_platform.dylib`_setjmp (10 samples, 0.15%)</title><rect x="80.8698%" y="501" width="0.1469%" height="15" fill="rgb(224,11,23)" fg:x="5504" fg:w="10"/><text x="81.1198%" y="511.50"></text></g><g><title>libruby.3.4.dylib`newobj_of (7 samples, 0.10%)</title><rect x="81.0167%" y="517" width="0.1029%" height="15" fill="rgb(232,99,1)" fg:x="5514" fg:w="7"/><text x="81.2667%" y="527.50"></text></g><g><title>libruby.3.4.dylib`rb_enc_raw_set (3 samples, 0.04%)</title><rect x="81.1196%" y="517" width="0.0441%" height="15" fill="rgb(237,95,45)" fg:x="5521" fg:w="3"/><text x="81.3696%" y="527.50"></text></g><g><title>libruby.3.4.dylib`rb_gc_size_allocatable_p (2 samples, 0.03%)</title><rect x="81.1637%" y="517" width="0.0294%" height="15" fill="rgb(208,109,11)" fg:x="5524" fg:w="2"/><text x="81.4137%" y="527.50"></text></g><g><title>libruby.3.4.dylib`rb_protect (1 samples, 0.01%)</title><rect x="81.1931%" y="517" width="0.0147%" height="15" fill="rgb(216,190,48)" fg:x="5526" fg:w="1"/><text x="81.4431%" y="527.50"></text></g><g><title>libruby.3.4.dylib`rb_utf8_encoding (1 samples, 0.01%)</title><rect x="81.2078%" y="517" width="0.0147%" height="15" fill="rgb(251,171,36)" fg:x="5527" fg:w="1"/><text x="81.4578%" y="527.50"></text></g><g><title>libruby.3.4.dylib`rb_utf8_str_new (6 samples, 0.09%)</title><rect x="81.2225%" y="517" width="0.0882%" height="15" fill="rgb(230,62,22)" fg:x="5528" fg:w="6"/><text x="81.4725%" y="527.50"></text></g><g><title>libruby.3.4.dylib`rb_wb_protected_newobj_of (3 samples, 0.04%)</title><rect x="81.3106%" y="517" width="0.0441%" height="15" fill="rgb(225,114,35)" fg:x="5534" fg:w="3"/><text x="81.5606%" y="527.50"></text></g><g><title>libdyld.dylib`tlv_get_addr (5 samples, 0.07%)</title><rect x="81.7955%" y="501" width="0.0735%" height="15" fill="rgb(215,118,42)" fg:x="5567" fg:w="5"/><text x="82.0455%" y="511.50"></text></g><g><title>itsi_server.bundle`&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.01%)</title><rect x="82.2363%" y="325" width="0.0147%" height="15" fill="rgb(243,119,21)" fg:x="5597" fg:w="1"/><text x="82.4863%" y="335.50"></text></g><g><title>libsystem_malloc.dylib`small_free_list_add_ptr (1 samples, 0.01%)</title><rect x="82.2510%" y="261" width="0.0147%" height="15" fill="rgb(252,177,53)" fg:x="5598" fg:w="1"/><text x="82.5010%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`small_free_list_remove_ptr_no_clear (1 samples, 0.01%)</title><rect x="82.2656%" y="261" width="0.0147%" height="15" fill="rgb(237,209,29)" fg:x="5599" fg:w="1"/><text x="82.5156%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`small_free_scan_madvise_free (1 samples, 0.01%)</title><rect x="82.2803%" y="261" width="0.0147%" height="15" fill="rgb(212,65,23)" fg:x="5600" fg:w="1"/><text x="82.5303%" y="271.50"></text></g><g><title>libsystem_kernel.dylib`madvise (1 samples, 0.01%)</title><rect x="82.2803%" y="245" width="0.0147%" height="15" fill="rgb(230,222,46)" fg:x="5600" fg:w="1"/><text x="82.5303%" y="255.50"></text></g><g><title>itsi_server.bundle`bytes::bytes_mut::shared_v_drop (4 samples, 0.06%)</title><rect x="82.2510%" y="293" width="0.0588%" height="15" fill="rgb(215,135,32)" fg:x="5598" fg:w="4"/><text x="82.5010%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`free_small (4 samples, 0.06%)</title><rect x="82.2510%" y="277" width="0.0588%" height="15" fill="rgb(246,101,22)" fg:x="5598" fg:w="4"/><text x="82.5010%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`small_madvise_free_range_no_lock (1 samples, 0.01%)</title><rect x="82.2950%" y="261" width="0.0147%" height="15" fill="rgb(206,107,13)" fg:x="5601" fg:w="1"/><text x="82.5450%" y="271.50"></text></g><g><title>libsystem_kernel.dylib`madvise (1 samples, 0.01%)</title><rect x="82.2950%" y="245" width="0.0147%" height="15" fill="rgb(250,100,44)" fg:x="5601" fg:w="1"/><text x="82.5450%" y="255.50"></text></g><g><title>itsi_server.bundle`alloc::sync::Arc&lt;T,A&gt;::drop_slow (6 samples, 0.09%)</title><rect x="82.2363%" y="357" width="0.0882%" height="15" fill="rgb(231,147,38)" fg:x="5597" fg:w="6"/><text x="82.4863%" y="367.50"></text></g><g><title>itsi_server.bundle`core::ptr::drop_in_place&lt;http::request::Parts&gt; (6 samples, 0.09%)</title><rect x="82.2363%" y="341" width="0.0882%" height="15" fill="rgb(229,8,40)" fg:x="5597" fg:w="6"/><text x="82.4863%" y="351.50"></text></g><g><title>itsi_server.bundle`core::ptr::drop_in_place&lt;http::header::map::HeaderMap&gt; (5 samples, 0.07%)</title><rect x="82.2510%" y="325" width="0.0735%" height="15" fill="rgb(221,135,30)" fg:x="5598" fg:w="5"/><text x="82.5010%" y="335.50"></text></g><g><title>itsi_server.bundle`&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (5 samples, 0.07%)</title><rect x="82.2510%" y="309" width="0.0735%" height="15" fill="rgb(249,193,18)" fg:x="5598" fg:w="5"/><text x="82.5010%" y="319.50"></text></g><g><title>libsystem_platform.dylib`__bzero (1 samples, 0.01%)</title><rect x="82.3097%" y="293" width="0.0147%" height="15" fill="rgb(209,133,39)" fg:x="5602" fg:w="1"/><text x="82.5597%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (1 samples, 0.01%)</title><rect x="82.3244%" y="357" width="0.0147%" height="15" fill="rgb(232,100,14)" fg:x="5603" fg:w="1"/><text x="82.5744%" y="367.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_madvise_block (1 samples, 0.01%)</title><rect x="82.3391%" y="357" width="0.0147%" height="15" fill="rgb(224,185,1)" fg:x="5604" fg:w="1"/><text x="82.5891%" y="367.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_madvise_block_locked (1 samples, 0.01%)</title><rect x="82.3391%" y="341" width="0.0147%" height="15" fill="rgb(223,139,8)" fg:x="5604" fg:w="1"/><text x="82.5891%" y="351.50"></text></g><g><title>itsi_server.bundle`core::ptr::drop_in_place&lt;itsi_server::ruby_types::itsi_http_response::ItsiHttpResponse&gt; (9 samples, 0.13%)</title><rect x="82.2363%" y="373" width="0.1322%" height="15" fill="rgb(232,213,38)" fg:x="5597" fg:w="9"/><text x="82.4863%" y="383.50"></text></g><g><title>libsystem_platform.dylib`_platform_memset (1 samples, 0.01%)</title><rect x="82.3538%" y="357" width="0.0147%" height="15" fill="rgb(207,94,22)" fg:x="5605" fg:w="1"/><text x="82.6038%" y="367.50"></text></g><g><title>libsystem_kernel.dylib`__ulock_wait2 (1 samples, 0.01%)</title><rect x="82.3685%" y="357" width="0.0147%" height="15" fill="rgb(219,183,54)" fg:x="5606" fg:w="1"/><text x="82.6185%" y="367.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_remove_ptr (1 samples, 0.01%)</title><rect x="82.3832%" y="357" width="0.0147%" height="15" fill="rgb(216,185,54)" fg:x="5607" fg:w="1"/><text x="82.6332%" y="367.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_add_ptr (1 samples, 0.01%)</title><rect x="82.4567%" y="341" width="0.0147%" height="15" fill="rgb(254,217,39)" fg:x="5612" fg:w="1"/><text x="82.7067%" y="351.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (10 samples, 0.15%)</title><rect x="82.3685%" y="373" width="0.1469%" height="15" fill="rgb(240,178,23)" fg:x="5606" fg:w="10"/><text x="82.6185%" y="383.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (8 samples, 0.12%)</title><rect x="82.3979%" y="357" width="0.1175%" height="15" fill="rgb(218,11,47)" fg:x="5608" fg:w="8"/><text x="82.6479%" y="367.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_remove_ptr (3 samples, 0.04%)</title><rect x="82.4713%" y="341" width="0.0441%" height="15" fill="rgb(218,51,51)" fg:x="5613" fg:w="3"/><text x="82.7213%" y="351.50"></text></g><g><title>itsi_server.bundle`core::ptr::drop_in_place&lt;itsi_server::ruby_types::itsi_http_request::ItsiHttpRequest&gt; (21 samples, 0.31%)</title><rect x="82.2216%" y="389" width="0.3086%" height="15" fill="rgb(238,126,27)" fg:x="5596" fg:w="21"/><text x="82.4716%" y="399.50"></text></g><g><title>libsystem_platform.dylib`_platform_memset (1 samples, 0.01%)</title><rect x="82.5154%" y="373" width="0.0147%" height="15" fill="rgb(249,202,22)" fg:x="5616" fg:w="1"/><text x="82.7654%" y="383.50"></text></g><g><title>itsi_server.bundle`core::ptr::drop_in_place&lt;itsi_server::ruby_types::itsi_http_response::ItsiHttpResponse&gt; (2 samples, 0.03%)</title><rect x="82.5301%" y="389" width="0.0294%" height="15" fill="rgb(254,195,49)" fg:x="5617" fg:w="2"/><text x="82.7801%" y="399.50"></text></g><g><title>libsystem_malloc.dylib`_free (2 samples, 0.03%)</title><rect x="82.5595%" y="389" width="0.0294%" height="15" fill="rgb(208,123,14)" fg:x="5619" fg:w="2"/><text x="82.8095%" y="399.50"></text></g><g><title>itsi_server.bundle`magnus::typed_data::DataTypeFunctions::extern_free (26 samples, 0.38%)</title><rect x="82.2216%" y="405" width="0.3820%" height="15" fill="rgb(224,200,8)" fg:x="5596" fg:w="26"/><text x="82.4716%" y="415.50"></text></g><g><title>libsystem_malloc.dylib`_szone_free (1 samples, 0.01%)</title><rect x="82.5889%" y="389" width="0.0147%" height="15" fill="rgb(217,61,36)" fg:x="5621" fg:w="1"/><text x="82.8389%" y="399.50"></text></g><g><title>libruby.3.4.dylib`rb_gc_obj_free (32 samples, 0.47%)</title><rect x="82.1481%" y="421" width="0.4702%" height="15" fill="rgb(206,35,45)" fg:x="5591" fg:w="32"/><text x="82.3981%" y="431.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (1 samples, 0.01%)</title><rect x="82.6036%" y="405" width="0.0147%" height="15" fill="rgb(217,65,33)" fg:x="5622" fg:w="1"/><text x="82.8536%" y="415.50"></text></g><g><title>libruby.3.4.dylib`rb_gc_obj_free_vm_weak_references (11 samples, 0.16%)</title><rect x="82.6183%" y="421" width="0.1616%" height="15" fill="rgb(222,158,48)" fg:x="5623" fg:w="11"/><text x="82.8683%" y="431.50"></text></g><g><title>libruby.3.4.dylib`gc_sweep_plane (56 samples, 0.82%)</title><rect x="81.9718%" y="437" width="0.8228%" height="15" fill="rgb(254,2,54)" fg:x="5579" fg:w="56"/><text x="82.2218%" y="447.50"></text></g><g><title>libruby.3.4.dylib`rb_str_free (1 samples, 0.01%)</title><rect x="82.7799%" y="421" width="0.0147%" height="15" fill="rgb(250,143,38)" fg:x="5634" fg:w="1"/><text x="83.0299%" y="431.50"></text></g><g><title>libruby.3.4.dylib`newobj_of (64 samples, 0.94%)</title><rect x="81.8689%" y="501" width="0.9403%" height="15" fill="rgb(248,25,0)" fg:x="5572" fg:w="64"/><text x="82.1189%" y="511.50"></text></g><g><title>libruby.3.4.dylib`newobj_cache_miss (57 samples, 0.84%)</title><rect x="81.9718%" y="485" width="0.8375%" height="15" fill="rgb(206,152,27)" fg:x="5579" fg:w="57"/><text x="82.2218%" y="495.50"></text></g><g><title>libruby.3.4.dylib`gc_continue (57 samples, 0.84%)</title><rect x="81.9718%" y="469" width="0.8375%" height="15" fill="rgb(240,77,30)" fg:x="5579" fg:w="57"/><text x="82.2218%" y="479.50"></text></g><g><title>libruby.3.4.dylib`gc_sweep_step (57 samples, 0.84%)</title><rect x="81.9718%" y="453" width="0.8375%" height="15" fill="rgb(231,5,3)" fg:x="5579" fg:w="57"/><text x="82.2218%" y="463.50"></text></g><g><title>libruby.3.4.dylib`rb_gc_obj_free_vm_weak_references (1 samples, 0.01%)</title><rect x="82.7946%" y="437" width="0.0147%" height="15" fill="rgb(207,226,32)" fg:x="5635" fg:w="1"/><text x="83.0446%" y="447.50"></text></g><g><title>libruby.3.4.dylib`str_enc_new (100 samples, 1.47%)</title><rect x="81.3547%" y="517" width="1.4693%" height="15" fill="rgb(222,207,47)" fg:x="5537" fg:w="100"/><text x="81.6047%" y="527.50"></text></g><g><title>libruby.3.4.dylib`rb_current_ec (1 samples, 0.01%)</title><rect x="82.8093%" y="501" width="0.0147%" height="15" fill="rgb(229,115,45)" fg:x="5636" fg:w="1"/><text x="83.0593%" y="511.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (8 samples, 0.12%)</title><rect x="82.8240%" y="517" width="0.1175%" height="15" fill="rgb(224,191,6)" fg:x="5637" fg:w="8"/><text x="83.0740%" y="527.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (10 samples, 0.15%)</title><rect x="82.9415%" y="517" width="0.1469%" height="15" fill="rgb(230,227,24)" fg:x="5645" fg:w="10"/><text x="83.1915%" y="527.50"></text></g><g><title>itsi_server.bundle`itsi_server::init::anon (754 samples, 11.08%)</title><rect x="72.0688%" y="533" width="11.0785%" height="15" fill="rgb(228,80,19)" fg:x="4905" fg:w="754"/><text x="72.3188%" y="543.50">itsi_server.bund..</text></g><g><title>libsystem_platform.dylib`_platform_memmove (4 samples, 0.06%)</title><rect x="83.0885%" y="517" width="0.0588%" height="15" fill="rgb(247,229,0)" fg:x="5655" fg:w="4"/><text x="83.3385%" y="527.50"></text></g><g><title>itsi_server.bundle`magnus::r_string::_&lt;impl magnus::api::Ruby&gt;::str_new (1 samples, 0.01%)</title><rect x="83.1472%" y="533" width="0.0147%" height="15" fill="rgb(237,194,15)" fg:x="5659" fg:w="1"/><text x="83.3972%" y="543.50"></text></g><g><title>itsi_server.bundle`magnus::typed_data::_&lt;impl magnus::try_convert::TryConvert for &amp;T&gt;::try_convert (5 samples, 0.07%)</title><rect x="83.1619%" y="533" width="0.0735%" height="15" fill="rgb(219,203,20)" fg:x="5660" fg:w="5"/><text x="83.4119%" y="543.50"></text></g><g><title>libruby.3.4.dylib`ary_new (2 samples, 0.03%)</title><rect x="83.2354%" y="533" width="0.0294%" height="15" fill="rgb(234,128,8)" fg:x="5665" fg:w="2"/><text x="83.4854%" y="543.50"></text></g><g><title>libruby.3.4.dylib`basic_obj_respond_to (4 samples, 0.06%)</title><rect x="83.2648%" y="533" width="0.0588%" height="15" fill="rgb(248,202,8)" fg:x="5667" fg:w="4"/><text x="83.5148%" y="543.50"></text></g><g><title>libruby.3.4.dylib`call_cfunc_0 (1 samples, 0.01%)</title><rect x="83.3235%" y="533" width="0.0147%" height="15" fill="rgb(206,104,37)" fg:x="5671" fg:w="1"/><text x="83.5735%" y="543.50"></text></g><g><title>libruby.3.4.dylib`call_cfunc_1 (1 samples, 0.01%)</title><rect x="83.3382%" y="533" width="0.0147%" height="15" fill="rgb(223,8,27)" fg:x="5672" fg:w="1"/><text x="83.5882%" y="543.50"></text></g><g><title>libruby.3.4.dylib`mnew_internal (1 samples, 0.01%)</title><rect x="83.3529%" y="533" width="0.0147%" height="15" fill="rgb(216,217,28)" fg:x="5673" fg:w="1"/><text x="83.6029%" y="543.50"></text></g><g><title>libruby.3.4.dylib`callable_method_entry_or_negative (3 samples, 0.04%)</title><rect x="83.3970%" y="501" width="0.0441%" height="15" fill="rgb(249,199,1)" fg:x="5676" fg:w="3"/><text x="83.6470%" y="511.50"></text></g><g><title>libruby.3.4.dylib`callable_method_entry_refinements (7 samples, 0.10%)</title><rect x="83.3676%" y="517" width="0.1029%" height="15" fill="rgb(240,85,17)" fg:x="5674" fg:w="7"/><text x="83.6176%" y="527.50"></text></g><g><title>libruby.3.4.dylib`rb_id_table_lookup (2 samples, 0.03%)</title><rect x="83.4411%" y="501" width="0.0294%" height="15" fill="rgb(206,108,45)" fg:x="5679" fg:w="2"/><text x="83.6911%" y="511.50"></text></g><g><title>libruby.3.4.dylib`DYLD-STUB$$bzero (1 samples, 0.01%)</title><rect x="83.4705%" y="501" width="0.0147%" height="15" fill="rgb(245,210,41)" fg:x="5681" fg:w="1"/><text x="83.7205%" y="511.50"></text></g><g><title>libruby.3.4.dylib`rb_get_alloc_func (1 samples, 0.01%)</title><rect x="83.4999%" y="485" width="0.0147%" height="15" fill="rgb(206,13,37)" fg:x="5683" fg:w="1"/><text x="83.7499%" y="495.50"></text></g><g><title>libruby.3.4.dylib`rb_data_typed_object_zalloc (4 samples, 0.06%)</title><rect x="83.4852%" y="501" width="0.0588%" height="15" fill="rgb(250,61,18)" fg:x="5682" fg:w="4"/><text x="83.7352%" y="511.50"></text></g><g><title>libruby.3.4.dylib`typed_data_alloc (2 samples, 0.03%)</title><rect x="83.5145%" y="485" width="0.0294%" height="15" fill="rgb(235,172,48)" fg:x="5684" fg:w="2"/><text x="83.7645%" y="495.50"></text></g><g><title>libruby.3.4.dylib`mnew_internal (7 samples, 0.10%)</title><rect x="83.4705%" y="517" width="0.1029%" height="15" fill="rgb(249,201,17)" fg:x="5681" fg:w="7"/><text x="83.7205%" y="527.50"></text></g><g><title>libruby.3.4.dylib`rb_gc_writebarrier (2 samples, 0.03%)</title><rect x="83.5439%" y="501" width="0.0294%" height="15" fill="rgb(219,208,6)" fg:x="5686" fg:w="2"/><text x="83.7939%" y="511.50"></text></g><g><title>libruby.3.4.dylib`obj_method (16 samples, 0.24%)</title><rect x="83.3676%" y="533" width="0.2351%" height="15" fill="rgb(248,31,23)" fg:x="5674" fg:w="16"/><text x="83.6176%" y="543.50"></text></g><g><title>libruby.3.4.dylib`rb_gc_writebarrier (2 samples, 0.03%)</title><rect x="83.5733%" y="517" width="0.0294%" height="15" fill="rgb(245,15,42)" fg:x="5688" fg:w="2"/><text x="83.8233%" y="527.50"></text></g><g><title>libdyld.dylib`tlv_get_addr (4 samples, 0.06%)</title><rect x="83.6468%" y="517" width="0.0588%" height="15" fill="rgb(222,217,39)" fg:x="5693" fg:w="4"/><text x="83.8968%" y="527.50"></text></g><g><title>libruby.3.4.dylib`callable_method_entry_or_negative (3 samples, 0.04%)</title><rect x="83.8084%" y="501" width="0.0441%" height="15" fill="rgb(210,219,27)" fg:x="5704" fg:w="3"/><text x="84.0584%" y="511.50"></text></g><g><title>libruby.3.4.dylib`callable_method_entry_or_negative (2 samples, 0.03%)</title><rect x="83.9406%" y="485" width="0.0294%" height="15" fill="rgb(252,166,36)" fg:x="5713" fg:w="2"/><text x="84.1906%" y="495.50"></text></g><g><title>libruby.3.4.dylib`basic_obj_respond_to (26 samples, 0.38%)</title><rect x="83.7056%" y="517" width="0.3820%" height="15" fill="rgb(245,132,34)" fg:x="5697" fg:w="26"/><text x="83.9556%" y="527.50"></text></g><g><title>libruby.3.4.dylib`callable_method_entry_refinements (16 samples, 0.24%)</title><rect x="83.8525%" y="501" width="0.2351%" height="15" fill="rgb(236,54,3)" fg:x="5707" fg:w="16"/><text x="84.1025%" y="511.50"></text></g><g><title>libruby.3.4.dylib`rb_id_table_lookup (8 samples, 0.12%)</title><rect x="83.9700%" y="485" width="0.1175%" height="15" fill="rgb(241,173,43)" fg:x="5715" fg:w="8"/><text x="84.2200%" y="495.50"></text></g><g><title>libruby.3.4.dylib`callable_method_entry_or_negative (1 samples, 0.01%)</title><rect x="84.0876%" y="517" width="0.0147%" height="15" fill="rgb(215,190,9)" fg:x="5723" fg:w="1"/><text x="84.3376%" y="527.50"></text></g><g><title>libruby.3.4.dylib`obj_respond_to (41 samples, 0.60%)</title><rect x="83.6027%" y="533" width="0.6024%" height="15" fill="rgb(242,101,16)" fg:x="5690" fg:w="41"/><text x="83.8527%" y="543.50"></text></g><g><title>libruby.3.4.dylib`rb_check_id (7 samples, 0.10%)</title><rect x="84.1023%" y="517" width="0.1029%" height="15" fill="rgb(223,190,21)" fg:x="5724" fg:w="7"/><text x="84.3523%" y="527.50"></text></g><g><title>libruby.3.4.dylib`invoke_block_from_c_bh (8 samples, 0.12%)</title><rect x="84.2786%" y="517" width="0.1175%" height="15" fill="rgb(215,228,25)" fg:x="5736" fg:w="8"/><text x="84.5286%" y="527.50"></text></g><g><title>libruby.3.4.dylib`rb_block_given_p (2 samples, 0.03%)</title><rect x="84.3961%" y="517" width="0.0294%" height="15" fill="rgb(225,36,22)" fg:x="5744" fg:w="2"/><text x="84.6461%" y="527.50"></text></g><g><title>libdyld.dylib`tlv_get_addr (1 samples, 0.01%)</title><rect x="84.4108%" y="501" width="0.0147%" height="15" fill="rgb(251,106,46)" fg:x="5745" fg:w="1"/><text x="84.6608%" y="511.50"></text></g><g><title>libruby.3.4.dylib`rb_vm_frame_block_handler (3 samples, 0.04%)</title><rect x="84.4255%" y="517" width="0.0441%" height="15" fill="rgb(208,90,1)" fg:x="5746" fg:w="3"/><text x="84.6755%" y="527.50"></text></g><g><title>libdyld.dylib`tlv_get_addr (11 samples, 0.16%)</title><rect x="84.6753%" y="501" width="0.1616%" height="15" fill="rgb(243,10,4)" fg:x="5763" fg:w="11"/><text x="84.9253%" y="511.50"></text></g><g><title>libruby.3.4.dylib`DYLD-STUB$$memcpy (2 samples, 0.03%)</title><rect x="84.8369%" y="501" width="0.0294%" height="15" fill="rgb(212,137,27)" fg:x="5774" fg:w="2"/><text x="85.0869%" y="511.50"></text></g><g><title>libruby.3.4.dylib`CALLER_SETUP_ARG (6 samples, 0.09%)</title><rect x="85.5128%" y="485" width="0.0882%" height="15" fill="rgb(231,220,49)" fg:x="5820" fg:w="6"/><text x="85.7628%" y="495.50"></text></g><g><title>libruby.3.4.dylib`DYLD-STUB$$_setjmp (3 samples, 0.04%)</title><rect x="85.6009%" y="485" width="0.0441%" height="15" fill="rgb(237,96,20)" fg:x="5826" fg:w="3"/><text x="85.8509%" y="495.50"></text></g><g><title>libruby.3.4.dylib`rb_hash_aset (3 samples, 0.04%)</title><rect x="86.1740%" y="469" width="0.0441%" height="15" fill="rgb(239,229,30)" fg:x="5865" fg:w="3"/><text x="86.4240%" y="479.50"></text></g><g><title>libruby.3.4.dylib`rb_st_lookup (12 samples, 0.18%)</title><rect x="86.2180%" y="469" width="0.1763%" height="15" fill="rgb(219,65,33)" fg:x="5868" fg:w="12"/><text x="86.4680%" y="479.50"></text></g><g><title>libruby.3.4.dylib`rb_gvar_get (1 samples, 0.01%)</title><rect x="90.7288%" y="453" width="0.0147%" height="15" fill="rgb(243,134,7)" fg:x="6175" fg:w="1"/><text x="90.9788%" y="463.50"></text></g><g><title>libruby.3.4.dylib`rb_global_entry (1 samples, 0.01%)</title><rect x="90.7288%" y="437" width="0.0147%" height="15" fill="rgb(216,177,54)" fg:x="6175" fg:w="1"/><text x="90.9788%" y="447.50"></text></g><g><title>libruby.3.4.dylib`rb_gc_writebarrier (1 samples, 0.01%)</title><rect x="90.8169%" y="437" width="0.0147%" height="15" fill="rgb(211,160,20)" fg:x="6181" fg:w="1"/><text x="91.0669%" y="447.50"></text></g><g><title>libruby.3.4.dylib`gc_writebarrier_generational (1 samples, 0.01%)</title><rect x="90.9492%" y="421" width="0.0147%" height="15" fill="rgb(239,85,39)" fg:x="6190" fg:w="1"/><text x="91.1992%" y="431.50"></text></g><g><title>libruby.3.4.dylib`rb_gc_writebarrier (6 samples, 0.09%)</title><rect x="90.9639%" y="421" width="0.0882%" height="15" fill="rgb(232,125,22)" fg:x="6191" fg:w="6"/><text x="91.2139%" y="431.50"></text></g><g><title>libruby.3.4.dylib`gc_writebarrier_generational (2 samples, 0.03%)</title><rect x="91.0226%" y="405" width="0.0294%" height="15" fill="rgb(244,57,34)" fg:x="6195" fg:w="2"/><text x="91.2726%" y="415.50"></text></g><g><title>libruby.3.4.dylib`any_hash (3 samples, 0.04%)</title><rect x="91.2871%" y="405" width="0.0441%" height="15" fill="rgb(214,203,32)" fg:x="6213" fg:w="3"/><text x="91.5371%" y="415.50"></text></g><g><title>libruby.3.4.dylib`hash_aset_str_insert (3 samples, 0.04%)</title><rect x="91.3312%" y="405" width="0.0441%" height="15" fill="rgb(207,58,43)" fg:x="6216" fg:w="3"/><text x="91.5812%" y="415.50"></text></g><g><title>libruby.3.4.dylib`rb_str_hash (1 samples, 0.01%)</title><rect x="91.3753%" y="405" width="0.0147%" height="15" fill="rgb(215,193,15)" fg:x="6219" fg:w="1"/><text x="91.6253%" y="415.50"></text></g><g><title>libruby.3.4.dylib`rb_st_update (25 samples, 0.37%)</title><rect x="91.0520%" y="421" width="0.3673%" height="15" fill="rgb(232,15,44)" fg:x="6197" fg:w="25"/><text x="91.3020%" y="431.50"></text></g><g><title>libruby.3.4.dylib`tbl_update_modify (2 samples, 0.03%)</title><rect x="91.3900%" y="405" width="0.0294%" height="15" fill="rgb(212,3,48)" fg:x="6220" fg:w="2"/><text x="91.6400%" y="415.50"></text></g><g><title>libruby.3.4.dylib`rb_hash_aset (47 samples, 0.69%)</title><rect x="90.7435%" y="453" width="0.6906%" height="15" fill="rgb(218,128,7)" fg:x="6176" fg:w="47"/><text x="90.9935%" y="463.50"></text></g><g><title>libruby.3.4.dylib`tbl_update (41 samples, 0.60%)</title><rect x="90.8316%" y="437" width="0.6024%" height="15" fill="rgb(226,216,39)" fg:x="6182" fg:w="41"/><text x="91.0816%" y="447.50"></text></g><g><title>libruby.3.4.dylib`tbl_update_modify (1 samples, 0.01%)</title><rect x="91.4193%" y="421" width="0.0147%" height="15" fill="rgb(243,47,51)" fg:x="6222" fg:w="1"/><text x="91.6693%" y="431.50"></text></g><g><title>libruby.3.4.dylib`rb_hash_stlike_lookup (4 samples, 0.06%)</title><rect x="91.4340%" y="453" width="0.0588%" height="15" fill="rgb(241,183,40)" fg:x="6223" fg:w="4"/><text x="91.6840%" y="463.50"></text></g><g><title>libruby.3.4.dylib`rb_iseq_cdhash_hash (2 samples, 0.03%)</title><rect x="91.4928%" y="453" width="0.0294%" height="15" fill="rgb(231,217,32)" fg:x="6227" fg:w="2"/><text x="91.7428%" y="463.50"></text></g><g><title>libruby.3.4.dylib`rb_obj_class (2 samples, 0.03%)</title><rect x="91.5222%" y="453" width="0.0294%" height="15" fill="rgb(229,61,38)" fg:x="6229" fg:w="2"/><text x="91.7722%" y="463.50"></text></g><g><title>libruby.3.4.dylib`rb_iseq_cdhash_hash (3 samples, 0.04%)</title><rect x="92.2274%" y="437" width="0.0441%" height="15" fill="rgb(225,210,5)" fg:x="6277" fg:w="3"/><text x="92.4774%" y="447.50"></text></g><g><title>libruby.3.4.dylib`rb_st_lookup (56 samples, 0.82%)</title><rect x="91.5516%" y="453" width="0.8228%" height="15" fill="rgb(231,79,45)" fg:x="6231" fg:w="56"/><text x="91.8016%" y="463.50"></text></g><g><title>libruby.3.4.dylib`rb_str_hash (7 samples, 0.10%)</title><rect x="92.2715%" y="437" width="0.1029%" height="15" fill="rgb(224,100,7)" fg:x="6280" fg:w="7"/><text x="92.5215%" y="447.50"></text></g><g><title>libruby.3.4.dylib`rb_str_hash (3 samples, 0.04%)</title><rect x="92.3744%" y="453" width="0.0441%" height="15" fill="rgb(241,198,18)" fg:x="6287" fg:w="3"/><text x="92.6244%" y="463.50"></text></g><g><title>libruby.3.4.dylib`rb_vm_exec (462 samples, 6.79%)</title><rect x="85.6450%" y="485" width="6.7881%" height="15" fill="rgb(252,97,53)" fg:x="5829" fg:w="462"/><text x="85.8950%" y="495.50">libruby.3..</text></g><g><title>libruby.3.4.dylib`vm_exec_core (411 samples, 6.04%)</title><rect x="86.3944%" y="469" width="6.0388%" height="15" fill="rgb(220,88,7)" fg:x="5880" fg:w="411"/><text x="86.6444%" y="479.50">libruby...</text></g><g><title>libruby.3.4.dylib`tbl_update (1 samples, 0.01%)</title><rect x="92.4185%" y="453" width="0.0147%" height="15" fill="rgb(213,176,14)" fg:x="6290" fg:w="1"/><text x="92.6685%" y="463.50"></text></g><g><title>libruby.3.4.dylib`vm_callee_setup_block_arg (18 samples, 0.26%)</title><rect x="92.4331%" y="485" width="0.2645%" height="15" fill="rgb(246,73,7)" fg:x="6291" fg:w="18"/><text x="92.6831%" y="495.50"></text></g><g><title>libruby.3.4.dylib`CALLER_SETUP_ARG (3 samples, 0.04%)</title><rect x="92.6535%" y="469" width="0.0441%" height="15" fill="rgb(245,64,36)" fg:x="6306" fg:w="3"/><text x="92.9035%" y="479.50"></text></g><g><title>libruby.3.4.dylib`vm_exec_core (15 samples, 0.22%)</title><rect x="92.6976%" y="485" width="0.2204%" height="15" fill="rgb(245,80,10)" fg:x="6309" fg:w="15"/><text x="92.9476%" y="495.50"></text></g><g><title>libruby.3.4.dylib`invoke_block_from_c_bh (564 samples, 8.29%)</title><rect x="84.8663%" y="501" width="8.2868%" height="15" fill="rgb(232,107,50)" fg:x="5776" fg:w="564"/><text x="85.1163%" y="511.50">libruby.3.4...</text></g><g><title>libsystem_platform.dylib`_setjmp (16 samples, 0.24%)</title><rect x="92.9180%" y="485" width="0.2351%" height="15" fill="rgb(253,3,0)" fg:x="6324" fg:w="16"/><text x="93.1680%" y="495.50"></text></g><g><title>libruby.3.4.dylib`rb_current_ec (5 samples, 0.07%)</title><rect x="93.1531%" y="501" width="0.0735%" height="15" fill="rgb(212,99,53)" fg:x="6340" fg:w="5"/><text x="93.4031%" y="511.50"></text></g><g><title>libruby.3.4.dylib`rb_ec_stack_check (3 samples, 0.04%)</title><rect x="93.2266%" y="501" width="0.0441%" height="15" fill="rgb(249,111,54)" fg:x="6345" fg:w="3"/><text x="93.4766%" y="511.50"></text></g><g><title>libruby.3.4.dylib`rb_vm_exec (5 samples, 0.07%)</title><rect x="93.2706%" y="501" width="0.0735%" height="15" fill="rgb(249,55,30)" fg:x="6348" fg:w="5"/><text x="93.5206%" y="511.50"></text></g><g><title>libruby.3.4.dylib`vm_callee_setup_block_arg (4 samples, 0.06%)</title><rect x="93.3441%" y="501" width="0.0588%" height="15" fill="rgb(237,47,42)" fg:x="6353" fg:w="4"/><text x="93.5941%" y="511.50"></text></g><g><title>libruby.3.4.dylib`rb_ary_each (639 samples, 9.39%)</title><rect x="84.2051%" y="533" width="9.3888%" height="15" fill="rgb(211,20,18)" fg:x="5731" fg:w="639"/><text x="84.4551%" y="543.50">libruby.3.4.d..</text></g><g><title>libruby.3.4.dylib`rb_yield (621 samples, 9.12%)</title><rect x="84.4696%" y="517" width="9.1243%" height="15" fill="rgb(231,203,46)" fg:x="5749" fg:w="621"/><text x="84.7196%" y="527.50">libruby.3.4.d..</text></g><g><title>libsystem_platform.dylib`_platform_memmove (13 samples, 0.19%)</title><rect x="93.4029%" y="501" width="0.1910%" height="15" fill="rgb(237,142,3)" fg:x="6357" fg:w="13"/><text x="93.6529%" y="511.50"></text></g><g><title>libruby.3.4.dylib`rb_ary_pop (3 samples, 0.04%)</title><rect x="93.5939%" y="533" width="0.0441%" height="15" fill="rgb(241,107,1)" fg:x="6370" fg:w="3"/><text x="93.8439%" y="543.50"></text></g><g><title>libruby.3.4.dylib`rb_block_given_p (1 samples, 0.01%)</title><rect x="93.6380%" y="533" width="0.0147%" height="15" fill="rgb(229,83,13)" fg:x="6373" fg:w="1"/><text x="93.8880%" y="543.50"></text></g><g><title>libruby.3.4.dylib`rb_block_pair_yield_optimizable (1 samples, 0.01%)</title><rect x="93.6527%" y="533" width="0.0147%" height="15" fill="rgb(241,91,40)" fg:x="6374" fg:w="1"/><text x="93.9027%" y="543.50"></text></g><g><title>libruby.3.4.dylib`rb_check_id (1 samples, 0.01%)</title><rect x="93.6674%" y="533" width="0.0147%" height="15" fill="rgb(225,3,45)" fg:x="6375" fg:w="1"/><text x="93.9174%" y="543.50"></text></g><g><title>libruby.3.4.dylib`ruby_sip_hash13 (1 samples, 0.01%)</title><rect x="93.6967%" y="485" width="0.0147%" height="15" fill="rgb(244,223,14)" fg:x="6377" fg:w="1"/><text x="93.9467%" y="495.50"></text></g><g><title>libruby.3.4.dylib`rb_hash_delete_m (3 samples, 0.04%)</title><rect x="93.6820%" y="533" width="0.0441%" height="15" fill="rgb(224,124,37)" fg:x="6376" fg:w="3"/><text x="93.9320%" y="543.50"></text></g><g><title>libruby.3.4.dylib`rb_hash_stlike_delete (3 samples, 0.04%)</title><rect x="93.6820%" y="517" width="0.0441%" height="15" fill="rgb(251,171,30)" fg:x="6376" fg:w="3"/><text x="93.9320%" y="527.50"></text></g><g><title>libruby.3.4.dylib`any_hash (3 samples, 0.04%)</title><rect x="93.6820%" y="501" width="0.0441%" height="15" fill="rgb(236,46,54)" fg:x="6376" fg:w="3"/><text x="93.9320%" y="511.50"></text></g><g><title>libruby.3.4.dylib`str_do_hash (1 samples, 0.01%)</title><rect x="93.7114%" y="485" width="0.0147%" height="15" fill="rgb(245,213,5)" fg:x="6378" fg:w="1"/><text x="93.9614%" y="495.50"></text></g><g><title>libdyld.dylib`tlv_get_addr (1 samples, 0.01%)</title><rect x="93.7261%" y="501" width="0.0147%" height="15" fill="rgb(230,144,27)" fg:x="6379" fg:w="1"/><text x="93.9761%" y="511.50"></text></g><g><title>libruby.3.4.dylib`rb_block_pair_yield_optimizable (17 samples, 0.25%)</title><rect x="93.7261%" y="517" width="0.2498%" height="15" fill="rgb(220,86,6)" fg:x="6379" fg:w="17"/><text x="93.9761%" y="527.50"></text></g><g><title>libruby.3.4.dylib`rb_vm_block_min_max_arity (16 samples, 0.24%)</title><rect x="93.7408%" y="501" width="0.2351%" height="15" fill="rgb(240,20,13)" fg:x="6380" fg:w="16"/><text x="93.9908%" y="511.50"></text></g><g><title>libruby.3.4.dylib`rb_ensure (4 samples, 0.06%)</title><rect x="93.9759%" y="517" width="0.0588%" height="15" fill="rgb(217,89,34)" fg:x="6396" fg:w="4"/><text x="94.2259%" y="527.50"></text></g><g><title>libdyld.dylib`tlv_get_addr (1 samples, 0.01%)</title><rect x="94.0788%" y="485" width="0.0147%" height="15" fill="rgb(229,13,5)" fg:x="6403" fg:w="1"/><text x="94.3288%" y="495.50"></text></g><g><title>libruby.3.4.dylib`invoke_block_from_c_bh (1 samples, 0.01%)</title><rect x="94.1228%" y="453" width="0.0147%" height="15" fill="rgb(244,67,35)" fg:x="6406" fg:w="1"/><text x="94.3728%" y="463.50"></text></g><g><title>libruby.3.4.dylib`rb_ary_new_from_args (2 samples, 0.03%)</title><rect x="94.1375%" y="437" width="0.0294%" height="15" fill="rgb(221,40,2)" fg:x="6407" fg:w="2"/><text x="94.3875%" y="447.50"></text></g><g><title>libruby.3.4.dylib`ary_new (1 samples, 0.01%)</title><rect x="94.1522%" y="421" width="0.0147%" height="15" fill="rgb(237,157,21)" fg:x="6408" fg:w="1"/><text x="94.4022%" y="431.50"></text></g><g><title>libruby.3.4.dylib`rb_assoc_new (3 samples, 0.04%)</title><rect x="94.1375%" y="453" width="0.0441%" height="15" fill="rgb(222,94,11)" fg:x="6407" fg:w="3"/><text x="94.3875%" y="463.50"></text></g><g><title>libruby.3.4.dylib`rb_gc_writebarrier (1 samples, 0.01%)</title><rect x="94.1669%" y="437" width="0.0147%" height="15" fill="rgb(249,113,6)" fg:x="6409" fg:w="1"/><text x="94.4169%" y="447.50"></text></g><g><title>libruby.3.4.dylib`DYLD-STUB$$memcpy (2 samples, 0.03%)</title><rect x="94.1816%" y="437" width="0.0294%" height="15" fill="rgb(238,137,36)" fg:x="6410" fg:w="2"/><text x="94.4316%" y="447.50"></text></g><g><title>libruby.3.4.dylib`DYLD-STUB$$_setjmp (1 samples, 0.01%)</title><rect x="94.2404%" y="421" width="0.0147%" height="15" fill="rgb(210,102,26)" fg:x="6414" fg:w="1"/><text x="94.4904%" y="431.50"></text></g><g><title>itsi_server.bundle`&lt;magnus::r_string::RString as magnus::try_convert::TryConvert&gt;::try_convert (2 samples, 0.03%)</title><rect x="94.8869%" y="341" width="0.0294%" height="15" fill="rgb(218,30,30)" fg:x="6458" fg:w="2"/><text x="95.1369%" y="351.50"></text></g><g><title>itsi_server.bundle`DYLD-STUB$$memcpy (1 samples, 0.01%)</title><rect x="94.9163%" y="341" width="0.0147%" height="15" fill="rgb(214,67,26)" fg:x="6460" fg:w="1"/><text x="95.1663%" y="351.50"></text></g><g><title>itsi_server.bundle`DYLD-STUB$$rb_protect (1 samples, 0.01%)</title><rect x="94.9309%" y="341" width="0.0147%" height="15" fill="rgb(251,9,53)" fg:x="6461" fg:w="1"/><text x="95.1809%" y="351.50"></text></g><g><title>itsi_server.bundle`http::header::name::HeaderName::from_bytes (2 samples, 0.03%)</title><rect x="94.9456%" y="341" width="0.0294%" height="15" fill="rgb(228,204,25)" fg:x="6462" fg:w="2"/><text x="95.1956%" y="351.50"></text></g><g><title>itsi_server.bundle`__rdl_dealloc (1 samples, 0.01%)</title><rect x="95.0338%" y="325" width="0.0147%" height="15" fill="rgb(207,153,8)" fg:x="6468" fg:w="1"/><text x="95.2838%" y="335.50"></text></g><g><title>itsi_server.bundle`bytes::bytes::promotable_even_drop (4 samples, 0.06%)</title><rect x="95.0485%" y="325" width="0.0588%" height="15" fill="rgb(242,9,16)" fg:x="6469" fg:w="4"/><text x="95.2985%" y="335.50"></text></g><g><title>itsi_server.bundle`core::alloc::layout::Layout::is_size_align_valid (2 samples, 0.03%)</title><rect x="95.0779%" y="309" width="0.0294%" height="15" fill="rgb(217,211,10)" fg:x="6471" fg:w="2"/><text x="95.3279%" y="319.50"></text></g><g><title>itsi_server.bundle`&lt;bytes::bytes::Bytes as core::convert::From&lt;alloc::vec::Vec&lt;u8&gt;&gt;&gt;::from (1 samples, 0.01%)</title><rect x="95.2101%" y="309" width="0.0147%" height="15" fill="rgb(219,228,52)" fg:x="6480" fg:w="1"/><text x="95.4601%" y="319.50"></text></g><g><title>itsi_server.bundle`bytes::bytes::Bytes::copy_from_slice (1 samples, 0.01%)</title><rect x="95.2248%" y="309" width="0.0147%" height="15" fill="rgb(231,92,29)" fg:x="6481" fg:w="1"/><text x="95.4748%" y="319.50"></text></g><g><title>itsi_server.bundle`&lt;bytes::bytes::Bytes as core::convert::From&lt;alloc::vec::Vec&lt;u8&gt;&gt;&gt;::from (1 samples, 0.01%)</title><rect x="95.2248%" y="293" width="0.0147%" height="15" fill="rgb(232,8,23)" fg:x="6481" fg:w="1"/><text x="95.4748%" y="303.50"></text></g><g><title>itsi_server.bundle`http::header::name::HeaderName::from_bytes (14 samples, 0.21%)</title><rect x="95.1073%" y="325" width="0.2057%" height="15" fill="rgb(216,211,34)" fg:x="6473" fg:w="14"/><text x="95.3573%" y="335.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (5 samples, 0.07%)</title><rect x="95.2395%" y="309" width="0.0735%" height="15" fill="rgb(236,151,0)" fg:x="6482" fg:w="5"/><text x="95.4895%" y="319.50"></text></g><g><title>itsi_server.bundle`http::header::name::StandardHeader::from_bytes (1 samples, 0.01%)</title><rect x="95.3130%" y="325" width="0.0147%" height="15" fill="rgb(209,168,3)" fg:x="6487" fg:w="1"/><text x="95.5630%" y="335.50"></text></g><g><title>itsi_server.bundle`DYLD-STUB$$malloc (1 samples, 0.01%)</title><rect x="95.5627%" y="293" width="0.0147%" height="15" fill="rgb(208,129,28)" fg:x="6504" fg:w="1"/><text x="95.8127%" y="303.50"></text></g><g><title>itsi_server.bundle`bytes::bytes::shallow_clone_vec (1 samples, 0.01%)</title><rect x="95.5774%" y="293" width="0.0147%" height="15" fill="rgb(229,78,22)" fg:x="6505" fg:w="1"/><text x="95.8274%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate_outlined (1 samples, 0.01%)</title><rect x="95.5774%" y="277" width="0.0147%" height="15" fill="rgb(228,187,13)" fg:x="6505" fg:w="1"/><text x="95.8274%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_find_block_and_allocate (1 samples, 0.01%)</title><rect x="95.5774%" y="261" width="0.0147%" height="15" fill="rgb(240,119,24)" fg:x="6505" fg:w="1"/><text x="95.8274%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate_from_block (1 samples, 0.01%)</title><rect x="95.5774%" y="245" width="0.0147%" height="15" fill="rgb(209,194,42)" fg:x="6505" fg:w="1"/><text x="95.8274%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (1 samples, 0.01%)</title><rect x="95.5921%" y="293" width="0.0147%" height="15" fill="rgb(247,200,46)" fg:x="6506" fg:w="1"/><text x="95.8421%" y="303.50"></text></g><g><title>itsi_server.bundle`&lt;http::header::name::HeaderName as core::convert::From&lt;&amp;http::header::name::HeaderName&gt;&gt;::from (8 samples, 0.12%)</title><rect x="95.5334%" y="309" width="0.1175%" height="15" fill="rgb(218,76,16)" fg:x="6502" fg:w="8"/><text x="95.7834%" y="319.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (3 samples, 0.04%)</title><rect x="95.6068%" y="293" width="0.0441%" height="15" fill="rgb(225,21,48)" fg:x="6507" fg:w="3"/><text x="95.8568%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (1 samples, 0.01%)</title><rect x="95.6656%" y="293" width="0.0147%" height="15" fill="rgb(239,223,50)" fg:x="6511" fg:w="1"/><text x="95.9156%" y="303.50"></text></g><g><title>itsi_server.bundle`bytes::bytes::Bytes::slice (5 samples, 0.07%)</title><rect x="95.6509%" y="309" width="0.0735%" height="15" fill="rgb(244,45,21)" fg:x="6510" fg:w="5"/><text x="95.9009%" y="319.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (3 samples, 0.04%)</title><rect x="95.6803%" y="293" width="0.0441%" height="15" fill="rgb(232,33,43)" fg:x="6512" fg:w="3"/><text x="95.9303%" y="303.50"></text></g><g><title>itsi_server.bundle`http::header::map::HeaderMap&lt;T&gt;::try_insert_entry (1 samples, 0.01%)</title><rect x="95.7244%" y="309" width="0.0147%" height="15" fill="rgb(209,8,3)" fg:x="6515" fg:w="1"/><text x="95.9744%" y="319.50"></text></g><g><title>itsi_server.bundle`http::header::map::HeaderMap&lt;T&gt;::try_reserve_one (1 samples, 0.01%)</title><rect x="95.7391%" y="309" width="0.0147%" height="15" fill="rgb(214,25,53)" fg:x="6516" fg:w="1"/><text x="95.9891%" y="319.50"></text></g><g><title>itsi_server.bundle`http::header::map::hash_elem_using (10 samples, 0.15%)</title><rect x="95.7537%" y="309" width="0.1469%" height="15" fill="rgb(254,186,54)" fg:x="6517" fg:w="10"/><text x="96.0037%" y="319.50"></text></g><g><title>itsi_server.bundle`itsi_server::ruby_types::itsi_http_response::ItsiHttpResponse::insert_header (47 samples, 0.69%)</title><rect x="95.3277%" y="325" width="0.6906%" height="15" fill="rgb(208,174,49)" fg:x="6488" fg:w="47"/><text x="95.5777%" y="335.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (8 samples, 0.12%)</title><rect x="95.9007%" y="309" width="0.1175%" height="15" fill="rgb(233,191,51)" fg:x="6527" fg:w="8"/><text x="96.1507%" y="319.50"></text></g><g><title>itsi_server.bundle`itsi_server::ruby_types::itsi_http_response::ItsiHttpResponse::add_header (74 samples, 1.09%)</title><rect x="94.9750%" y="341" width="1.0873%" height="15" fill="rgb(222,134,10)" fg:x="6464" fg:w="74"/><text x="95.2250%" y="351.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (3 samples, 0.04%)</title><rect x="96.0182%" y="325" width="0.0441%" height="15" fill="rgb(230,226,20)" fg:x="6535" fg:w="3"/><text x="96.2682%" y="335.50"></text></g><g><title>itsi_server.bundle`itsi_server::ruby_types::itsi_http_response::ItsiHttpResponse::insert_header (1 samples, 0.01%)</title><rect x="96.0623%" y="341" width="0.0147%" height="15" fill="rgb(251,111,25)" fg:x="6538" fg:w="1"/><text x="96.3123%" y="351.50"></text></g><g><title>itsi_server.bundle`magnus::r_string::RString::to_bytes (3 samples, 0.04%)</title><rect x="96.0770%" y="341" width="0.0441%" height="15" fill="rgb(224,40,46)" fg:x="6539" fg:w="3"/><text x="96.3270%" y="351.50"></text></g><g><title>itsi_server.bundle`&lt;bytes::bytes::Bytes as core::convert::From&lt;alloc::vec::Vec&lt;u8&gt;&gt;&gt;::from (1 samples, 0.01%)</title><rect x="96.1064%" y="325" width="0.0147%" height="15" fill="rgb(236,108,47)" fg:x="6541" fg:w="1"/><text x="96.3564%" y="335.50"></text></g><g><title>itsi_server.bundle`magnus::error::protect::call (3 samples, 0.04%)</title><rect x="96.2092%" y="309" width="0.0441%" height="15" fill="rgb(234,93,0)" fg:x="6548" fg:w="3"/><text x="96.4592%" y="319.50"></text></g><g><title>libruby.3.4.dylib`rb_protect (10 samples, 0.15%)</title><rect x="96.1211%" y="325" width="0.1469%" height="15" fill="rgb(224,213,32)" fg:x="6542" fg:w="10"/><text x="96.3711%" y="335.50"></text></g><g><title>libdyld.dylib`tlv_get_addr (1 samples, 0.01%)</title><rect x="96.2533%" y="309" width="0.0147%" height="15" fill="rgb(251,11,48)" fg:x="6551" fg:w="1"/><text x="96.5033%" y="319.50"></text></g><g><title>itsi_server.bundle`magnus::typed_data::_&lt;impl magnus::try_convert::TryConvert for &amp;T&gt;::try_convert (12 samples, 0.18%)</title><rect x="96.1211%" y="341" width="0.1763%" height="15" fill="rgb(236,173,5)" fg:x="6542" fg:w="12"/><text x="96.3711%" y="351.50"></text></g><g><title>libsystem_platform.dylib`_setjmp (2 samples, 0.03%)</title><rect x="96.2680%" y="325" width="0.0294%" height="15" fill="rgb(230,95,12)" fg:x="6552" fg:w="2"/><text x="96.5180%" y="335.50"></text></g><g><title>libsystem_malloc.dylib`_free (1 samples, 0.01%)</title><rect x="96.2974%" y="341" width="0.0147%" height="15" fill="rgb(232,209,1)" fg:x="6554" fg:w="1"/><text x="96.5474%" y="351.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (4 samples, 0.06%)</title><rect x="96.3121%" y="341" width="0.0588%" height="15" fill="rgb(232,6,1)" fg:x="6555" fg:w="4"/><text x="96.5621%" y="351.50"></text></g><g><title>itsi_server.bundle`magnus::method::Method2::call_handle_error (110 samples, 1.62%)</title><rect x="94.8428%" y="357" width="1.6162%" height="15" fill="rgb(210,224,50)" fg:x="6455" fg:w="110"/><text x="95.0928%" y="367.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (6 samples, 0.09%)</title><rect x="96.3708%" y="341" width="0.0882%" height="15" fill="rgb(228,127,35)" fg:x="6559" fg:w="6"/><text x="96.6208%" y="351.50"></text></g><g><title>libruby.3.4.dylib`vm_exec_core (148 samples, 2.17%)</title><rect x="94.2991%" y="405" width="2.1746%" height="15" fill="rgb(245,102,45)" fg:x="6418" fg:w="148"/><text x="94.5491%" y="415.50">l..</text></g><g><title>libruby.3.4.dylib`vm_call_cfunc_with_frame_ (115 samples, 1.69%)</title><rect x="94.7840%" y="389" width="1.6897%" height="15" fill="rgb(214,1,49)" fg:x="6451" fg:w="115"/><text x="95.0340%" y="399.50"></text></g><g><title>itsi_server.bundle`itsi_server::init::anon (112 samples, 1.65%)</title><rect x="94.8281%" y="373" width="1.6456%" height="15" fill="rgb(226,163,40)" fg:x="6454" fg:w="112"/><text x="95.0781%" y="383.50"></text></g><g><title>itsi_server.bundle`magnus::typed_data::_&lt;impl magnus::try_convert::TryConvert for &amp;T&gt;::try_convert (1 samples, 0.01%)</title><rect x="96.4590%" y="357" width="0.0147%" height="15" fill="rgb(239,212,28)" fg:x="6565" fg:w="1"/><text x="96.7090%" y="367.50"></text></g><g><title>libruby.3.4.dylib`rb_vm_exec (152 samples, 2.23%)</title><rect x="94.2551%" y="421" width="2.2333%" height="15" fill="rgb(220,20,13)" fg:x="6415" fg:w="152"/><text x="94.5051%" y="431.50">l..</text></g><g><title>libruby.3.4.dylib`vm_opt_length (1 samples, 0.01%)</title><rect x="96.4737%" y="405" width="0.0147%" height="15" fill="rgb(210,164,35)" fg:x="6566" fg:w="1"/><text x="96.7237%" y="415.50"></text></g><g><title>libruby.3.4.dylib`ary_new (1 samples, 0.01%)</title><rect x="96.5325%" y="405" width="0.0147%" height="15" fill="rgb(248,109,41)" fg:x="6570" fg:w="1"/><text x="96.7825%" y="415.50"></text></g><g><title>libruby.3.4.dylib`ary_memcpy0 (1 samples, 0.01%)</title><rect x="96.5766%" y="389" width="0.0147%" height="15" fill="rgb(238,23,50)" fg:x="6573" fg:w="1"/><text x="96.8266%" y="399.50"></text></g><g><title>libdyld.dylib`tlv_get_addr (1 samples, 0.01%)</title><rect x="96.6059%" y="373" width="0.0147%" height="15" fill="rgb(211,48,49)" fg:x="6575" fg:w="1"/><text x="96.8559%" y="383.50"></text></g><g><title>itsi_server.bundle`magnus::typed_data::DataTypeFunctions::extern_free (3 samples, 0.04%)</title><rect x="96.7676%" y="293" width="0.0441%" height="15" fill="rgb(223,36,21)" fg:x="6586" fg:w="3"/><text x="97.0176%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (1 samples, 0.01%)</title><rect x="96.9880%" y="229" width="0.0147%" height="15" fill="rgb(207,123,46)" fg:x="6601" fg:w="1"/><text x="97.2380%" y="239.50"></text></g><g><title>itsi_server.bundle`alloc::sync::Arc&lt;T,A&gt;::drop_slow (2 samples, 0.03%)</title><rect x="96.9880%" y="245" width="0.0294%" height="15" fill="rgb(240,218,32)" fg:x="6601" fg:w="2"/><text x="97.2380%" y="255.50"></text></g><g><title>libsystem_platform.dylib`_platform_memset (1 samples, 0.01%)</title><rect x="97.0026%" y="229" width="0.0147%" height="15" fill="rgb(252,5,43)" fg:x="6602" fg:w="1"/><text x="97.2526%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`small_free_list_add_ptr (2 samples, 0.03%)</title><rect x="97.1055%" y="133" width="0.0294%" height="15" fill="rgb(252,84,19)" fg:x="6609" fg:w="2"/><text x="97.3555%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`small_free_list_remove_ptr_no_clear (2 samples, 0.03%)</title><rect x="97.1349%" y="133" width="0.0294%" height="15" fill="rgb(243,152,39)" fg:x="6611" fg:w="2"/><text x="97.3849%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`small_free_scan_madvise_free (2 samples, 0.03%)</title><rect x="97.1643%" y="133" width="0.0294%" height="15" fill="rgb(234,160,15)" fg:x="6613" fg:w="2"/><text x="97.4143%" y="143.50"></text></g><g><title>libsystem_kernel.dylib`madvise (2 samples, 0.03%)</title><rect x="97.1643%" y="117" width="0.0294%" height="15" fill="rgb(237,34,20)" fg:x="6613" fg:w="2"/><text x="97.4143%" y="127.50"></text></g><g><title>itsi_server.bundle`bytes::bytes_mut::shared_v_drop (15 samples, 0.22%)</title><rect x="97.0173%" y="165" width="0.2204%" height="15" fill="rgb(229,97,13)" fg:x="6603" fg:w="15"/><text x="97.2673%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`free_small (13 samples, 0.19%)</title><rect x="97.0467%" y="149" width="0.1910%" height="15" fill="rgb(234,71,50)" fg:x="6605" fg:w="13"/><text x="97.2967%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`small_madvise_free_range_no_lock (3 samples, 0.04%)</title><rect x="97.1937%" y="133" width="0.0441%" height="15" fill="rgb(253,155,4)" fg:x="6615" fg:w="3"/><text x="97.4437%" y="143.50"></text></g><g><title>libsystem_kernel.dylib`madvise (3 samples, 0.04%)</title><rect x="97.1937%" y="117" width="0.0441%" height="15" fill="rgb(222,185,37)" fg:x="6615" fg:w="3"/><text x="97.4437%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (4 samples, 0.06%)</title><rect x="97.2377%" y="165" width="0.0588%" height="15" fill="rgb(251,177,13)" fg:x="6618" fg:w="4"/><text x="97.4877%" y="175.50"></text></g><g><title>itsi_server.bundle`&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (20 samples, 0.29%)</title><rect x="97.0173%" y="181" width="0.2939%" height="15" fill="rgb(250,179,40)" fg:x="6603" fg:w="20"/><text x="97.2673%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`free_small (1 samples, 0.01%)</title><rect x="97.2965%" y="165" width="0.0147%" height="15" fill="rgb(242,44,2)" fg:x="6622" fg:w="1"/><text x="97.5465%" y="175.50"></text></g><g><title>itsi_server.bundle`DYLD-STUB$$free (1 samples, 0.01%)</title><rect x="97.3112%" y="181" width="0.0147%" height="15" fill="rgb(216,177,13)" fg:x="6623" fg:w="1"/><text x="97.5612%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (1 samples, 0.01%)</title><rect x="97.3259%" y="181" width="0.0147%" height="15" fill="rgb(216,106,43)" fg:x="6624" fg:w="1"/><text x="97.5759%" y="191.50"></text></g><g><title>itsi_server.bundle`alloc::sync::Arc&lt;T,A&gt;::drop_slow (23 samples, 0.34%)</title><rect x="97.0173%" y="229" width="0.3379%" height="15" fill="rgb(216,183,2)" fg:x="6603" fg:w="23"/><text x="97.2673%" y="239.50"></text></g><g><title>itsi_server.bundle`core::ptr::drop_in_place&lt;http::request::Parts&gt; (23 samples, 0.34%)</title><rect x="97.0173%" y="213" width="0.3379%" height="15" fill="rgb(249,75,3)" fg:x="6603" fg:w="23"/><text x="97.2673%" y="223.50"></text></g><g><title>itsi_server.bundle`core::ptr::drop_in_place&lt;http::header::map::HeaderMap&gt; (23 samples, 0.34%)</title><rect x="97.0173%" y="197" width="0.3379%" height="15" fill="rgb(219,67,39)" fg:x="6603" fg:w="23"/><text x="97.2673%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`free (1 samples, 0.01%)</title><rect x="97.3406%" y="181" width="0.0147%" height="15" fill="rgb(253,228,2)" fg:x="6625" fg:w="1"/><text x="97.5906%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (5 samples, 0.07%)</title><rect x="97.3553%" y="229" width="0.0735%" height="15" fill="rgb(235,138,27)" fg:x="6626" fg:w="5"/><text x="97.6053%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_madvise_block (2 samples, 0.03%)</title><rect x="97.4287%" y="229" width="0.0294%" height="15" fill="rgb(236,97,51)" fg:x="6631" fg:w="2"/><text x="97.6787%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_madvise_block_locked (2 samples, 0.03%)</title><rect x="97.4287%" y="213" width="0.0294%" height="15" fill="rgb(240,80,30)" fg:x="6631" fg:w="2"/><text x="97.6787%" y="223.50"></text></g><g><title>libsystem_kernel.dylib`madvise (2 samples, 0.03%)</title><rect x="97.4287%" y="197" width="0.0294%" height="15" fill="rgb(230,178,19)" fg:x="6631" fg:w="2"/><text x="97.6787%" y="207.50"></text></g><g><title>libsystem_platform.dylib`__bzero (1 samples, 0.01%)</title><rect x="97.4581%" y="229" width="0.0147%" height="15" fill="rgb(210,190,27)" fg:x="6633" fg:w="1"/><text x="97.7081%" y="239.50"></text></g><g><title>itsi_server.bundle`core::ptr::drop_in_place&lt;itsi_server::ruby_types::itsi_http_response::ItsiHttpResponse&gt; (34 samples, 0.50%)</title><rect x="97.0173%" y="245" width="0.4996%" height="15" fill="rgb(222,107,31)" fg:x="6603" fg:w="34"/><text x="97.2673%" y="255.50"></text></g><g><title>libsystem_platform.dylib`_platform_memset (3 samples, 0.04%)</title><rect x="97.4728%" y="229" width="0.0441%" height="15" fill="rgb(216,127,34)" fg:x="6634" fg:w="3"/><text x="97.7228%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (1 samples, 0.01%)</title><rect x="97.5169%" y="245" width="0.0147%" height="15" fill="rgb(234,116,52)" fg:x="6637" fg:w="1"/><text x="97.7669%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_add_ptr (3 samples, 0.04%)</title><rect x="97.6638%" y="213" width="0.0441%" height="15" fill="rgb(222,124,15)" fg:x="6647" fg:w="3"/><text x="97.9138%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (17 samples, 0.25%)</title><rect x="97.5316%" y="245" width="0.2498%" height="15" fill="rgb(231,179,28)" fg:x="6638" fg:w="17"/><text x="97.7816%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (16 samples, 0.24%)</title><rect x="97.5463%" y="229" width="0.2351%" height="15" fill="rgb(226,93,45)" fg:x="6639" fg:w="16"/><text x="97.7963%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_remove_ptr (5 samples, 0.07%)</title><rect x="97.7079%" y="213" width="0.0735%" height="15" fill="rgb(215,8,51)" fg:x="6650" fg:w="5"/><text x="97.9579%" y="223.50"></text></g><g><title>itsi_server.bundle`core::ptr::drop_in_place&lt;itsi_server::ruby_types::itsi_http_request::ItsiHttpRequest&gt; (55 samples, 0.81%)</title><rect x="96.9880%" y="261" width="0.8081%" height="15" fill="rgb(223,106,5)" fg:x="6601" fg:w="55"/><text x="97.2380%" y="271.50"></text></g><g><title>libsystem_platform.dylib`_platform_memset (1 samples, 0.01%)</title><rect x="97.7814%" y="245" width="0.0147%" height="15" fill="rgb(250,191,5)" fg:x="6655" fg:w="1"/><text x="98.0314%" y="255.50"></text></g><g><title>itsi_server.bundle`magnus::typed_data::DataTypeFunctions::extern_free (57 samples, 0.84%)</title><rect x="96.9880%" y="277" width="0.8375%" height="15" fill="rgb(242,132,44)" fg:x="6601" fg:w="57"/><text x="97.2380%" y="287.50"></text></g><g><title>itsi_server.bundle`core::ptr::drop_in_place&lt;itsi_server::ruby_types::itsi_http_response::ItsiHttpResponse&gt; (2 samples, 0.03%)</title><rect x="97.7961%" y="261" width="0.0294%" height="15" fill="rgb(251,152,29)" fg:x="6656" fg:w="2"/><text x="98.0461%" y="271.50"></text></g><g><title>libruby.3.4.dylib`rb_str_free (1 samples, 0.01%)</title><rect x="97.8254%" y="277" width="0.0147%" height="15" fill="rgb(218,179,5)" fg:x="6658" fg:w="1"/><text x="98.0754%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`_free (1 samples, 0.01%)</title><rect x="97.8401%" y="277" width="0.0147%" height="15" fill="rgb(227,67,19)" fg:x="6659" fg:w="1"/><text x="98.0901%" y="287.50"></text></g><g><title>libruby.3.4.dylib`rb_gc_obj_free (78 samples, 1.15%)</title><rect x="96.8116%" y="293" width="1.1460%" height="15" fill="rgb(233,119,31)" fg:x="6589" fg:w="78"/><text x="97.0616%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (7 samples, 0.10%)</title><rect x="97.8548%" y="277" width="0.1029%" height="15" fill="rgb(241,120,22)" fg:x="6660" fg:w="7"/><text x="98.1048%" y="287.50"></text></g><g><title>libruby.3.4.dylib`rb_gc_obj_free_vm_weak_references (13 samples, 0.19%)</title><rect x="97.9577%" y="293" width="0.1910%" height="15" fill="rgb(224,102,30)" fg:x="6667" fg:w="13"/><text x="98.2077%" y="303.50"></text></g><g><title>libruby.3.4.dylib`rb_str_free (1 samples, 0.01%)</title><rect x="98.1487%" y="293" width="0.0147%" height="15" fill="rgb(210,164,37)" fg:x="6680" fg:w="1"/><text x="98.3987%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`_free (1 samples, 0.01%)</title><rect x="98.1634%" y="293" width="0.0147%" height="15" fill="rgb(226,191,16)" fg:x="6681" fg:w="1"/><text x="98.4134%" y="303.50"></text></g><g><title>libruby.3.4.dylib`gc_sweep_plane (106 samples, 1.56%)</title><rect x="96.6353%" y="309" width="1.5574%" height="15" fill="rgb(214,40,45)" fg:x="6577" fg:w="106"/><text x="96.8853%" y="319.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (1 samples, 0.01%)</title><rect x="98.1781%" y="293" width="0.0147%" height="15" fill="rgb(244,29,26)" fg:x="6682" fg:w="1"/><text x="98.4281%" y="303.50"></text></g><g><title>libruby.3.4.dylib`rb_gc_obj_free (3 samples, 0.04%)</title><rect x="98.1928%" y="309" width="0.0441%" height="15" fill="rgb(216,16,5)" fg:x="6683" fg:w="3"/><text x="98.4428%" y="319.50"></text></g><g><title>libruby.3.4.dylib`gc_sweep_step (110 samples, 1.62%)</title><rect x="96.6353%" y="325" width="1.6162%" height="15" fill="rgb(249,76,35)" fg:x="6577" fg:w="110"/><text x="96.8853%" y="335.50"></text></g><g><title>libruby.3.4.dylib`rb_gc_obj_free_vm_weak_references (1 samples, 0.01%)</title><rect x="98.2368%" y="309" width="0.0147%" height="15" fill="rgb(207,11,44)" fg:x="6686" fg:w="1"/><text x="98.4868%" y="319.50"></text></g><g><title>libruby.3.4.dylib`setup_parameters_complex (122 samples, 1.79%)</title><rect x="96.4884%" y="421" width="1.7925%" height="15" fill="rgb(228,190,49)" fg:x="6567" fg:w="122"/><text x="96.7384%" y="431.50">l..</text></g><g><title>libruby.3.4.dylib`rb_ary_new_from_values (118 samples, 1.73%)</title><rect x="96.5472%" y="405" width="1.7338%" height="15" fill="rgb(214,173,12)" fg:x="6571" fg:w="118"/><text x="96.7972%" y="415.50"></text></g><g><title>libruby.3.4.dylib`ary_new (115 samples, 1.69%)</title><rect x="96.5912%" y="389" width="1.6897%" height="15" fill="rgb(218,26,35)" fg:x="6574" fg:w="115"/><text x="96.8412%" y="399.50"></text></g><g><title>libruby.3.4.dylib`newobj_of (113 samples, 1.66%)</title><rect x="96.6206%" y="373" width="1.6603%" height="15" fill="rgb(220,200,19)" fg:x="6576" fg:w="113"/><text x="96.8706%" y="383.50"></text></g><g><title>libruby.3.4.dylib`newobj_cache_miss (112 samples, 1.65%)</title><rect x="96.6353%" y="357" width="1.6456%" height="15" fill="rgb(239,95,49)" fg:x="6577" fg:w="112"/><text x="96.8853%" y="367.50"></text></g><g><title>libruby.3.4.dylib`gc_continue (112 samples, 1.65%)</title><rect x="96.6353%" y="341" width="1.6456%" height="15" fill="rgb(235,85,53)" fg:x="6577" fg:w="112"/><text x="96.8853%" y="351.50"></text></g><g><title>libsystem_kernel.dylib`getrusage (2 samples, 0.03%)</title><rect x="98.2515%" y="325" width="0.0294%" height="15" fill="rgb(233,133,31)" fg:x="6687" fg:w="2"/><text x="98.5015%" y="335.50"></text></g><g><title>libruby.3.4.dylib`vm_callee_setup_block_arg (1 samples, 0.01%)</title><rect x="98.2809%" y="421" width="0.0147%" height="15" fill="rgb(218,25,20)" fg:x="6689" fg:w="1"/><text x="98.5309%" y="431.50"></text></g><g><title>libruby.3.4.dylib`invoke_block_from_c_bh (280 samples, 4.11%)</title><rect x="94.2110%" y="437" width="4.1140%" height="15" fill="rgb(252,210,38)" fg:x="6412" fg:w="280"/><text x="94.4610%" y="447.50">libr..</text></g><g><title>libsystem_platform.dylib`_setjmp (2 samples, 0.03%)</title><rect x="98.2956%" y="421" width="0.0294%" height="15" fill="rgb(242,134,21)" fg:x="6690" fg:w="2"/><text x="98.5456%" y="431.50"></text></g><g><title>libruby.3.4.dylib`rb_vm_exec (2 samples, 0.03%)</title><rect x="98.3250%" y="437" width="0.0294%" height="15" fill="rgb(213,28,48)" fg:x="6692" fg:w="2"/><text x="98.5750%" y="447.50"></text></g><g><title>libruby.3.4.dylib`setup_parameters_complex (1 samples, 0.01%)</title><rect x="98.3544%" y="437" width="0.0147%" height="15" fill="rgb(250,196,2)" fg:x="6694" fg:w="1"/><text x="98.6044%" y="447.50"></text></g><g><title>libruby.3.4.dylib`rb_hash_each_pair (317 samples, 4.66%)</title><rect x="93.7261%" y="533" width="4.6577%" height="15" fill="rgb(227,5,17)" fg:x="6379" fg:w="317"/><text x="93.9761%" y="543.50">libru..</text></g><g><title>libruby.3.4.dylib`rb_hash_foreach (296 samples, 4.35%)</title><rect x="94.0347%" y="517" width="4.3491%" height="15" fill="rgb(221,226,24)" fg:x="6400" fg:w="296"/><text x="94.2847%" y="527.50">libru..</text></g><g><title>libruby.3.4.dylib`rb_ensure (295 samples, 4.33%)</title><rect x="94.0494%" y="501" width="4.3344%" height="15" fill="rgb(211,5,48)" fg:x="6401" fg:w="295"/><text x="94.2994%" y="511.50">libru..</text></g><g><title>libruby.3.4.dylib`hash_foreach_call (292 samples, 4.29%)</title><rect x="94.0934%" y="485" width="4.2903%" height="15" fill="rgb(219,150,6)" fg:x="6404" fg:w="292"/><text x="94.3434%" y="495.50">libru..</text></g><g><title>libruby.3.4.dylib`each_pair_i (290 samples, 4.26%)</title><rect x="94.1228%" y="469" width="4.2609%" height="15" fill="rgb(251,46,16)" fg:x="6406" fg:w="290"/><text x="94.3728%" y="479.50">libru..</text></g><g><title>libruby.3.4.dylib`rb_yield (286 samples, 4.20%)</title><rect x="94.1816%" y="453" width="4.2022%" height="15" fill="rgb(220,204,40)" fg:x="6410" fg:w="286"/><text x="94.4316%" y="463.50">libru..</text></g><g><title>libsystem_platform.dylib`_platform_memmove (1 samples, 0.01%)</title><rect x="98.3691%" y="437" width="0.0147%" height="15" fill="rgb(211,85,2)" fg:x="6695" fg:w="1"/><text x="98.6191%" y="447.50"></text></g><g><title>libruby.3.4.dylib`rb_hash_foreach (1 samples, 0.01%)</title><rect x="98.3838%" y="533" width="0.0147%" height="15" fill="rgb(229,17,7)" fg:x="6696" fg:w="1"/><text x="98.6338%" y="543.50"></text></g><g><title>libruby.3.4.dylib`ary_new (3 samples, 0.04%)</title><rect x="98.3985%" y="517" width="0.0441%" height="15" fill="rgb(239,72,28)" fg:x="6697" fg:w="3"/><text x="98.6485%" y="527.50"></text></g><g><title>libruby.3.4.dylib`rb_current_ec (1 samples, 0.01%)</title><rect x="98.4279%" y="501" width="0.0147%" height="15" fill="rgb(230,47,54)" fg:x="6699" fg:w="1"/><text x="98.6779%" y="511.50"></text></g><g><title>libruby.3.4.dylib`newobj_of (1 samples, 0.01%)</title><rect x="98.4426%" y="517" width="0.0147%" height="15" fill="rgb(214,50,8)" fg:x="6700" fg:w="1"/><text x="98.6926%" y="527.50"></text></g><g><title>libruby.3.4.dylib`rb_hash_keys (5 samples, 0.07%)</title><rect x="98.3985%" y="533" width="0.0735%" height="15" fill="rgb(216,198,43)" fg:x="6697" fg:w="5"/><text x="98.6485%" y="543.50"></text></g><g><title>libruby.3.4.dylib`rb_ary_set_len (1 samples, 0.01%)</title><rect x="98.4572%" y="517" width="0.0147%" height="15" fill="rgb(234,20,35)" fg:x="6701" fg:w="1"/><text x="98.7072%" y="527.50"></text></g><g><title>libdyld.dylib`tlv_get_addr (1 samples, 0.01%)</title><rect x="98.5160%" y="501" width="0.0147%" height="15" fill="rgb(254,45,19)" fg:x="6705" fg:w="1"/><text x="98.7660%" y="511.50"></text></g><g><title>libruby.3.4.dylib`rb_int2str (6 samples, 0.09%)</title><rect x="98.4719%" y="533" width="0.0882%" height="15" fill="rgb(219,14,44)" fg:x="6702" fg:w="6"/><text x="98.7219%" y="543.50"></text></g><g><title>libruby.3.4.dylib`str_enc_new (4 samples, 0.06%)</title><rect x="98.5013%" y="517" width="0.0588%" height="15" fill="rgb(217,220,26)" fg:x="6704" fg:w="4"/><text x="98.7513%" y="527.50"></text></g><g><title>libruby.3.4.dylib`newobj_of (2 samples, 0.03%)</title><rect x="98.5307%" y="501" width="0.0294%" height="15" fill="rgb(213,158,28)" fg:x="6706" fg:w="2"/><text x="98.7807%" y="511.50"></text></g><g><title>libruby.3.4.dylib`rb_st_keys (10 samples, 0.15%)</title><rect x="98.5601%" y="533" width="0.1469%" height="15" fill="rgb(252,51,52)" fg:x="6708" fg:w="10"/><text x="98.8101%" y="543.50"></text></g><g><title>libruby.3.4.dylib`rb_str_equal (3 samples, 0.04%)</title><rect x="98.7070%" y="533" width="0.0441%" height="15" fill="rgb(246,89,16)" fg:x="6718" fg:w="3"/><text x="98.9570%" y="543.50"></text></g><g><title>libruby.3.4.dylib`rb_utf8_str_new (3 samples, 0.04%)</title><rect x="98.7511%" y="533" width="0.0441%" height="15" fill="rgb(216,158,49)" fg:x="6721" fg:w="3"/><text x="99.0011%" y="543.50"></text></g><g><title>libruby.3.4.dylib`rb_yield (3 samples, 0.04%)</title><rect x="98.7952%" y="533" width="0.0441%" height="15" fill="rgb(236,107,19)" fg:x="6724" fg:w="3"/><text x="99.0452%" y="543.50"></text></g><g><title>libruby.3.4.dylib`vm_call_cfunc_with_frame_ (1,889 samples, 27.75%)</title><rect x="71.1137%" y="549" width="27.7549%" height="15" fill="rgb(228,185,30)" fg:x="4840" fg:w="1889"/><text x="71.3637%" y="559.50">libruby.3.4.dylib`vm_call_cfunc_with_frame_</text></g><g><title>libsystem_platform.dylib`_platform_memcmp (2 samples, 0.03%)</title><rect x="98.8393%" y="533" width="0.0294%" height="15" fill="rgb(246,134,8)" fg:x="6727" fg:w="2"/><text x="99.0893%" y="543.50"></text></g><g><title>libruby.3.4.dylib`vm_call_iseq_setup_normal_0start (2 samples, 0.03%)</title><rect x="98.8686%" y="549" width="0.0294%" height="15" fill="rgb(214,143,50)" fg:x="6729" fg:w="2"/><text x="99.1186%" y="559.50"></text></g><g><title>libruby.3.4.dylib`vm_call_iseq_setup_normal_0start_0params_4locals (1 samples, 0.01%)</title><rect x="98.8980%" y="549" width="0.0147%" height="15" fill="rgb(228,75,8)" fg:x="6731" fg:w="1"/><text x="99.1480%" y="559.50"></text></g><g><title>libruby.3.4.dylib`vm_call_ivar (3 samples, 0.04%)</title><rect x="98.9127%" y="549" width="0.0441%" height="15" fill="rgb(207,175,4)" fg:x="6732" fg:w="3"/><text x="99.1627%" y="559.50"></text></g><g><title>libruby.3.4.dylib`CALLER_SETUP_ARG (1 samples, 0.01%)</title><rect x="99.0009%" y="533" width="0.0147%" height="15" fill="rgb(205,108,24)" fg:x="6738" fg:w="1"/><text x="99.2509%" y="543.50"></text></g><g><title>libruby.3.4.dylib`vm_invoke_iseq_block (6 samples, 0.09%)</title><rect x="98.9568%" y="549" width="0.0882%" height="15" fill="rgb(244,120,49)" fg:x="6735" fg:w="6"/><text x="99.2068%" y="559.50"></text></g><g><title>libruby.3.4.dylib`vm_callee_setup_block_arg (2 samples, 0.03%)</title><rect x="99.0156%" y="533" width="0.0294%" height="15" fill="rgb(223,47,38)" fg:x="6739" fg:w="2"/><text x="99.2656%" y="543.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (3 samples, 0.04%)</title><rect x="99.0450%" y="549" width="0.0441%" height="15" fill="rgb(229,179,11)" fg:x="6741" fg:w="3"/><text x="99.2950%" y="559.50"></text></g><g><title>libruby.3.4.dylib`vm_exec_core (2,699 samples, 39.66%)</title><rect x="59.4769%" y="565" width="39.6562%" height="15" fill="rgb(231,122,1)" fg:x="4048" fg:w="2699"/><text x="59.7269%" y="575.50">libruby.3.4.dylib`vm_exec_core</text></g><g><title>libsystem_platform.dylib`_platform_memset_pattern16 (3 samples, 0.04%)</title><rect x="99.0890%" y="549" width="0.0441%" height="15" fill="rgb(245,119,9)" fg:x="6744" fg:w="3"/><text x="99.3390%" y="559.50"></text></g><g><title>libruby.3.4.dylib`vm_invoke_block_opt_call (1 samples, 0.01%)</title><rect x="99.1331%" y="565" width="0.0147%" height="15" fill="rgb(241,163,25)" fg:x="6747" fg:w="1"/><text x="99.3831%" y="575.50"></text></g><g><title>libruby.3.4.dylib`vm_invoke_iseq_block (1 samples, 0.01%)</title><rect x="99.1478%" y="565" width="0.0147%" height="15" fill="rgb(217,214,3)" fg:x="6748" fg:w="1"/><text x="99.3978%" y="575.50"></text></g><g><title>libruby.3.4.dylib`rb_vm_exec (2,729 samples, 40.10%)</title><rect x="59.0802%" y="581" width="40.0970%" height="15" fill="rgb(240,86,28)" fg:x="4021" fg:w="2729"/><text x="59.3302%" y="591.50">libruby.3.4.dylib`rb_vm_exec</text></g><g><title>libruby.3.4.dylib`vm_opt_length (1 samples, 0.01%)</title><rect x="99.1625%" y="565" width="0.0147%" height="15" fill="rgb(215,47,9)" fg:x="6749" fg:w="1"/><text x="99.4125%" y="575.50"></text></g><g><title>libruby.3.4.dylib`vm_exec_core (1 samples, 0.01%)</title><rect x="99.1772%" y="581" width="0.0147%" height="15" fill="rgb(252,25,45)" fg:x="6750" fg:w="1"/><text x="99.4272%" y="591.50"></text></g><g><title>libruby.3.4.dylib`vm_invoke_proc (2,736 samples, 40.20%)</title><rect x="59.0068%" y="597" width="40.1998%" height="15" fill="rgb(251,164,9)" fg:x="4016" fg:w="2736"/><text x="59.2568%" y="607.50">libruby.3.4.dylib`vm_invoke_proc</text></g><g><title>libsystem_platform.dylib`_setjmp (1 samples, 0.01%)</title><rect x="99.1919%" y="581" width="0.0147%" height="15" fill="rgb(233,194,0)" fg:x="6751" fg:w="1"/><text x="99.4419%" y="591.50"></text></g><g><title>libruby.3.4.dylib`rb_funcallv_scope (2,782 samples, 40.88%)</title><rect x="58.3456%" y="629" width="40.8757%" height="15" fill="rgb(249,111,24)" fg:x="3971" fg:w="2782"/><text x="58.5956%" y="639.50">libruby.3.4.dylib`rb_funcallv_scope</text></g><g><title>libruby.3.4.dylib`vm_call0_body (2,744 samples, 40.32%)</title><rect x="58.9039%" y="613" width="40.3174%" height="15" fill="rgb(250,223,3)" fg:x="4009" fg:w="2744"/><text x="59.1539%" y="623.50">libruby.3.4.dylib`vm_call0_body</text></g><g><title>libsystem_platform.dylib`_platform_memset_pattern16 (1 samples, 0.01%)</title><rect x="99.2066%" y="597" width="0.0147%" height="15" fill="rgb(236,178,37)" fg:x="6752" fg:w="1"/><text x="99.4566%" y="607.50"></text></g><g><title>itsi_server.bundle`magnus::error::protect::call (2,791 samples, 41.01%)</title><rect x="58.2280%" y="645" width="41.0079%" height="15" fill="rgb(241,158,50)" fg:x="3963" fg:w="2791"/><text x="58.4780%" y="655.50">itsi_server.bundle`magnus::error::protect::call</text></g><g><title>libruby.3.4.dylib`vm_call0_body (1 samples, 0.01%)</title><rect x="99.2213%" y="629" width="0.0147%" height="15" fill="rgb(213,121,41)" fg:x="6753" fg:w="1"/><text x="99.4713%" y="639.50"></text></g><g><title>libdyld.dylib`tlv_get_addr (2 samples, 0.03%)</title><rect x="99.2360%" y="645" width="0.0294%" height="15" fill="rgb(240,92,3)" fg:x="6754" fg:w="2"/><text x="99.4860%" y="655.50"></text></g><g><title>libruby.3.4.dylib`rb_protect (2,814 samples, 41.35%)</title><rect x="57.9489%" y="661" width="41.3459%" height="15" fill="rgb(205,123,3)" fg:x="3944" fg:w="2814"/><text x="58.1989%" y="671.50">libruby.3.4.dylib`rb_protect</text></g><g><title>libruby.3.4.dylib`rb_funcallv_scope (2 samples, 0.03%)</title><rect x="99.2654%" y="645" width="0.0294%" height="15" fill="rgb(205,97,47)" fg:x="6756" fg:w="2"/><text x="99.5154%" y="655.50"></text></g><g><title>libruby.3.4.dylib`typed_data_alloc (2 samples, 0.03%)</title><rect x="99.2947%" y="661" width="0.0294%" height="15" fill="rgb(247,152,14)" fg:x="6758" fg:w="2"/><text x="99.5447%" y="671.50"></text></g><g><title>libsystem_c.dylib`clock_gettime (1 samples, 0.01%)</title><rect x="99.3241%" y="661" width="0.0147%" height="15" fill="rgb(248,195,53)" fg:x="6760" fg:w="1"/><text x="99.5741%" y="671.50"></text></g><g><title>itsi_server.bundle`itsi_server::server::thread_worker::ThreadWorker::process_one (2,842 samples, 41.76%)</title><rect x="57.6403%" y="677" width="41.7573%" height="15" fill="rgb(226,201,16)" fg:x="3923" fg:w="2842"/><text x="57.8903%" y="687.50">itsi_server.bundle`itsi_server::server::thread_worker::ThreadWorker:..</text></g><g><title>libsystem_malloc.dylib`nanov2_allocate_outlined (4 samples, 0.06%)</title><rect x="99.3388%" y="661" width="0.0588%" height="15" fill="rgb(205,98,0)" fg:x="6761" fg:w="4"/><text x="99.5888%" y="671.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_find_block_and_allocate (3 samples, 0.04%)</title><rect x="99.3535%" y="645" width="0.0441%" height="15" fill="rgb(214,191,48)" fg:x="6762" fg:w="3"/><text x="99.6035%" y="655.50"></text></g><g><title>itsi_server.bundle`std::sys::pal::unix::time::Timespec::now (2 samples, 0.03%)</title><rect x="99.3976%" y="677" width="0.0294%" height="15" fill="rgb(237,112,39)" fg:x="6765" fg:w="2"/><text x="99.6476%" y="687.50"></text></g><g><title>itsi_server.bundle`std::time::SystemTime::now (1 samples, 0.01%)</title><rect x="99.4270%" y="677" width="0.0147%" height="15" fill="rgb(247,203,27)" fg:x="6767" fg:w="1"/><text x="99.6770%" y="687.50"></text></g><g><title>libruby.3.4.dylib`newobj_of (1 samples, 0.01%)</title><rect x="99.4417%" y="677" width="0.0147%" height="15" fill="rgb(235,124,28)" fg:x="6768" fg:w="1"/><text x="99.6917%" y="687.50"></text></g><g><title>libruby.3.4.dylib`rb_data_typed_object_wrap (1 samples, 0.01%)</title><rect x="99.4564%" y="677" width="0.0147%" height="15" fill="rgb(208,207,46)" fg:x="6769" fg:w="1"/><text x="99.7064%" y="687.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate_outlined (1 samples, 0.01%)</title><rect x="99.4711%" y="677" width="0.0147%" height="15" fill="rgb(234,176,4)" fg:x="6770" fg:w="1"/><text x="99.7211%" y="687.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (4 samples, 0.06%)</title><rect x="99.4857%" y="677" width="0.0588%" height="15" fill="rgb(230,133,28)" fg:x="6771" fg:w="4"/><text x="99.7357%" y="687.50"></text></g><g><title>itsi_server.bundle`itsi_rb_helpers::call_with_gvl::trampoline (2,904 samples, 42.67%)</title><rect x="56.9791%" y="693" width="42.6682%" height="15" fill="rgb(211,137,40)" fg:x="3878" fg:w="2904"/><text x="57.2291%" y="703.50">itsi_server.bundle`itsi_rb_helpers::call_with_gvl::trampoline</text></g><g><title>libsystem_platform.dylib`_platform_memmove (7 samples, 0.10%)</title><rect x="99.5445%" y="677" width="0.1029%" height="15" fill="rgb(254,35,13)" fg:x="6775" fg:w="7"/><text x="99.7945%" y="687.50"></text></g><g><title>libruby.3.4.dylib`blocking_region_end (1 samples, 0.01%)</title><rect x="99.6474%" y="693" width="0.0147%" height="15" fill="rgb(225,49,51)" fg:x="6782" fg:w="1"/><text x="99.8974%" y="703.50"></text></g><g><title>libsystem_pthread.dylib`pthread_mutex_unlock (1 samples, 0.01%)</title><rect x="99.6474%" y="677" width="0.0147%" height="15" fill="rgb(251,10,15)" fg:x="6782" fg:w="1"/><text x="99.8974%" y="687.50"></text></g><g><title>libruby.3.4.dylib`rb_thread_call_with_gvl (2,922 samples, 42.93%)</title><rect x="56.9791%" y="709" width="42.9327%" height="15" fill="rgb(228,207,15)" fg:x="3878" fg:w="2922"/><text x="57.2291%" y="719.50">libruby.3.4.dylib`rb_thread_call_with_gvl</text></g><g><title>libsystem_platform.dylib`_platform_memmove (17 samples, 0.25%)</title><rect x="99.6621%" y="693" width="0.2498%" height="15" fill="rgb(241,99,19)" fg:x="6783" fg:w="17"/><text x="99.9121%" y="703.50"></text></g><g><title>libsystem_kernel.dylib`sigprocmask (4 samples, 0.06%)</title><rect x="99.9118%" y="709" width="0.0588%" height="15" fill="rgb(207,104,49)" fg:x="6800" fg:w="4"/><text x="100.1618%" y="719.50"></text></g><g><title>itsi_server.bundle`itsi_rb_helpers::call_without_gvl::trampoline (3,020 samples, 44.37%)</title><rect x="55.6127%" y="725" width="44.3726%" height="15" fill="rgb(234,99,18)" fg:x="3785" fg:w="3020"/><text x="55.8627%" y="735.50">itsi_server.bundle`itsi_rb_helpers::call_without_gvl::trampoline</text></g><g><title>libsystem_platform.dylib`_platform_memmove (1 samples, 0.01%)</title><rect x="99.9706%" y="709" width="0.0147%" height="15" fill="rgb(213,191,49)" fg:x="6804" fg:w="1"/><text x="100.2206%" y="719.50"></text></g><g><title>all (6,806 samples, 100%)</title><rect x="0.0000%" y="853" width="100.0000%" height="15" fill="rgb(210,226,19)" fg:x="0" fg:w="6806"/><text x="0.2500%" y="863.50"></text></g><g><title>libsystem_pthread.dylib`thread_start (3,022 samples, 44.40%)</title><rect x="55.5980%" y="837" width="44.4020%" height="15" fill="rgb(229,97,18)" fg:x="3784" fg:w="3022"/><text x="55.8480%" y="847.50">libsystem_pthread.dylib`thread_start</text></g><g><title>libsystem_pthread.dylib`_pthread_start (3,022 samples, 44.40%)</title><rect x="55.5980%" y="821" width="44.4020%" height="15" fill="rgb(211,167,15)" fg:x="3784" fg:w="3022"/><text x="55.8480%" y="831.50">libsystem_pthread.dylib`_pthread_start</text></g><g><title>libruby.3.4.dylib`nt_start (3,022 samples, 44.40%)</title><rect x="55.5980%" y="805" width="44.4020%" height="15" fill="rgb(210,169,34)" fg:x="3784" fg:w="3022"/><text x="55.8480%" y="815.50">libruby.3.4.dylib`nt_start</text></g><g><title>libruby.3.4.dylib`thread_start_func_2 (3,022 samples, 44.40%)</title><rect x="55.5980%" y="789" width="44.4020%" height="15" fill="rgb(241,121,31)" fg:x="3784" fg:w="3022"/><text x="55.8480%" y="799.50">libruby.3.4.dylib`thread_start_func_2</text></g><g><title>itsi_server.bundle`itsi_rb_helpers::create_ruby_thread::trampoline (3,022 samples, 44.40%)</title><rect x="55.5980%" y="773" width="44.4020%" height="15" fill="rgb(232,40,11)" fg:x="3784" fg:w="3022"/><text x="55.8480%" y="783.50">itsi_server.bundle`itsi_rb_helpers::create_ruby_thread::trampoline</text></g><g><title>itsi_server.bundle`itsi_server::server::thread_worker::ThreadWorker::accept_loop (3,022 samples, 44.40%)</title><rect x="55.5980%" y="757" width="44.4020%" height="15" fill="rgb(205,86,26)" fg:x="3784" fg:w="3022"/><text x="55.8480%" y="767.50">itsi_server.bundle`itsi_server::server::thread_worker::ThreadWorker::acce..</text></g><g><title>libruby.3.4.dylib`rb_nogvl (3,022 samples, 44.40%)</title><rect x="55.5980%" y="741" width="44.4020%" height="15" fill="rgb(231,126,28)" fg:x="3784" fg:w="3022"/><text x="55.8480%" y="751.50">libruby.3.4.dylib`rb_nogvl</text></g><g><title>libsystem_platform.dylib`_platform_memmove (1 samples, 0.01%)</title><rect x="99.9853%" y="725" width="0.0147%" height="15" fill="rgb(219,221,18)" fg:x="6805" fg:w="1"/><text x="100.2353%" y="735.50"></text></g></svg></svg>