<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="854" onload="init(evt)" viewBox="0 0 1200 854" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:fg="http://github.com/jonhoo/inferno"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:monospace; font-size:12px }
#title { text-anchor:middle; font-size:17px; }
#matched { text-anchor:end; }
#search { text-anchor:end; opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[
        var nametype = 'Function:';
        var fontsize = 12;
        var fontwidth = 0.59;
        var xpad = 10;
        var inverted = false;
        var searchcolor = 'rgb(230,0,230)';
        var fluiddrawing = true;
        var truncate_text_right = false;
    ]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames, known_font_width;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    known_font_width = get_monospace_width(frames);
    total_samples = parseInt(frames.attributes.total_samples.value);
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[*|x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        if (!isEdge) {
            svg.removeAttribute("viewBox");
        }
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            update_text_for_elements(frames.children);

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad;
            matchedtxt.attributes.x.value = svgWidth - xpad;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes["fg:x"]) {
            var params = get_params()
            params.x = el.attributes["fg:x"].value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["fg:orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("fg:orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["fg:orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["fg:orig_" + attr].value;
    e.removeAttribute("fg:orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function get_monospace_width(frames) {
    // Given the id="frames" element, return the width of text characters if
    // this is a monospace font, otherwise return 0.
    text = find_child(frames.children[0], "text");
    originalContent = text.textContent;
    text.textContent = "!";
    bangWidth = text.getComputedTextLength();
    text.textContent = "W";
    wWidth = text.getComputedTextLength();
    text.textContent = originalContent;
    if (bangWidth === wWidth) {
        return bangWidth;
    } else {
        return 0;
    }
}
function update_text_for_elements(elements) {
    // In order to render quickly in the browser, you want to do one pass of
    // reading attributes, and one pass of mutating attributes. See
    // https://web.dev/avoid-large-complex-layouts-and-layout-thrashing/ for details.

    // Fall back to inefficient calculation, if we're variable-width font.
    // TODO This should be optimized somehow too.
    if (known_font_width === 0) {
        for (var i = 0; i < elements.length; i++) {
            update_text(elements[i]);
        }
        return;
    }

    var textElemNewAttributes = [];
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var r = find_child(e, "rect");
        var t = find_child(e, "text");
        var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
        var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
        var newX = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

        // Smaller than this size won't fit anything
        if (w < 2 * known_font_width) {
            textElemNewAttributes.push([newX, ""]);
            continue;
        }

        // Fit in full text width
        if (txt.length * known_font_width < w) {
            textElemNewAttributes.push([newX, txt]);
            continue;
        }

        var substringLength = Math.floor(w / known_font_width) - 2;
        if (truncate_text_right) {
            // Truncate the right side of the text.
            textElemNewAttributes.push([newX, txt.substring(0, substringLength) + ".."]);
            continue;
        } else {
            // Truncate the left side of the text.
            textElemNewAttributes.push([newX, ".." + txt.substring(txt.length - substringLength, txt.length)]);
            continue;
        }
    }

    console.assert(textElemNewAttributes.length === elements.length, "Resize failed, please file a bug at https://github.com/jonhoo/inferno/");

    // Now that we know new textContent, set it all in one go so we don't refresh a bazillion times.
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var values = textElemNewAttributes[i];
        var t = find_child(e, "text");
        t.attributes.x.value = values[0];
        t.textContent = values[1];
    }
}

function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * parseInt(e.attributes["fg:x"].value) / total_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / total_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, zoomed_width_samples) {
    if (e.tagName == "text") {
        var parent_x = parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value);
        e.attributes.x.value = format_percent(parent_x + (100 * 3 / frames.attributes.width.value));
    } else if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * (parseInt(e.attributes["fg:x"].value) - x) / zoomed_width_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / zoomed_width_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, zoomed_width_samples);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseInt(attr["fg:w"].value);
    var xmin = parseInt(attr["fg:x"].value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    var to_update_text = [];
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseInt(a["fg:x"].value);
        var ew = parseInt(a["fg:w"].value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                to_update_text.push(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, width);
                to_update_text.push(e);
            }
        }
    }
    update_text_for_elements(to_update_text);
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
    }
    update_text_for_elements(el);
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        // Skip over frames which are either not visible, or below the zoomed-to frame
        if (e.classList.contains("hide") || e.classList.contains("parent")) {
            continue;
        }
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseInt(rect.attributes["fg:w"].value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseInt(rect.attributes["fg:x"].value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    for (var k in keys) {
        var x = parseInt(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="854" fill="url(#background)"/><text id="title" fill="rgb(0,0,0)" x="50.0000%" y="24.00">Flame Graph</text><text id="details" fill="rgb(0,0,0)" x="10" y="837.00"> </text><text id="unzoom" class="hide" fill="rgb(0,0,0)" x="10" y="24.00">Reset Zoom</text><text id="search" fill="rgb(0,0,0)" x="1190" y="24.00">Search</text><text id="matched" fill="rgb(0,0,0)" x="1190" y="837.00"> </text><svg id="frames" x="10" width="1180" total_samples="6838"><g><title>itsi_server.bundle`&lt;tokio::runtime::coop::with_budget::ResetGuard as core::ops::drop::Drop&gt;::drop (1 samples, 0.01%)</title><rect x="0.0585%" y="277" width="0.0146%" height="15" fill="rgb(227,0,7)" fg:x="4" fg:w="1"/><text x="0.3085%" y="287.50"></text></g><g><title>itsi_server.bundle`tokio::runtime::task::core::Core&lt;T,S&gt;::poll (5 samples, 0.07%)</title><rect x="0.0731%" y="277" width="0.0731%" height="15" fill="rgb(217,0,24)" fg:x="5" fg:w="5"/><text x="0.3231%" y="287.50"></text></g><g><title>itsi_server.bundle`&lt;tokio::runtime::task::core::TaskIdGuard as core::ops::drop::Drop&gt;::drop (1 samples, 0.01%)</title><rect x="0.2340%" y="261" width="0.0146%" height="15" fill="rgb(221,193,54)" fg:x="16" fg:w="1"/><text x="0.4840%" y="271.50"></text></g><g><title>itsi_server.bundle`itsi_server::server::serve_strategy::single_mode::SingleMode::serve_connection::_{{closure}}::_{{closure}} (1 samples, 0.01%)</title><rect x="0.2486%" y="261" width="0.0146%" height="15" fill="rgb(248,212,6)" fg:x="17" fg:w="1"/><text x="0.4986%" y="271.50"></text></g><g><title>itsi_server.bundle`&lt;core::future::poll_fn::PollFn&lt;F&gt; as core::future::future::Future&gt;::poll (3 samples, 0.04%)</title><rect x="0.2925%" y="245" width="0.0439%" height="15" fill="rgb(208,68,35)" fg:x="20" fg:w="3"/><text x="0.5425%" y="255.50"></text></g><g><title>itsi_server.bundle`&lt;tokio::runtime::task::core::TaskIdGuard as core::ops::drop::Drop&gt;::drop (1 samples, 0.01%)</title><rect x="0.3364%" y="245" width="0.0146%" height="15" fill="rgb(232,128,0)" fg:x="23" fg:w="1"/><text x="0.5864%" y="255.50"></text></g><g><title>itsi_server.bundle`&lt;alloc::collections::vec_deque::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::fold (4 samples, 0.06%)</title><rect x="0.6142%" y="181" width="0.0585%" height="15" fill="rgb(207,160,47)" fg:x="42" fg:w="4"/><text x="0.8642%" y="191.50"></text></g><g><title>itsi_server.bundle`&lt;async_channel::SendInner&lt;T&gt; as event_listener_strategy::EventListenerFuture&gt;::poll_with_strategy (2 samples, 0.03%)</title><rect x="0.6727%" y="181" width="0.0292%" height="15" fill="rgb(228,23,34)" fg:x="46" fg:w="2"/><text x="0.9227%" y="191.50"></text></g><g><title>itsi_server.bundle`&lt;http_body_util::combinators::collect::Collect&lt;T&gt; as core::future::future::Future&gt;::poll (1 samples, 0.01%)</title><rect x="0.7020%" y="181" width="0.0146%" height="15" fill="rgb(218,30,26)" fg:x="48" fg:w="1"/><text x="0.9520%" y="191.50"></text></g><g><title>itsi_server.bundle`&lt;http_body_util::full::Full&lt;D&gt; as http_body::Body&gt;::is_end_stream (1 samples, 0.01%)</title><rect x="0.7166%" y="181" width="0.0146%" height="15" fill="rgb(220,122,19)" fg:x="49" fg:w="1"/><text x="0.9666%" y="191.50"></text></g><g><title>itsi_server.bundle`&lt;hyper::proto::h1::dispatch::Server&lt;S,hyper::body::incoming::Incoming&gt; as hyper::proto::h1::dispatch::Dispatch&gt;::recv_msg (1 samples, 0.01%)</title><rect x="0.7312%" y="181" width="0.0146%" height="15" fill="rgb(250,228,42)" fg:x="50" fg:w="1"/><text x="0.9812%" y="191.50"></text></g><g><title>itsi_server.bundle`core::ptr::drop_in_place&lt;core::option::Option&lt;event_listener::EventListener&gt;&gt; (2 samples, 0.03%)</title><rect x="0.7458%" y="181" width="0.0292%" height="15" fill="rgb(240,193,28)" fg:x="51" fg:w="2"/><text x="0.9958%" y="191.50"></text></g><g><title>itsi_server.bundle`core::ptr::drop_in_place&lt;itsi_server::response::itsi_response::ItsiResponse::build::{{closure}}&gt; (1 samples, 0.01%)</title><rect x="0.7751%" y="181" width="0.0146%" height="15" fill="rgb(216,20,37)" fg:x="53" fg:w="1"/><text x="1.0251%" y="191.50"></text></g><g><title>itsi_server.bundle`hyper::common::date::update (1 samples, 0.01%)</title><rect x="0.7897%" y="181" width="0.0146%" height="15" fill="rgb(206,188,39)" fg:x="54" fg:w="1"/><text x="1.0397%" y="191.50"></text></g><g><title>itsi_server.bundle`hyper::proto::h1::conn::Conn&lt;I,B,T&gt;::write_body_and_end (1 samples, 0.01%)</title><rect x="0.8043%" y="181" width="0.0146%" height="15" fill="rgb(217,207,13)" fg:x="55" fg:w="1"/><text x="1.0543%" y="191.50"></text></g><g><title>itsi_server.bundle`hyper::proto::h1::conn::State::try_keep_alive (1 samples, 0.01%)</title><rect x="0.8190%" y="181" width="0.0146%" height="15" fill="rgb(231,73,38)" fg:x="56" fg:w="1"/><text x="1.0690%" y="191.50"></text></g><g><title>itsi_server.bundle`&lt;alloc::collections::vec_deque::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::fold (3 samples, 0.04%)</title><rect x="2.2521%" y="165" width="0.0439%" height="15" fill="rgb(225,20,46)" fg:x="154" fg:w="3"/><text x="2.5021%" y="175.50"></text></g><g><title>itsi_server.bundle`&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (2 samples, 0.03%)</title><rect x="2.2960%" y="165" width="0.0292%" height="15" fill="rgb(210,31,41)" fg:x="157" fg:w="2"/><text x="2.5460%" y="175.50"></text></g><g><title>itsi_server.bundle`DYLD-STUB$$memcpy (2 samples, 0.03%)</title><rect x="2.5300%" y="149" width="0.0292%" height="15" fill="rgb(221,200,47)" fg:x="173" fg:w="2"/><text x="2.7800%" y="159.50"></text></g><g><title>itsi_server.bundle`DYLD-STUB$$pthread_mutex_unlock (1 samples, 0.01%)</title><rect x="2.5592%" y="149" width="0.0146%" height="15" fill="rgb(226,26,5)" fg:x="175" fg:w="1"/><text x="2.8092%" y="159.50"></text></g><g><title>itsi_server.bundle`concurrent_queue::bounded::Bounded&lt;T&gt;::push_or_else (4 samples, 0.06%)</title><rect x="2.5739%" y="149" width="0.0585%" height="15" fill="rgb(249,33,26)" fg:x="176" fg:w="4"/><text x="2.8239%" y="159.50"></text></g><g><title>itsi_server.bundle`core::ptr::drop_in_place&lt;core::option::Option&lt;event_listener::EventListener&gt;&gt; (1 samples, 0.01%)</title><rect x="2.6323%" y="149" width="0.0146%" height="15" fill="rgb(235,183,28)" fg:x="180" fg:w="1"/><text x="2.8823%" y="159.50"></text></g><g><title>itsi_server.bundle`event_listener::sys::_&lt;impl event_listener::Inner&lt;T&gt;&gt;::with_inner (1 samples, 0.01%)</title><rect x="2.6323%" y="133" width="0.0146%" height="15" fill="rgb(221,5,38)" fg:x="180" fg:w="1"/><text x="2.8823%" y="143.50"></text></g><g><title>itsi_server.bundle`std::sys::pal::unix::sync::mutex::Mutex::lock (1 samples, 0.01%)</title><rect x="2.6323%" y="117" width="0.0146%" height="15" fill="rgb(247,18,42)" fg:x="180" fg:w="1"/><text x="2.8823%" y="127.50"></text></g><g><title>libsystem_pthread.dylib`pthread_mutex_lock (1 samples, 0.01%)</title><rect x="2.6323%" y="101" width="0.0146%" height="15" fill="rgb(241,131,45)" fg:x="180" fg:w="1"/><text x="2.8823%" y="111.50"></text></g><g><title>itsi_server.bundle`event_listener::Event&lt;T&gt;::inner (2 samples, 0.03%)</title><rect x="2.6470%" y="149" width="0.0292%" height="15" fill="rgb(249,31,29)" fg:x="181" fg:w="2"/><text x="2.8970%" y="159.50"></text></g><g><title>libsystem_pthread.dylib`_pthread_mutex_firstfit_lock_slow (4 samples, 0.06%)</title><rect x="2.6908%" y="117" width="0.0585%" height="15" fill="rgb(225,111,53)" fg:x="184" fg:w="4"/><text x="2.9408%" y="127.50"></text></g><g><title>libsystem_kernel.dylib`__psynch_mutexwait (4 samples, 0.06%)</title><rect x="2.6908%" y="101" width="0.0585%" height="15" fill="rgb(238,160,17)" fg:x="184" fg:w="4"/><text x="2.9408%" y="111.50"></text></g><g><title>itsi_server.bundle`event_listener::Event&lt;T&gt;::listen (6 samples, 0.09%)</title><rect x="2.6762%" y="149" width="0.0877%" height="15" fill="rgb(214,148,48)" fg:x="183" fg:w="6"/><text x="2.9262%" y="159.50"></text></g><g><title>itsi_server.bundle`std::sys::pal::unix::sync::mutex::Mutex::lock (5 samples, 0.07%)</title><rect x="2.6908%" y="133" width="0.0731%" height="15" fill="rgb(232,36,49)" fg:x="184" fg:w="5"/><text x="2.9408%" y="143.50"></text></g><g><title>libsystem_pthread.dylib`pthread_mutex_lock (1 samples, 0.01%)</title><rect x="2.7493%" y="117" width="0.0146%" height="15" fill="rgb(209,103,24)" fg:x="188" fg:w="1"/><text x="2.9993%" y="127.50"></text></g><g><title>itsi_server.bundle`DYLD-STUB$$pthread_mutex_lock (1 samples, 0.01%)</title><rect x="2.7640%" y="133" width="0.0146%" height="15" fill="rgb(229,88,8)" fg:x="189" fg:w="1"/><text x="3.0140%" y="143.50"></text></g><g><title>itsi_server.bundle`event_listener::sys::Inner&lt;T&gt;::notify (4 samples, 0.06%)</title><rect x="2.7786%" y="133" width="0.0585%" height="15" fill="rgb(213,181,19)" fg:x="190" fg:w="4"/><text x="3.0286%" y="143.50"></text></g><g><title>itsi_server.bundle`event_listener::Task::wake (3 samples, 0.04%)</title><rect x="2.7932%" y="117" width="0.0439%" height="15" fill="rgb(254,191,54)" fg:x="191" fg:w="3"/><text x="3.0432%" y="127.50"></text></g><g><title>itsi_server.bundle`parking::Inner::unpark (3 samples, 0.04%)</title><rect x="2.7932%" y="101" width="0.0439%" height="15" fill="rgb(241,83,37)" fg:x="191" fg:w="3"/><text x="3.0432%" y="111.50"></text></g><g><title>libsystem_kernel.dylib`__psynch_cvsignal (3 samples, 0.04%)</title><rect x="2.7932%" y="85" width="0.0439%" height="15" fill="rgb(233,36,39)" fg:x="191" fg:w="3"/><text x="3.0432%" y="95.50"></text></g><g><title>libsystem_pthread.dylib`_pthread_mutex_firstfit_lock_slow (2 samples, 0.03%)</title><rect x="2.8517%" y="117" width="0.0292%" height="15" fill="rgb(226,3,54)" fg:x="195" fg:w="2"/><text x="3.1017%" y="127.50"></text></g><g><title>libsystem_kernel.dylib`__psynch_mutexwait (2 samples, 0.03%)</title><rect x="2.8517%" y="101" width="0.0292%" height="15" fill="rgb(245,192,40)" fg:x="195" fg:w="2"/><text x="3.1017%" y="111.50"></text></g><g><title>itsi_server.bundle`std::sys::pal::unix::sync::mutex::Mutex::lock (7 samples, 0.10%)</title><rect x="2.8371%" y="133" width="0.1024%" height="15" fill="rgb(238,167,29)" fg:x="194" fg:w="7"/><text x="3.0871%" y="143.50"></text></g><g><title>libsystem_pthread.dylib`pthread_mutex_lock (4 samples, 0.06%)</title><rect x="2.8810%" y="117" width="0.0585%" height="15" fill="rgb(232,182,51)" fg:x="197" fg:w="4"/><text x="3.1310%" y="127.50"></text></g><g><title>itsi_server.bundle`std::sys::pal::unix::sync::mutex::Mutex::unlock (2 samples, 0.03%)</title><rect x="2.9395%" y="133" width="0.0292%" height="15" fill="rgb(231,60,39)" fg:x="201" fg:w="2"/><text x="3.1895%" y="143.50"></text></g><g><title>libsystem_pthread.dylib`_pthread_mutex_firstfit_unlock_slow (1 samples, 0.01%)</title><rect x="2.9687%" y="133" width="0.0146%" height="15" fill="rgb(208,69,12)" fg:x="203" fg:w="1"/><text x="3.2187%" y="143.50"></text></g><g><title>libsystem_kernel.dylib`__psynch_mutexdrop (1 samples, 0.01%)</title><rect x="2.9687%" y="117" width="0.0146%" height="15" fill="rgb(235,93,37)" fg:x="203" fg:w="1"/><text x="3.2187%" y="127.50"></text></g><g><title>itsi_server.bundle`event_listener::sys::_&lt;impl event_listener::Inner&lt;T&gt;&gt;::notify (17 samples, 0.25%)</title><rect x="2.7640%" y="149" width="0.2486%" height="15" fill="rgb(213,116,39)" fg:x="189" fg:w="17"/><text x="3.0140%" y="159.50"></text></g><g><title>libsystem_pthread.dylib`pthread_mutex_unlock (2 samples, 0.03%)</title><rect x="2.9833%" y="133" width="0.0292%" height="15" fill="rgb(222,207,29)" fg:x="204" fg:w="2"/><text x="3.2333%" y="143.50"></text></g><g><title>itsi_server.bundle`event_listener::sys::Inner&lt;T&gt;::remove (1 samples, 0.01%)</title><rect x="3.0126%" y="133" width="0.0146%" height="15" fill="rgb(206,96,30)" fg:x="206" fg:w="1"/><text x="3.2626%" y="143.50"></text></g><g><title>itsi_server.bundle`event_listener::sys::_&lt;impl event_listener::Inner&lt;T&gt;&gt;::with_inner (2 samples, 0.03%)</title><rect x="3.0126%" y="149" width="0.0292%" height="15" fill="rgb(218,138,4)" fg:x="206" fg:w="2"/><text x="3.2626%" y="159.50"></text></g><g><title>itsi_server.bundle`std::sys::pal::unix::sync::mutex::Mutex::lock (1 samples, 0.01%)</title><rect x="3.0272%" y="133" width="0.0146%" height="15" fill="rgb(250,191,14)" fg:x="207" fg:w="1"/><text x="3.2772%" y="143.50"></text></g><g><title>libsystem_pthread.dylib`pthread_mutex_lock (1 samples, 0.01%)</title><rect x="3.0272%" y="117" width="0.0146%" height="15" fill="rgb(239,60,40)" fg:x="207" fg:w="1"/><text x="3.2772%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (1 samples, 0.01%)</title><rect x="3.0418%" y="149" width="0.0146%" height="15" fill="rgb(206,27,48)" fg:x="208" fg:w="1"/><text x="3.2918%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (1 samples, 0.01%)</title><rect x="3.0564%" y="149" width="0.0146%" height="15" fill="rgb(225,35,8)" fg:x="209" fg:w="1"/><text x="3.3064%" y="159.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (20 samples, 0.29%)</title><rect x="3.0711%" y="149" width="0.2925%" height="15" fill="rgb(250,213,24)" fg:x="210" fg:w="20"/><text x="3.3211%" y="159.50"></text></g><g><title>itsi_server.bundle`&lt;async_channel::SendInner&lt;T&gt; as event_listener_strategy::EventListenerFuture&gt;::poll_with_strategy (72 samples, 1.05%)</title><rect x="2.3252%" y="165" width="1.0529%" height="15" fill="rgb(247,123,22)" fg:x="159" fg:w="72"/><text x="2.5752%" y="175.50"></text></g><g><title>libsystem_platform.dylib`_platform_memset (1 samples, 0.01%)</title><rect x="3.3636%" y="149" width="0.0146%" height="15" fill="rgb(231,138,38)" fg:x="230" fg:w="1"/><text x="3.6136%" y="159.50"></text></g><g><title>itsi_server.bundle`&lt;event_listener::notify::Notify as event_listener::notify::NotificationPrivate&gt;::fence (2 samples, 0.03%)</title><rect x="3.3782%" y="165" width="0.0292%" height="15" fill="rgb(231,145,46)" fg:x="231" fg:w="2"/><text x="3.6282%" y="175.50"></text></g><g><title>itsi_server.bundle`&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (8 samples, 0.12%)</title><rect x="3.4659%" y="149" width="0.1170%" height="15" fill="rgb(251,118,11)" fg:x="237" fg:w="8"/><text x="3.7159%" y="159.50"></text></g><g><title>itsi_server.bundle`&lt;http::request::Parts as core::clone::Clone&gt;::clone (15 samples, 0.22%)</title><rect x="3.4074%" y="165" width="0.2194%" height="15" fill="rgb(217,147,25)" fg:x="233" fg:w="15"/><text x="3.6574%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (3 samples, 0.04%)</title><rect x="3.5829%" y="149" width="0.0439%" height="15" fill="rgb(247,81,37)" fg:x="245" fg:w="3"/><text x="3.8329%" y="159.50"></text></g><g><title>itsi_server.bundle`&lt;http_body_util::combinators::collect::Collect&lt;T&gt; as core::future::future::Future&gt;::poll (3 samples, 0.04%)</title><rect x="3.6268%" y="165" width="0.0439%" height="15" fill="rgb(209,12,38)" fg:x="248" fg:w="3"/><text x="3.8768%" y="175.50"></text></g><g><title>itsi_server.bundle`&lt;hyper::body::incoming::Incoming as http_body::Body&gt;::poll_frame (2 samples, 0.03%)</title><rect x="3.6414%" y="149" width="0.0292%" height="15" fill="rgb(227,1,9)" fg:x="249" fg:w="2"/><text x="3.8914%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`_szone_free (1 samples, 0.01%)</title><rect x="3.6853%" y="117" width="0.0146%" height="15" fill="rgb(248,47,43)" fg:x="252" fg:w="1"/><text x="3.9353%" y="127.50"></text></g><g><title>itsi_server.bundle`alloc::sync::Arc&lt;T,A&gt;::drop_slow (2 samples, 0.03%)</title><rect x="3.6853%" y="133" width="0.0292%" height="15" fill="rgb(221,10,30)" fg:x="252" fg:w="2"/><text x="3.9353%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`free_small (1 samples, 0.01%)</title><rect x="3.6999%" y="117" width="0.0146%" height="15" fill="rgb(210,229,1)" fg:x="253" fg:w="1"/><text x="3.9499%" y="127.50"></text></g><g><title>itsi_server.bundle`&lt;http_body_util::stream::StreamBody&lt;S&gt; as http_body::Body&gt;::poll_frame (6 samples, 0.09%)</title><rect x="3.6707%" y="165" width="0.0877%" height="15" fill="rgb(222,148,37)" fg:x="251" fg:w="6"/><text x="3.9207%" y="175.50"></text></g><g><title>itsi_server.bundle`&lt;futures_util::stream::unfold::Unfold&lt;T,F,Fut&gt; as futures_core::stream::Stream&gt;::poll_next (6 samples, 0.09%)</title><rect x="3.6707%" y="149" width="0.0877%" height="15" fill="rgb(234,67,33)" fg:x="251" fg:w="6"/><text x="3.9207%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (3 samples, 0.04%)</title><rect x="3.7145%" y="133" width="0.0439%" height="15" fill="rgb(247,98,35)" fg:x="254" fg:w="3"/><text x="3.9645%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (1 samples, 0.01%)</title><rect x="3.7438%" y="117" width="0.0146%" height="15" fill="rgb(247,138,52)" fg:x="256" fg:w="1"/><text x="3.9938%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_add_ptr (1 samples, 0.01%)</title><rect x="3.7438%" y="101" width="0.0146%" height="15" fill="rgb(213,79,30)" fg:x="256" fg:w="1"/><text x="3.9938%" y="111.50"></text></g><g><title>itsi_server.bundle`&lt;hyper::body::incoming::Incoming as http_body::Body&gt;::poll_frame (2 samples, 0.03%)</title><rect x="3.7584%" y="165" width="0.0292%" height="15" fill="rgb(246,177,23)" fg:x="257" fg:w="2"/><text x="4.0084%" y="175.50"></text></g><g><title>itsi_server.bundle`&lt;T as hyper::service::http::HttpService&lt;B1&gt;&gt;::call (3 samples, 0.04%)</title><rect x="3.8462%" y="149" width="0.0439%" height="15" fill="rgb(230,62,27)" fg:x="263" fg:w="3"/><text x="4.0962%" y="159.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (2 samples, 0.03%)</title><rect x="3.8608%" y="133" width="0.0292%" height="15" fill="rgb(216,154,8)" fg:x="264" fg:w="2"/><text x="4.1108%" y="143.50"></text></g><g><title>itsi_server.bundle`&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.01%)</title><rect x="3.8900%" y="149" width="0.0146%" height="15" fill="rgb(244,35,45)" fg:x="266" fg:w="1"/><text x="4.1400%" y="159.50"></text></g><g><title>itsi_server.bundle`core::ptr::drop_in_place&lt;http::header::map::HeaderMap&gt; (1 samples, 0.01%)</title><rect x="3.9047%" y="149" width="0.0146%" height="15" fill="rgb(251,115,12)" fg:x="267" fg:w="1"/><text x="4.1547%" y="159.50"></text></g><g><title>itsi_server.bundle`&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.01%)</title><rect x="3.9047%" y="133" width="0.0146%" height="15" fill="rgb(240,54,50)" fg:x="267" fg:w="1"/><text x="4.1547%" y="143.50"></text></g><g><title>itsi_server.bundle`core::ptr::drop_in_place&lt;http::uri::Uri&gt; (3 samples, 0.04%)</title><rect x="3.9193%" y="149" width="0.0439%" height="15" fill="rgb(233,84,52)" fg:x="268" fg:w="3"/><text x="4.1693%" y="159.50"></text></g><g><title>itsi_server.bundle`http::request::Parts::new (5 samples, 0.07%)</title><rect x="3.9631%" y="149" width="0.0731%" height="15" fill="rgb(207,117,47)" fg:x="271" fg:w="5"/><text x="4.2131%" y="159.50"></text></g><g><title>itsi_server.bundle`&lt;hyper::proto::h1::dispatch::Server&lt;S,hyper::body::incoming::Incoming&gt; as hyper::proto::h1::dispatch::Dispatch&gt;::recv_msg (20 samples, 0.29%)</title><rect x="3.7877%" y="165" width="0.2925%" height="15" fill="rgb(249,43,39)" fg:x="259" fg:w="20"/><text x="4.0377%" y="175.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (3 samples, 0.04%)</title><rect x="4.0363%" y="149" width="0.0439%" height="15" fill="rgb(209,38,44)" fg:x="276" fg:w="3"/><text x="4.2863%" y="159.50"></text></g><g><title>itsi_server.bundle`&lt;hyper_util::rt::tokio::TokioTimer as hyper::rt::timer::Timer&gt;::sleep_until (3 samples, 0.04%)</title><rect x="4.0801%" y="165" width="0.0439%" height="15" fill="rgb(236,212,23)" fg:x="279" fg:w="3"/><text x="4.3301%" y="175.50"></text></g><g><title>itsi_server.bundle`&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.01%)</title><rect x="4.2264%" y="117" width="0.0146%" height="15" fill="rgb(242,79,21)" fg:x="289" fg:w="1"/><text x="4.4764%" y="127.50"></text></g><g><title>itsi_server.bundle`core::fmt::num::imp::_&lt;impl core::fmt::Display for u8&gt;::fmt (1 samples, 0.01%)</title><rect x="4.2410%" y="117" width="0.0146%" height="15" fill="rgb(211,96,35)" fg:x="290" fg:w="1"/><text x="4.4910%" y="127.50"></text></g><g><title>itsi_server.bundle`&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.01%)</title><rect x="4.2703%" y="101" width="0.0146%" height="15" fill="rgb(253,215,40)" fg:x="292" fg:w="1"/><text x="4.5203%" y="111.50"></text></g><g><title>itsi_server.bundle`core::fmt::Formatter::pad_integral (5 samples, 0.07%)</title><rect x="4.2849%" y="101" width="0.0731%" height="15" fill="rgb(211,81,21)" fg:x="293" fg:w="5"/><text x="4.5349%" y="111.50"></text></g><g><title>itsi_server.bundle`DYLD-STUB$$realloc (1 samples, 0.01%)</title><rect x="4.3872%" y="53" width="0.0146%" height="15" fill="rgb(208,190,38)" fg:x="300" fg:w="1"/><text x="4.6372%" y="63.50"></text></g><g><title>itsi_server.bundle`__rdl_realloc (1 samples, 0.01%)</title><rect x="4.4019%" y="53" width="0.0146%" height="15" fill="rgb(235,213,38)" fg:x="301" fg:w="1"/><text x="4.6519%" y="63.50"></text></g><g><title>itsi_server.bundle`alloc::raw_vec::finish_grow (2 samples, 0.03%)</title><rect x="4.4165%" y="53" width="0.0292%" height="15" fill="rgb(237,122,38)" fg:x="302" fg:w="2"/><text x="4.6665%" y="63.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_size (2 samples, 0.03%)</title><rect x="4.4165%" y="37" width="0.0292%" height="15" fill="rgb(244,218,35)" fg:x="302" fg:w="2"/><text x="4.6665%" y="47.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (2 samples, 0.03%)</title><rect x="4.4457%" y="53" width="0.0292%" height="15" fill="rgb(240,68,47)" fg:x="304" fg:w="2"/><text x="4.6957%" y="63.50"></text></g><g><title>itsi_server.bundle`&lt;alloc::string::String as core::fmt::Write&gt;::write_str (10 samples, 0.15%)</title><rect x="4.3580%" y="85" width="0.1462%" height="15" fill="rgb(210,16,53)" fg:x="298" fg:w="10"/><text x="4.6080%" y="95.50"></text></g><g><title>itsi_server.bundle`alloc::raw_vec::RawVecInner&lt;A&gt;::reserve::do_reserve_and_handle (9 samples, 0.13%)</title><rect x="4.3726%" y="69" width="0.1316%" height="15" fill="rgb(235,124,12)" fg:x="299" fg:w="9"/><text x="4.6226%" y="79.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (2 samples, 0.03%)</title><rect x="4.4750%" y="53" width="0.0292%" height="15" fill="rgb(224,169,11)" fg:x="306" fg:w="2"/><text x="4.7250%" y="63.50"></text></g><g><title>itsi_server.bundle`core::fmt::Formatter::pad_integral (11 samples, 0.16%)</title><rect x="4.5042%" y="85" width="0.1609%" height="15" fill="rgb(250,166,2)" fg:x="308" fg:w="11"/><text x="4.7542%" y="95.50"></text></g><g><title>itsi_server.bundle`core::fmt::Formatter::pad_integral::write_prefix (1 samples, 0.01%)</title><rect x="4.6651%" y="85" width="0.0146%" height="15" fill="rgb(242,216,29)" fg:x="319" fg:w="1"/><text x="4.9151%" y="95.50"></text></g><g><title>itsi_server.bundle`core::fmt::num::imp::_&lt;impl core::fmt::Display for u8&gt;::fmt (23 samples, 0.34%)</title><rect x="4.3580%" y="101" width="0.3364%" height="15" fill="rgb(230,116,27)" fg:x="298" fg:w="23"/><text x="4.6080%" y="111.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (1 samples, 0.01%)</title><rect x="4.6797%" y="85" width="0.0146%" height="15" fill="rgb(228,99,48)" fg:x="320" fg:w="1"/><text x="4.9297%" y="95.50"></text></g><g><title>itsi_server.bundle`&lt;core::net::ip_addr::Ipv4Addr as core::fmt::Display&gt;::fmt (36 samples, 0.53%)</title><rect x="4.1825%" y="133" width="0.5265%" height="15" fill="rgb(253,11,6)" fg:x="286" fg:w="36"/><text x="4.4325%" y="143.50"></text></g><g><title>itsi_server.bundle`core::fmt::write (31 samples, 0.45%)</title><rect x="4.2556%" y="117" width="0.4533%" height="15" fill="rgb(247,143,39)" fg:x="291" fg:w="31"/><text x="4.5056%" y="127.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (1 samples, 0.01%)</title><rect x="4.6944%" y="101" width="0.0146%" height="15" fill="rgb(236,97,10)" fg:x="321" fg:w="1"/><text x="4.9444%" y="111.50"></text></g><g><title>itsi_server.bundle`&lt;itsi_server::server::listener::SockAddr as core::fmt::Display&gt;::fmt (41 samples, 0.60%)</title><rect x="4.1240%" y="165" width="0.5996%" height="15" fill="rgb(233,208,19)" fg:x="282" fg:w="41"/><text x="4.3740%" y="175.50"></text></g><g><title>itsi_server.bundle`core::fmt::write (39 samples, 0.57%)</title><rect x="4.1533%" y="149" width="0.5703%" height="15" fill="rgb(216,164,2)" fg:x="284" fg:w="39"/><text x="4.4033%" y="159.50"></text></g><g><title>itsi_server.bundle`core::fmt::write (1 samples, 0.01%)</title><rect x="4.7090%" y="133" width="0.0146%" height="15" fill="rgb(220,129,5)" fg:x="322" fg:w="1"/><text x="4.9590%" y="143.50"></text></g><g><title>itsi_server.bundle`&lt;std::time::Instant as core::ops::arith::Add&lt;core::time::Duration&gt;&gt;::add (2 samples, 0.03%)</title><rect x="4.7236%" y="165" width="0.0292%" height="15" fill="rgb(242,17,10)" fg:x="323" fg:w="2"/><text x="4.9736%" y="175.50"></text></g><g><title>itsi_server.bundle`&lt;tokio::net::tcp::stream::TcpStream as tokio::io::async_write::AsyncWrite&gt;::poll_write (1 samples, 0.01%)</title><rect x="4.7529%" y="165" width="0.0146%" height="15" fill="rgb(242,107,0)" fg:x="325" fg:w="1"/><text x="5.0029%" y="175.50"></text></g><g><title>itsi_server.bundle`&lt;tokio::runtime::coop::RestoreOnPending as core::ops::drop::Drop&gt;::drop (1 samples, 0.01%)</title><rect x="4.7675%" y="165" width="0.0146%" height="15" fill="rgb(251,28,31)" fg:x="326" fg:w="1"/><text x="5.0175%" y="175.50"></text></g><g><title>itsi_server.bundle`&lt;u64 as event_listener::notify::IntoNotification&gt;::into_notification (1 samples, 0.01%)</title><rect x="4.7821%" y="165" width="0.0146%" height="15" fill="rgb(233,223,10)" fg:x="327" fg:w="1"/><text x="5.0321%" y="175.50"></text></g><g><title>itsi_server.bundle`DYLD-STUB$$malloc (2 samples, 0.03%)</title><rect x="4.7967%" y="165" width="0.0292%" height="15" fill="rgb(215,21,27)" fg:x="328" fg:w="2"/><text x="5.0467%" y="175.50"></text></g><g><title>itsi_server.bundle`DYLD-STUB$$memcpy (2 samples, 0.03%)</title><rect x="4.8260%" y="165" width="0.0292%" height="15" fill="rgb(232,23,21)" fg:x="330" fg:w="2"/><text x="5.0760%" y="175.50"></text></g><g><title>itsi_server.bundle`&lt;http::version::Version as core::fmt::Debug&gt;::fmt (2 samples, 0.03%)</title><rect x="4.8552%" y="149" width="0.0292%" height="15" fill="rgb(244,5,23)" fg:x="332" fg:w="2"/><text x="5.1052%" y="159.50"></text></g><g><title>itsi_server.bundle`DYLD-STUB$$malloc (1 samples, 0.01%)</title><rect x="4.9137%" y="101" width="0.0146%" height="15" fill="rgb(226,81,46)" fg:x="336" fg:w="1"/><text x="5.1637%" y="111.50"></text></g><g><title>itsi_server.bundle`&lt;alloc::string::String as core::fmt::Write&gt;::write_str (5 samples, 0.07%)</title><rect x="4.8991%" y="133" width="0.0731%" height="15" fill="rgb(247,70,30)" fg:x="335" fg:w="5"/><text x="5.1491%" y="143.50"></text></g><g><title>itsi_server.bundle`alloc::raw_vec::RawVecInner&lt;A&gt;::reserve::do_reserve_and_handle (5 samples, 0.07%)</title><rect x="4.8991%" y="117" width="0.0731%" height="15" fill="rgb(212,68,19)" fg:x="335" fg:w="5"/><text x="5.1491%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (3 samples, 0.04%)</title><rect x="4.9283%" y="101" width="0.0439%" height="15" fill="rgb(240,187,13)" fg:x="337" fg:w="3"/><text x="5.1783%" y="111.50"></text></g><g><title>itsi_server.bundle`core::fmt::Formatter::write_str (2 samples, 0.03%)</title><rect x="4.9722%" y="133" width="0.0292%" height="15" fill="rgb(223,113,26)" fg:x="340" fg:w="2"/><text x="5.2222%" y="143.50"></text></g><g><title>itsi_server.bundle`alloc::fmt::format::format_inner (11 samples, 0.16%)</title><rect x="4.8552%" y="165" width="0.1609%" height="15" fill="rgb(206,192,2)" fg:x="332" fg:w="11"/><text x="5.1052%" y="175.50"></text></g><g><title>itsi_server.bundle`core::fmt::write (9 samples, 0.13%)</title><rect x="4.8845%" y="149" width="0.1316%" height="15" fill="rgb(241,108,4)" fg:x="334" fg:w="9"/><text x="5.1345%" y="159.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (1 samples, 0.01%)</title><rect x="5.0015%" y="133" width="0.0146%" height="15" fill="rgb(247,173,49)" fg:x="342" fg:w="1"/><text x="5.2515%" y="143.50"></text></g><g><title>itsi_server.bundle`bytes::bytes::static_clone (2 samples, 0.03%)</title><rect x="5.0161%" y="165" width="0.0292%" height="15" fill="rgb(224,114,35)" fg:x="343" fg:w="2"/><text x="5.2661%" y="175.50"></text></g><g><title>itsi_server.bundle`bytes::bytes::static_drop (1 samples, 0.01%)</title><rect x="5.0453%" y="165" width="0.0146%" height="15" fill="rgb(245,159,27)" fg:x="345" fg:w="1"/><text x="5.2953%" y="175.50"></text></g><g><title>itsi_server.bundle`concurrent_queue::bounded::Bounded&lt;T&gt;::push_or_else (8 samples, 0.12%)</title><rect x="5.0600%" y="165" width="0.1170%" height="15" fill="rgb(245,172,44)" fg:x="346" fg:w="8"/><text x="5.3100%" y="175.50"></text></g><g><title>itsi_server.bundle`event_listener::sys::Inner&lt;T&gt;::remove (1 samples, 0.01%)</title><rect x="5.2354%" y="149" width="0.0146%" height="15" fill="rgb(236,23,11)" fg:x="358" fg:w="1"/><text x="5.4854%" y="159.50"></text></g><g><title>itsi_server.bundle`event_listener::sys::Inner&lt;T&gt;::remove (6 samples, 0.09%)</title><rect x="5.2793%" y="133" width="0.0877%" height="15" fill="rgb(205,117,38)" fg:x="361" fg:w="6"/><text x="5.5293%" y="143.50"></text></g><g><title>itsi_server.bundle`event_listener::sys::Inner&lt;T&gt;::notify (2 samples, 0.03%)</title><rect x="5.3378%" y="117" width="0.0292%" height="15" fill="rgb(237,72,25)" fg:x="365" fg:w="2"/><text x="5.5878%" y="127.50"></text></g><g><title>itsi_server.bundle`tokio::runtime::context::with_scheduler (1 samples, 0.01%)</title><rect x="5.3524%" y="101" width="0.0146%" height="15" fill="rgb(244,70,9)" fg:x="366" fg:w="1"/><text x="5.6024%" y="111.50"></text></g><g><title>libsystem_kernel.dylib`__psynch_mutexwait (30 samples, 0.44%)</title><rect x="5.3817%" y="101" width="0.4387%" height="15" fill="rgb(217,125,39)" fg:x="368" fg:w="30"/><text x="5.6317%" y="111.50"></text></g><g><title>libsystem_pthread.dylib`_pthread_mutex_firstfit_lock_slow (33 samples, 0.48%)</title><rect x="5.3671%" y="117" width="0.4826%" height="15" fill="rgb(235,36,10)" fg:x="367" fg:w="33"/><text x="5.6171%" y="127.50"></text></g><g><title>libsystem_pthread.dylib`_pthread_mutex_firstfit_lock_wait (2 samples, 0.03%)</title><rect x="5.8204%" y="101" width="0.0292%" height="15" fill="rgb(251,123,47)" fg:x="398" fg:w="2"/><text x="6.0704%" y="111.50"></text></g><g><title>itsi_server.bundle`event_listener::sys::_&lt;impl event_listener::Inner&lt;T&gt;&gt;::with_inner (42 samples, 0.61%)</title><rect x="5.2501%" y="149" width="0.6142%" height="15" fill="rgb(221,13,13)" fg:x="359" fg:w="42"/><text x="5.5001%" y="159.50"></text></g><g><title>itsi_server.bundle`std::sys::pal::unix::sync::mutex::Mutex::lock (34 samples, 0.50%)</title><rect x="5.3671%" y="133" width="0.4972%" height="15" fill="rgb(238,131,9)" fg:x="367" fg:w="34"/><text x="5.6171%" y="143.50"></text></g><g><title>libsystem_pthread.dylib`pthread_mutex_lock (1 samples, 0.01%)</title><rect x="5.8497%" y="117" width="0.0146%" height="15" fill="rgb(211,50,8)" fg:x="400" fg:w="1"/><text x="6.0997%" y="127.50"></text></g><g><title>libsystem_pthread.dylib`_pthread_mutex_firstfit_unlock_slow (7 samples, 0.10%)</title><rect x="5.8643%" y="149" width="0.1024%" height="15" fill="rgb(245,182,24)" fg:x="401" fg:w="7"/><text x="6.1143%" y="159.50"></text></g><g><title>libsystem_kernel.dylib`__psynch_mutexdrop (7 samples, 0.10%)</title><rect x="5.8643%" y="133" width="0.1024%" height="15" fill="rgb(242,14,37)" fg:x="401" fg:w="7"/><text x="6.1143%" y="143.50"></text></g><g><title>itsi_server.bundle`core::ptr::drop_in_place&lt;core::option::Option&lt;event_listener::EventListener&gt;&gt; (55 samples, 0.80%)</title><rect x="5.1770%" y="165" width="0.8043%" height="15" fill="rgb(246,228,12)" fg:x="354" fg:w="55"/><text x="5.4270%" y="175.50"></text></g><g><title>libsystem_pthread.dylib`pthread_mutex_unlock (1 samples, 0.01%)</title><rect x="5.9667%" y="149" width="0.0146%" height="15" fill="rgb(213,55,15)" fg:x="408" fg:w="1"/><text x="6.2167%" y="159.50"></text></g><g><title>itsi_server.bundle`core::ptr::drop_in_place&lt;http_body_util::collected::Collected&lt;bytes::bytes::Bytes&gt;&gt; (1 samples, 0.01%)</title><rect x="5.9813%" y="165" width="0.0146%" height="15" fill="rgb(209,9,3)" fg:x="409" fg:w="1"/><text x="6.2313%" y="175.50"></text></g><g><title>itsi_server.bundle`core::ptr::drop_in_place&lt;http_body_util::combinators::collect::Collect&lt;hyper::body::incoming::Incoming&gt;&gt; (1 samples, 0.01%)</title><rect x="5.9959%" y="165" width="0.0146%" height="15" fill="rgb(230,59,30)" fg:x="410" fg:w="1"/><text x="6.2459%" y="175.50"></text></g><g><title>itsi_server.bundle`core::ptr::drop_in_place&lt;itsi_server::response::itsi_response::ItsiResponse::build::{{closure}}&gt; (1 samples, 0.01%)</title><rect x="6.0105%" y="165" width="0.0146%" height="15" fill="rgb(209,121,21)" fg:x="411" fg:w="1"/><text x="6.2605%" y="175.50"></text></g><g><title>itsi_server.bundle`http::extensions::Extensions::remove (2 samples, 0.03%)</title><rect x="6.0252%" y="165" width="0.0292%" height="15" fill="rgb(220,109,13)" fg:x="412" fg:w="2"/><text x="6.2752%" y="175.50"></text></g><g><title>itsi_server.bundle`http::response::Parts::new (1 samples, 0.01%)</title><rect x="6.0544%" y="165" width="0.0146%" height="15" fill="rgb(232,18,1)" fg:x="414" fg:w="1"/><text x="6.3044%" y="175.50"></text></g><g><title>itsi_server.bundle`http_body_util::collected::Collected&lt;B&gt;::to_bytes (4 samples, 0.06%)</title><rect x="6.0690%" y="165" width="0.0585%" height="15" fill="rgb(215,41,42)" fg:x="415" fg:w="4"/><text x="6.3190%" y="175.50"></text></g><g><title>itsi_server.bundle`&lt;alloc::collections::vec_deque::VecDeque&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.01%)</title><rect x="6.1129%" y="149" width="0.0146%" height="15" fill="rgb(224,123,36)" fg:x="418" fg:w="1"/><text x="6.3629%" y="159.50"></text></g><g><title>libsystem_kernel.dylib`__commpage_gettimeofday_internal (1 samples, 0.01%)</title><rect x="6.1568%" y="101" width="0.0146%" height="15" fill="rgb(240,125,3)" fg:x="421" fg:w="1"/><text x="6.4068%" y="111.50"></text></g><g><title>libsystem_c.dylib`gettimeofday (23 samples, 0.34%)</title><rect x="6.1568%" y="117" width="0.3364%" height="15" fill="rgb(205,98,50)" fg:x="421" fg:w="23"/><text x="6.4068%" y="127.50"></text></g><g><title>libsystem_kernel.dylib`mach_absolute_time (22 samples, 0.32%)</title><rect x="6.1714%" y="101" width="0.3217%" height="15" fill="rgb(205,185,37)" fg:x="422" fg:w="22"/><text x="6.4214%" y="111.50"></text></g><g><title>itsi_server.bundle`std::sys::pal::unix::time::Timespec::now (25 samples, 0.37%)</title><rect x="6.1421%" y="149" width="0.3656%" height="15" fill="rgb(238,207,15)" fg:x="420" fg:w="25"/><text x="6.3921%" y="159.50"></text></g><g><title>libsystem_c.dylib`clock_gettime (25 samples, 0.37%)</title><rect x="6.1421%" y="133" width="0.3656%" height="15" fill="rgb(213,199,42)" fg:x="420" fg:w="25"/><text x="6.3921%" y="143.50"></text></g><g><title>libsystem_kernel.dylib`__commpage_gettimeofday_internal (1 samples, 0.01%)</title><rect x="6.4931%" y="117" width="0.0146%" height="15" fill="rgb(235,201,11)" fg:x="444" fg:w="1"/><text x="6.7431%" y="127.50"></text></g><g><title>itsi_server.bundle`std::time::SystemTime::now (9 samples, 0.13%)</title><rect x="6.5078%" y="149" width="0.1316%" height="15" fill="rgb(207,46,11)" fg:x="445" fg:w="9"/><text x="6.7578%" y="159.50"></text></g><g><title>itsi_server.bundle`hyper::common::date::update (36 samples, 0.53%)</title><rect x="6.1275%" y="165" width="0.5265%" height="15" fill="rgb(241,35,35)" fg:x="419" fg:w="36"/><text x="6.3775%" y="175.50"></text></g><g><title>libsystem_c.dylib`clock_gettime (1 samples, 0.01%)</title><rect x="6.6394%" y="149" width="0.0146%" height="15" fill="rgb(243,32,47)" fg:x="454" fg:w="1"/><text x="6.8894%" y="159.50"></text></g><g><title>itsi_server.bundle`hyper::proto::h1::conn::Conn&lt;I,B,T&gt;::maybe_notify (1 samples, 0.01%)</title><rect x="6.6540%" y="165" width="0.0146%" height="15" fill="rgb(247,202,23)" fg:x="455" fg:w="1"/><text x="6.9040%" y="175.50"></text></g><g><title>itsi_server.bundle`&lt;hyper_util::rt::tokio::TokioTimer as hyper::rt::timer::Timer&gt;::sleep_until (2 samples, 0.03%)</title><rect x="6.8149%" y="149" width="0.0292%" height="15" fill="rgb(219,102,11)" fg:x="466" fg:w="2"/><text x="7.0649%" y="159.50"></text></g><g><title>libdyld.dylib`tlv_get_addr (2 samples, 0.03%)</title><rect x="6.8149%" y="133" width="0.0292%" height="15" fill="rgb(243,110,44)" fg:x="466" fg:w="2"/><text x="7.0649%" y="143.50"></text></g><g><title>itsi_server.bundle`tokio::runtime::time::_&lt;impl tokio::runtime::time::handle::Handle&gt;::reregister (1 samples, 0.01%)</title><rect x="6.8587%" y="133" width="0.0146%" height="15" fill="rgb(222,74,54)" fg:x="469" fg:w="1"/><text x="7.1087%" y="143.50"></text></g><g><title>itsi_server.bundle`tokio::runtime::time::entry::TimerEntry::inner (1 samples, 0.01%)</title><rect x="6.8734%" y="133" width="0.0146%" height="15" fill="rgb(216,99,12)" fg:x="470" fg:w="1"/><text x="7.1234%" y="143.50"></text></g><g><title>itsi_server.bundle`DYLD-STUB$$kevent (1 samples, 0.01%)</title><rect x="6.9026%" y="85" width="0.0146%" height="15" fill="rgb(226,22,26)" fg:x="472" fg:w="1"/><text x="7.1526%" y="95.50"></text></g><g><title>itsi_server.bundle`tokio::runtime::time::_&lt;impl tokio::runtime::time::handle::Handle&gt;::reregister (8 samples, 0.12%)</title><rect x="6.8880%" y="117" width="0.1170%" height="15" fill="rgb(217,163,10)" fg:x="471" fg:w="8"/><text x="7.1380%" y="127.50"></text></g><g><title>itsi_server.bundle`tokio::runtime::driver::Handle::unpark (7 samples, 0.10%)</title><rect x="6.9026%" y="101" width="0.1024%" height="15" fill="rgb(213,25,53)" fg:x="472" fg:w="7"/><text x="7.1526%" y="111.50"></text></g><g><title>libsystem_kernel.dylib`kevent (6 samples, 0.09%)</title><rect x="6.9172%" y="85" width="0.0877%" height="15" fill="rgb(252,105,26)" fg:x="473" fg:w="6"/><text x="7.1672%" y="95.50"></text></g><g><title>itsi_server.bundle`std::time::Instant::duration_since (2 samples, 0.03%)</title><rect x="7.0196%" y="101" width="0.0292%" height="15" fill="rgb(220,39,43)" fg:x="480" fg:w="2"/><text x="7.2696%" y="111.50"></text></g><g><title>itsi_server.bundle`std::sys::pal::unix::time::Timespec::sub_timespec (2 samples, 0.03%)</title><rect x="7.0196%" y="85" width="0.0292%" height="15" fill="rgb(229,68,48)" fg:x="480" fg:w="2"/><text x="7.2696%" y="95.50"></text></g><g><title>itsi_server.bundle`tokio::runtime::time::entry::TimerEntry::reset (4 samples, 0.06%)</title><rect x="7.0050%" y="117" width="0.0585%" height="15" fill="rgb(252,8,32)" fg:x="479" fg:w="4"/><text x="7.2550%" y="127.50"></text></g><g><title>itsi_server.bundle`tokio::runtime::time::entry::TimerEntry::inner (1 samples, 0.01%)</title><rect x="7.0488%" y="101" width="0.0146%" height="15" fill="rgb(223,20,43)" fg:x="482" fg:w="1"/><text x="7.2988%" y="111.50"></text></g><g><title>libdyld.dylib`tlv_get_addr (1 samples, 0.01%)</title><rect x="7.0488%" y="85" width="0.0146%" height="15" fill="rgb(229,81,49)" fg:x="482" fg:w="1"/><text x="7.2988%" y="95.50"></text></g><g><title>itsi_server.bundle`tokio::runtime::time::wheel::Wheel::insert (1 samples, 0.01%)</title><rect x="7.0635%" y="117" width="0.0146%" height="15" fill="rgb(236,28,36)" fg:x="483" fg:w="1"/><text x="7.3135%" y="127.50"></text></g><g><title>itsi_server.bundle`tokio::runtime::time::entry::TimerEntry::poll_elapsed (15 samples, 0.22%)</title><rect x="6.8880%" y="133" width="0.2194%" height="15" fill="rgb(249,185,26)" fg:x="471" fg:w="15"/><text x="7.1380%" y="143.50"></text></g><g><title>itsi_server.bundle`tokio::sync::task::atomic_waker::AtomicWaker::register_by_ref (2 samples, 0.03%)</title><rect x="7.0781%" y="117" width="0.0292%" height="15" fill="rgb(249,174,33)" fg:x="484" fg:w="2"/><text x="7.3281%" y="127.50"></text></g><g><title>itsi_server.bundle`tokio::runtime::time::entry::TimerEntry::reset (1 samples, 0.01%)</title><rect x="7.1073%" y="133" width="0.0146%" height="15" fill="rgb(233,201,37)" fg:x="486" fg:w="1"/><text x="7.3573%" y="143.50"></text></g><g><title>itsi_server.bundle`&lt;tokio::time::sleep::Sleep as core::future::future::Future&gt;::poll (20 samples, 0.29%)</title><rect x="6.8441%" y="149" width="0.2925%" height="15" fill="rgb(221,78,26)" fg:x="468" fg:w="20"/><text x="7.0941%" y="159.50"></text></g><g><title>itsi_server.bundle`tokio::sync::task::atomic_waker::AtomicWaker::register_by_ref (1 samples, 0.01%)</title><rect x="7.1220%" y="133" width="0.0146%" height="15" fill="rgb(250,127,30)" fg:x="487" fg:w="1"/><text x="7.3720%" y="143.50"></text></g><g><title>itsi_server.bundle`DYLD-STUB$$clock_gettime (1 samples, 0.01%)</title><rect x="7.1366%" y="149" width="0.0146%" height="15" fill="rgb(230,49,44)" fg:x="488" fg:w="1"/><text x="7.3866%" y="159.50"></text></g><g><title>itsi_server.bundle`DYLD-STUB$$malloc (1 samples, 0.01%)</title><rect x="7.1512%" y="149" width="0.0146%" height="15" fill="rgb(229,67,23)" fg:x="489" fg:w="1"/><text x="7.4012%" y="159.50"></text></g><g><title>itsi_server.bundle`&lt;tokio::runtime::time::entry::TimerEntry as core::ops::drop::Drop&gt;::drop (1 samples, 0.01%)</title><rect x="7.1951%" y="133" width="0.0146%" height="15" fill="rgb(249,83,47)" fg:x="492" fg:w="1"/><text x="7.4451%" y="143.50"></text></g><g><title>itsi_server.bundle`tokio::runtime::time::entry::TimerEntry::inner (1 samples, 0.01%)</title><rect x="7.1951%" y="117" width="0.0146%" height="15" fill="rgb(215,43,3)" fg:x="492" fg:w="1"/><text x="7.4451%" y="127.50"></text></g><g><title>itsi_server.bundle`tokio::runtime::task::waker::drop_waker (2 samples, 0.03%)</title><rect x="7.2097%" y="133" width="0.0292%" height="15" fill="rgb(238,154,13)" fg:x="493" fg:w="2"/><text x="7.4597%" y="143.50"></text></g><g><title>itsi_server.bundle`core::ptr::drop_in_place&lt;hyper_util::rt::tokio::TokioSleep&gt; (7 samples, 0.10%)</title><rect x="7.1658%" y="149" width="0.1024%" height="15" fill="rgb(219,56,2)" fg:x="490" fg:w="7"/><text x="7.4158%" y="159.50"></text></g><g><title>itsi_server.bundle`tokio::runtime::time::_&lt;impl tokio::runtime::time::handle::Handle&gt;::clear_entry (2 samples, 0.03%)</title><rect x="7.2390%" y="133" width="0.0292%" height="15" fill="rgb(233,0,4)" fg:x="495" fg:w="2"/><text x="7.4890%" y="143.50"></text></g><g><title>itsi_server.bundle`tokio::runtime::time::wheel::Wheel::remove (1 samples, 0.01%)</title><rect x="7.2536%" y="117" width="0.0146%" height="15" fill="rgb(235,30,7)" fg:x="496" fg:w="1"/><text x="7.5036%" y="127.50"></text></g><g><title>itsi_server.bundle`http::header::map::HeaderMap&lt;T&gt;::get (2 samples, 0.03%)</title><rect x="7.2682%" y="149" width="0.0292%" height="15" fill="rgb(250,79,13)" fg:x="497" fg:w="2"/><text x="7.5182%" y="159.50"></text></g><g><title>itsi_server.bundle`bytes::bytes_mut::BytesMut::advance_unchecked (1 samples, 0.01%)</title><rect x="7.7069%" y="117" width="0.0146%" height="15" fill="rgb(211,146,34)" fg:x="527" fg:w="1"/><text x="7.9569%" y="127.50"></text></g><g><title>itsi_server.bundle`bytes::bytes_mut::BytesMut::split_to (2 samples, 0.03%)</title><rect x="7.7216%" y="117" width="0.0292%" height="15" fill="rgb(228,22,38)" fg:x="528" fg:w="2"/><text x="7.9716%" y="127.50"></text></g><g><title>itsi_server.bundle`bytes::bytes_mut::BytesMut::advance_unchecked (2 samples, 0.03%)</title><rect x="7.7216%" y="101" width="0.0292%" height="15" fill="rgb(235,168,5)" fg:x="528" fg:w="2"/><text x="7.9716%" y="111.50"></text></g><g><title>itsi_server.bundle`bytes::bytes_mut::shared_v_clone (1 samples, 0.01%)</title><rect x="7.7508%" y="117" width="0.0146%" height="15" fill="rgb(221,155,16)" fg:x="530" fg:w="1"/><text x="8.0008%" y="127.50"></text></g><g><title>itsi_server.bundle`bytes::bytes_mut::shared_v_drop (1 samples, 0.01%)</title><rect x="7.7654%" y="117" width="0.0146%" height="15" fill="rgb(215,215,53)" fg:x="531" fg:w="1"/><text x="8.0154%" y="127.50"></text></g><g><title>itsi_server.bundle`http::header::map::HeaderMap&lt;T&gt;::try_append2 (1 samples, 0.01%)</title><rect x="7.7801%" y="117" width="0.0146%" height="15" fill="rgb(223,4,10)" fg:x="532" fg:w="1"/><text x="8.0301%" y="127.50"></text></g><g><title>itsi_server.bundle`http::header::map::HeaderMap&lt;T&gt;::try_insert_entry (1 samples, 0.01%)</title><rect x="7.7801%" y="101" width="0.0146%" height="15" fill="rgb(234,103,6)" fg:x="532" fg:w="1"/><text x="8.0301%" y="111.50"></text></g><g><title>itsi_server.bundle`http::header::map::HeaderMap&lt;T&gt;::try_insert_entry (1 samples, 0.01%)</title><rect x="7.7947%" y="117" width="0.0146%" height="15" fill="rgb(227,97,0)" fg:x="533" fg:w="1"/><text x="8.0447%" y="127.50"></text></g><g><title>itsi_server.bundle`http::header::map::HeaderMap&lt;T&gt;::try_reserve (9 samples, 0.13%)</title><rect x="7.8093%" y="117" width="0.1316%" height="15" fill="rgb(234,150,53)" fg:x="534" fg:w="9"/><text x="8.0593%" y="127.50"></text></g><g><title>itsi_server.bundle`http::header::map::HeaderMap&lt;T&gt;::try_reserve_one (1 samples, 0.01%)</title><rect x="7.9409%" y="117" width="0.0146%" height="15" fill="rgb(228,201,54)" fg:x="543" fg:w="1"/><text x="8.1909%" y="127.50"></text></g><g><title>itsi_server.bundle`http::header::name::HeaderName::from_bytes (1 samples, 0.01%)</title><rect x="7.9555%" y="117" width="0.0146%" height="15" fill="rgb(222,22,37)" fg:x="544" fg:w="1"/><text x="8.2055%" y="127.50"></text></g><g><title>itsi_server.bundle`http::header::name::StandardHeader::from_bytes (1 samples, 0.01%)</title><rect x="7.9702%" y="117" width="0.0146%" height="15" fill="rgb(237,53,32)" fg:x="545" fg:w="1"/><text x="8.2202%" y="127.50"></text></g><g><title>itsi_server.bundle`http::method::Method::from_bytes (5 samples, 0.07%)</title><rect x="7.9848%" y="117" width="0.0731%" height="15" fill="rgb(233,25,53)" fg:x="546" fg:w="5"/><text x="8.2348%" y="127.50"></text></g><g><title>itsi_server.bundle`http::uri::Uri::from_shared (3 samples, 0.04%)</title><rect x="8.0579%" y="117" width="0.0439%" height="15" fill="rgb(210,40,34)" fg:x="551" fg:w="3"/><text x="8.3079%" y="127.50"></text></g><g><title>itsi_server.bundle`core::str::converts::from_utf8 (1 samples, 0.01%)</title><rect x="8.1457%" y="85" width="0.0146%" height="15" fill="rgb(241,220,44)" fg:x="557" fg:w="1"/><text x="8.3957%" y="95.50"></text></g><g><title>itsi_server.bundle`httparse::Request::parse_with_config_and_uninit_headers (11 samples, 0.16%)</title><rect x="8.1018%" y="101" width="0.1609%" height="15" fill="rgb(235,28,35)" fg:x="554" fg:w="11"/><text x="8.3518%" y="111.50"></text></g><g><title>itsi_server.bundle`httparse::parse_headers_iter_uninit (7 samples, 0.10%)</title><rect x="8.1603%" y="85" width="0.1024%" height="15" fill="rgb(210,56,17)" fg:x="558" fg:w="7"/><text x="8.4103%" y="95.50"></text></g><g><title>itsi_server.bundle`httparse::Request::parse_with_uninit_headers (12 samples, 0.18%)</title><rect x="8.1018%" y="117" width="0.1755%" height="15" fill="rgb(224,130,29)" fg:x="554" fg:w="12"/><text x="8.3518%" y="127.50"></text></g><g><title>itsi_server.bundle`httparse::parse_version (1 samples, 0.01%)</title><rect x="8.2626%" y="101" width="0.0146%" height="15" fill="rgb(235,212,8)" fg:x="565" fg:w="1"/><text x="8.5126%" y="111.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (1 samples, 0.01%)</title><rect x="8.2773%" y="117" width="0.0146%" height="15" fill="rgb(223,33,50)" fg:x="566" fg:w="1"/><text x="8.5273%" y="127.50"></text></g><g><title>itsi_server.bundle`&lt;hyper::proto::h1::role::Server as hyper::proto::h1::Http1Transaction&gt;::parse (57 samples, 0.83%)</title><rect x="7.4729%" y="133" width="0.8336%" height="15" fill="rgb(219,149,13)" fg:x="511" fg:w="57"/><text x="7.7229%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (1 samples, 0.01%)</title><rect x="8.2919%" y="117" width="0.0146%" height="15" fill="rgb(250,156,29)" fg:x="567" fg:w="1"/><text x="8.5419%" y="127.50"></text></g><g><title>itsi_server.bundle`bytes::bytes::Bytes::slice (1 samples, 0.01%)</title><rect x="8.3065%" y="133" width="0.0146%" height="15" fill="rgb(216,193,19)" fg:x="568" fg:w="1"/><text x="8.5565%" y="143.50"></text></g><g><title>itsi_server.bundle`bytes::bytes_mut::shared_v_drop (1 samples, 0.01%)</title><rect x="8.3211%" y="133" width="0.0146%" height="15" fill="rgb(216,135,14)" fg:x="569" fg:w="1"/><text x="8.5711%" y="143.50"></text></g><g><title>itsi_server.bundle`http::header::name::HeaderName::from_bytes (2 samples, 0.03%)</title><rect x="8.3358%" y="133" width="0.0292%" height="15" fill="rgb(241,47,5)" fg:x="570" fg:w="2"/><text x="8.5858%" y="143.50"></text></g><g><title>itsi_server.bundle`http::method::Method::from_bytes (2 samples, 0.03%)</title><rect x="8.3650%" y="133" width="0.0292%" height="15" fill="rgb(233,42,35)" fg:x="572" fg:w="2"/><text x="8.6150%" y="143.50"></text></g><g><title>itsi_server.bundle`httparse::Request::parse_with_uninit_headers (1 samples, 0.01%)</title><rect x="8.3943%" y="133" width="0.0146%" height="15" fill="rgb(231,13,6)" fg:x="574" fg:w="1"/><text x="8.6443%" y="143.50"></text></g><g><title>libsystem_c.dylib`recv (1 samples, 0.01%)</title><rect x="8.4674%" y="53" width="0.0146%" height="15" fill="rgb(207,181,40)" fg:x="579" fg:w="1"/><text x="8.7174%" y="63.50"></text></g><g><title>itsi_server.bundle`&lt;&amp;mio::net::tcp::stream::TcpStream as std::io::Read&gt;::read (704 samples, 10.30%)</title><rect x="8.4674%" y="69" width="10.2954%" height="15" fill="rgb(254,173,49)" fg:x="579" fg:w="704"/><text x="8.7174%" y="79.50">itsi_server.bun..</text></g><g><title>libsystem_kernel.dylib`__recvfrom (703 samples, 10.28%)</title><rect x="8.4820%" y="53" width="10.2808%" height="15" fill="rgb(221,1,38)" fg:x="580" fg:w="703"/><text x="8.7320%" y="63.50">libsystem_kerne..</text></g><g><title>itsi_server.bundle`tokio::runtime::io::registration::Registration::poll_ready (15 samples, 0.22%)</title><rect x="18.7628%" y="69" width="0.2194%" height="15" fill="rgb(206,124,46)" fg:x="1283" fg:w="15"/><text x="19.0128%" y="79.50"></text></g><g><title>itsi_server.bundle`tokio::runtime::io::scheduled_io::ScheduledIo::poll_readiness (7 samples, 0.10%)</title><rect x="18.8798%" y="53" width="0.1024%" height="15" fill="rgb(249,21,11)" fg:x="1291" fg:w="7"/><text x="19.1298%" y="63.50"></text></g><g><title>itsi_server.bundle`tokio::runtime::io::scheduled_io::ScheduledIo::poll_readiness (2 samples, 0.03%)</title><rect x="18.9822%" y="69" width="0.0292%" height="15" fill="rgb(222,201,40)" fg:x="1298" fg:w="2"/><text x="19.2322%" y="79.50"></text></g><g><title>itsi_server.bundle`tokio::io::poll_evented::PollEvented&lt;E&gt;::poll_read (728 samples, 10.65%)</title><rect x="8.4381%" y="85" width="10.6464%" height="15" fill="rgb(235,61,29)" fg:x="577" fg:w="728"/><text x="8.6881%" y="95.50">itsi_server.bund..</text></g><g><title>libdyld.dylib`tlv_get_addr (5 samples, 0.07%)</title><rect x="19.0114%" y="69" width="0.0731%" height="15" fill="rgb(219,207,3)" fg:x="1300" fg:w="5"/><text x="19.2614%" y="79.50"></text></g><g><title>itsi_server.bundle`&lt;hyper_util::common::rewind::Rewind&lt;T&gt; as hyper::rt::io::Read&gt;::poll_read (731 samples, 10.69%)</title><rect x="8.4235%" y="117" width="10.6903%" height="15" fill="rgb(222,56,46)" fg:x="576" fg:w="731"/><text x="8.6735%" y="127.50">itsi_server.bund..</text></g><g><title>itsi_server.bundle`&lt;hyper_util::rt::tokio::TokioIo&lt;T&gt; as hyper::rt::io::Read&gt;::poll_read (730 samples, 10.68%)</title><rect x="8.4381%" y="101" width="10.6756%" height="15" fill="rgb(239,76,54)" fg:x="577" fg:w="730"/><text x="8.6881%" y="111.50">itsi_server.bund..</text></g><g><title>itsi_server.bundle`tokio::runtime::io::registration::Registration::poll_ready (2 samples, 0.03%)</title><rect x="19.0845%" y="85" width="0.0292%" height="15" fill="rgb(231,124,27)" fg:x="1305" fg:w="2"/><text x="19.3345%" y="95.50"></text></g><g><title>itsi_server.bundle`hyper::proto::h1::io::Buffered&lt;T,B&gt;::poll_read_from_io (733 samples, 10.72%)</title><rect x="8.4089%" y="133" width="10.7195%" height="15" fill="rgb(249,195,6)" fg:x="575" fg:w="733"/><text x="8.6589%" y="143.50">itsi_server.bund..</text></g><g><title>itsi_server.bundle`&lt;hyper_util::rt::tokio::TokioIo&lt;T&gt; as hyper::rt::io::Read&gt;::poll_read (1 samples, 0.01%)</title><rect x="19.1138%" y="117" width="0.0146%" height="15" fill="rgb(237,174,47)" fg:x="1307" fg:w="1"/><text x="19.3638%" y="127.50"></text></g><g><title>itsi_server.bundle`hyper::proto::h1::io::Buffered&lt;T,B&gt;::parse (811 samples, 11.86%)</title><rect x="7.2975%" y="149" width="11.8602%" height="15" fill="rgb(206,201,31)" fg:x="499" fg:w="811"/><text x="7.5475%" y="159.50">itsi_server.bundle..</text></g><g><title>itsi_server.bundle`hyper::proto::h1::io::ReadStrategy::record (2 samples, 0.03%)</title><rect x="19.1284%" y="133" width="0.0292%" height="15" fill="rgb(231,57,52)" fg:x="1308" fg:w="2"/><text x="19.3784%" y="143.50"></text></g><g><title>itsi_server.bundle`hyper::proto::h1::io::Buffered&lt;T,B&gt;::poll_read_from_io (1 samples, 0.01%)</title><rect x="19.1576%" y="149" width="0.0146%" height="15" fill="rgb(248,177,22)" fg:x="1310" fg:w="1"/><text x="19.4076%" y="159.50"></text></g><g><title>libsystem_c.dylib`clock_gettime_nsec_np (1 samples, 0.01%)</title><rect x="19.1723%" y="117" width="0.0146%" height="15" fill="rgb(215,211,37)" fg:x="1311" fg:w="1"/><text x="19.4223%" y="127.50"></text></g><g><title>libsystem_kernel.dylib`mach_timebase_info (1 samples, 0.01%)</title><rect x="19.1723%" y="101" width="0.0146%" height="15" fill="rgb(241,128,51)" fg:x="1311" fg:w="1"/><text x="19.4223%" y="111.50"></text></g><g><title>libsystem_kernel.dylib`mach_absolute_time (6 samples, 0.09%)</title><rect x="19.1869%" y="117" width="0.0877%" height="15" fill="rgb(227,165,31)" fg:x="1312" fg:w="6"/><text x="19.4369%" y="127.50"></text></g><g><title>itsi_server.bundle`std::sys::pal::unix::time::Timespec::now (8 samples, 0.12%)</title><rect x="19.1723%" y="149" width="0.1170%" height="15" fill="rgb(228,167,24)" fg:x="1311" fg:w="8"/><text x="19.4223%" y="159.50"></text></g><g><title>libsystem_c.dylib`clock_gettime (8 samples, 0.12%)</title><rect x="19.1723%" y="133" width="0.1170%" height="15" fill="rgb(228,143,12)" fg:x="1311" fg:w="8"/><text x="19.4223%" y="143.50"></text></g><g><title>libsystem_kernel.dylib`mach_timebase_info (1 samples, 0.01%)</title><rect x="19.2746%" y="117" width="0.0146%" height="15" fill="rgb(249,149,8)" fg:x="1318" fg:w="1"/><text x="19.5246%" y="127.50"></text></g><g><title>libdyld.dylib`tlv_get_addr (3 samples, 0.04%)</title><rect x="19.2893%" y="149" width="0.0439%" height="15" fill="rgb(243,35,44)" fg:x="1319" fg:w="3"/><text x="19.5393%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`DYLD-STUB$$_platform_bzero (1 samples, 0.01%)</title><rect x="19.3331%" y="149" width="0.0146%" height="15" fill="rgb(246,89,9)" fg:x="1322" fg:w="1"/><text x="19.5831%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (2 samples, 0.03%)</title><rect x="19.3478%" y="149" width="0.0292%" height="15" fill="rgb(233,213,13)" fg:x="1323" fg:w="2"/><text x="19.5978%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (6 samples, 0.09%)</title><rect x="19.3770%" y="149" width="0.0877%" height="15" fill="rgb(233,141,41)" fg:x="1325" fg:w="6"/><text x="19.6270%" y="159.50"></text></g><g><title>itsi_server.bundle`hyper::proto::h1::conn::Conn&lt;I,B,T&gt;::poll_read_head (876 samples, 12.81%)</title><rect x="6.6686%" y="165" width="12.8108%" height="15" fill="rgb(239,167,4)" fg:x="456" fg:w="876"/><text x="6.9186%" y="175.50">itsi_server.bundle`..</text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (1 samples, 0.01%)</title><rect x="19.4648%" y="149" width="0.0146%" height="15" fill="rgb(209,217,16)" fg:x="1331" fg:w="1"/><text x="19.7148%" y="159.50"></text></g><g><title>itsi_server.bundle`&lt;hyper_util::common::rewind::Rewind&lt;T&gt; as hyper::rt::io::Read&gt;::poll_read (1 samples, 0.01%)</title><rect x="19.4794%" y="149" width="0.0146%" height="15" fill="rgb(219,88,35)" fg:x="1332" fg:w="1"/><text x="19.7294%" y="159.50"></text></g><g><title>itsi_server.bundle`&lt;core::pin::Pin&lt;P&gt; as tokio::io::async_read::AsyncRead&gt;::poll_read (2 samples, 0.03%)</title><rect x="19.5379%" y="101" width="0.0292%" height="15" fill="rgb(220,193,23)" fg:x="1336" fg:w="2"/><text x="19.7879%" y="111.50"></text></g><g><title>itsi_server.bundle`tokio::runtime::io::registration::Registration::poll_ready (3 samples, 0.04%)</title><rect x="19.6841%" y="85" width="0.0439%" height="15" fill="rgb(230,90,52)" fg:x="1346" fg:w="3"/><text x="19.9341%" y="95.50"></text></g><g><title>itsi_server.bundle`tokio::runtime::io::scheduled_io::ScheduledIo::poll_readiness (2 samples, 0.03%)</title><rect x="19.6987%" y="69" width="0.0292%" height="15" fill="rgb(252,106,19)" fg:x="1347" fg:w="2"/><text x="19.9487%" y="79.50"></text></g><g><title>itsi_server.bundle`tokio::io::poll_evented::PollEvented&lt;E&gt;::poll_read (20 samples, 0.29%)</title><rect x="19.5671%" y="101" width="0.2925%" height="15" fill="rgb(206,74,20)" fg:x="1338" fg:w="20"/><text x="19.8171%" y="111.50"></text></g><g><title>libdyld.dylib`tlv_get_addr (9 samples, 0.13%)</title><rect x="19.7280%" y="85" width="0.1316%" height="15" fill="rgb(230,138,44)" fg:x="1349" fg:w="9"/><text x="19.9780%" y="95.50"></text></g><g><title>itsi_server.bundle`&lt;hyper_util::common::rewind::Rewind&lt;T&gt; as hyper::rt::io::Read&gt;::poll_read (25 samples, 0.37%)</title><rect x="19.5086%" y="133" width="0.3656%" height="15" fill="rgb(235,182,43)" fg:x="1334" fg:w="25"/><text x="19.7586%" y="143.50"></text></g><g><title>itsi_server.bundle`&lt;hyper_util::rt::tokio::TokioIo&lt;T&gt; as hyper::rt::io::Read&gt;::poll_read (25 samples, 0.37%)</title><rect x="19.5086%" y="117" width="0.3656%" height="15" fill="rgb(242,16,51)" fg:x="1334" fg:w="25"/><text x="19.7586%" y="127.50"></text></g><g><title>itsi_server.bundle`tokio::runtime::io::registration::Registration::poll_ready (1 samples, 0.01%)</title><rect x="19.8596%" y="101" width="0.0146%" height="15" fill="rgb(248,9,4)" fg:x="1358" fg:w="1"/><text x="20.1096%" y="111.50"></text></g><g><title>itsi_server.bundle`&lt;hyper_util::rt::tokio::TokioIo&lt;T&gt; as hyper::rt::io::Read&gt;::poll_read (1 samples, 0.01%)</title><rect x="19.8742%" y="133" width="0.0146%" height="15" fill="rgb(210,31,22)" fg:x="1359" fg:w="1"/><text x="20.1242%" y="143.50"></text></g><g><title>itsi_server.bundle`bytes::bytes_mut::BytesMut::reserve_inner (12 samples, 0.18%)</title><rect x="19.8889%" y="133" width="0.1755%" height="15" fill="rgb(239,54,39)" fg:x="1360" fg:w="12"/><text x="20.1389%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (9 samples, 0.13%)</title><rect x="19.9327%" y="117" width="0.1316%" height="15" fill="rgb(230,99,41)" fg:x="1363" fg:w="9"/><text x="20.1827%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`small_malloc_should_clear (9 samples, 0.13%)</title><rect x="19.9327%" y="101" width="0.1316%" height="15" fill="rgb(253,106,12)" fg:x="1363" fg:w="9"/><text x="20.1827%" y="111.50"></text></g><g><title>libsystem_malloc.dylib`small_malloc_from_free_list (7 samples, 0.10%)</title><rect x="19.9620%" y="85" width="0.1024%" height="15" fill="rgb(213,46,41)" fg:x="1365" fg:w="7"/><text x="20.2120%" y="95.50"></text></g><g><title>libsystem_malloc.dylib`small_free_list_add_ptr (4 samples, 0.06%)</title><rect x="20.0058%" y="69" width="0.0585%" height="15" fill="rgb(215,133,35)" fg:x="1368" fg:w="4"/><text x="20.2558%" y="79.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (3 samples, 0.04%)</title><rect x="20.0643%" y="133" width="0.0439%" height="15" fill="rgb(213,28,5)" fg:x="1372" fg:w="3"/><text x="20.3143%" y="143.50"></text></g><g><title>itsi_server.bundle`hyper::proto::h1::conn::Conn&lt;I,B,T&gt;::poll_read_keep_alive (45 samples, 0.66%)</title><rect x="19.4794%" y="165" width="0.6581%" height="15" fill="rgb(215,77,49)" fg:x="1332" fg:w="45"/><text x="19.7294%" y="175.50"></text></g><g><title>itsi_server.bundle`hyper::proto::h1::io::Buffered&lt;T,B&gt;::poll_read_from_io (44 samples, 0.64%)</title><rect x="19.4940%" y="149" width="0.6435%" height="15" fill="rgb(248,100,22)" fg:x="1333" fg:w="44"/><text x="19.7440%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (2 samples, 0.03%)</title><rect x="20.1082%" y="133" width="0.0292%" height="15" fill="rgb(208,67,9)" fg:x="1375" fg:w="2"/><text x="20.3582%" y="143.50"></text></g><g><title>itsi_server.bundle`hyper::proto::h1::conn::Conn&lt;I,B,T&gt;::write_body (1 samples, 0.01%)</title><rect x="20.1375%" y="165" width="0.0146%" height="15" fill="rgb(219,133,21)" fg:x="1377" fg:w="1"/><text x="20.3875%" y="175.50"></text></g><g><title>itsi_server.bundle`hyper::proto::h1::encode::ChunkSize::new (1 samples, 0.01%)</title><rect x="20.1375%" y="149" width="0.0146%" height="15" fill="rgb(246,46,29)" fg:x="1377" fg:w="1"/><text x="20.3875%" y="159.50"></text></g><g><title>itsi_server.bundle`core::fmt::write (1 samples, 0.01%)</title><rect x="20.1375%" y="133" width="0.0146%" height="15" fill="rgb(246,185,52)" fg:x="1377" fg:w="1"/><text x="20.3875%" y="143.50"></text></g><g><title>itsi_server.bundle`core::fmt::num::_&lt;impl core::fmt::UpperHex for isize&gt;::fmt (1 samples, 0.01%)</title><rect x="20.1375%" y="117" width="0.0146%" height="15" fill="rgb(252,136,11)" fg:x="1377" fg:w="1"/><text x="20.3875%" y="127.50"></text></g><g><title>itsi_server.bundle`&lt;hyper::proto::h1::encode::ChunkSize as core::fmt::Write&gt;::write_str (1 samples, 0.01%)</title><rect x="20.1375%" y="101" width="0.0146%" height="15" fill="rgb(219,138,53)" fg:x="1377" fg:w="1"/><text x="20.3875%" y="111.50"></text></g><g><title>itsi_server.bundle`bytes::bytes::promotable_even_drop (1 samples, 0.01%)</title><rect x="20.1521%" y="133" width="0.0146%" height="15" fill="rgb(211,51,23)" fg:x="1378" fg:w="1"/><text x="20.4021%" y="143.50"></text></g><g><title>itsi_server.bundle`hyper::proto::h1::io::WriteBuf&lt;B&gt;::buffer (1 samples, 0.01%)</title><rect x="20.1667%" y="133" width="0.0146%" height="15" fill="rgb(247,221,28)" fg:x="1379" fg:w="1"/><text x="20.4167%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (9 samples, 0.13%)</title><rect x="20.1813%" y="133" width="0.1316%" height="15" fill="rgb(251,222,45)" fg:x="1380" fg:w="9"/><text x="20.4313%" y="143.50"></text></g><g><title>itsi_server.bundle`hyper::proto::h1::encode::Encoder::encode_and_end (13 samples, 0.19%)</title><rect x="20.1521%" y="149" width="0.1901%" height="15" fill="rgb(217,162,53)" fg:x="1378" fg:w="13"/><text x="20.4021%" y="159.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (2 samples, 0.03%)</title><rect x="20.3130%" y="133" width="0.0292%" height="15" fill="rgb(229,93,14)" fg:x="1389" fg:w="2"/><text x="20.5630%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`_free (2 samples, 0.03%)</title><rect x="20.3422%" y="149" width="0.0292%" height="15" fill="rgb(209,67,49)" fg:x="1391" fg:w="2"/><text x="20.5922%" y="159.50"></text></g><g><title>itsi_server.bundle`hyper::proto::h1::conn::Conn&lt;I,B,T&gt;::write_body_and_end (16 samples, 0.23%)</title><rect x="20.1521%" y="165" width="0.2340%" height="15" fill="rgb(213,87,29)" fg:x="1378" fg:w="16"/><text x="20.4021%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (1 samples, 0.01%)</title><rect x="20.3715%" y="149" width="0.0146%" height="15" fill="rgb(205,151,52)" fg:x="1393" fg:w="1"/><text x="20.6215%" y="159.50"></text></g><g><title>itsi_server.bundle`bytes::bytes::promotable_even_drop (1 samples, 0.01%)</title><rect x="21.2489%" y="133" width="0.0146%" height="15" fill="rgb(253,215,39)" fg:x="1453" fg:w="1"/><text x="21.4989%" y="143.50"></text></g><g><title>libdyld.dylib`tlv_get_addr (3 samples, 0.04%)</title><rect x="21.2635%" y="133" width="0.0439%" height="15" fill="rgb(221,220,41)" fg:x="1454" fg:w="3"/><text x="21.5135%" y="143.50"></text></g><g><title>itsi_server.bundle`&lt;hyper::proto::h1::role::Server as hyper::proto::h1::Http1Transaction&gt;::encode (70 samples, 1.02%)</title><rect x="20.4300%" y="149" width="1.0237%" height="15" fill="rgb(218,133,21)" fg:x="1397" fg:w="70"/><text x="20.6800%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (10 samples, 0.15%)</title><rect x="21.3074%" y="133" width="0.1462%" height="15" fill="rgb(221,193,43)" fg:x="1457" fg:w="10"/><text x="21.5574%" y="143.50"></text></g><g><title>itsi_server.bundle`bytes::bytes::promotable_even_drop (2 samples, 0.03%)</title><rect x="21.4536%" y="149" width="0.0292%" height="15" fill="rgb(240,128,52)" fg:x="1467" fg:w="2"/><text x="21.7036%" y="159.50"></text></g><g><title>itsi_server.bundle`http::header::name::StandardHeader::as_str (1 samples, 0.01%)</title><rect x="21.4829%" y="149" width="0.0146%" height="15" fill="rgb(253,114,12)" fg:x="1469" fg:w="1"/><text x="21.7329%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`_free (1 samples, 0.01%)</title><rect x="21.4975%" y="149" width="0.0146%" height="15" fill="rgb(215,223,47)" fg:x="1470" fg:w="1"/><text x="21.7475%" y="159.50"></text></g><g><title>itsi_server.bundle`hyper::proto::h1::conn::Conn&lt;I,B,T&gt;::write_head (78 samples, 1.14%)</title><rect x="20.3861%" y="165" width="1.1407%" height="15" fill="rgb(248,225,23)" fg:x="1394" fg:w="78"/><text x="20.6361%" y="175.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (1 samples, 0.01%)</title><rect x="21.5121%" y="149" width="0.0146%" height="15" fill="rgb(250,108,0)" fg:x="1471" fg:w="1"/><text x="21.7621%" y="159.50"></text></g><g><title>itsi_server.bundle`hyper::proto::h1::io::Buffered&lt;T,B&gt;::parse (2 samples, 0.03%)</title><rect x="21.5268%" y="165" width="0.0292%" height="15" fill="rgb(228,208,7)" fg:x="1472" fg:w="2"/><text x="21.7768%" y="175.50"></text></g><g><title>itsi_server.bundle`&lt;&amp;std::net::tcp::TcpStream as std::io::Write&gt;::write (2 samples, 0.03%)</title><rect x="21.7607%" y="117" width="0.0292%" height="15" fill="rgb(244,45,10)" fg:x="1488" fg:w="2"/><text x="22.0107%" y="127.50"></text></g><g><title>itsi_server.bundle`DYLD-STUB$$send (1 samples, 0.01%)</title><rect x="21.7900%" y="117" width="0.0146%" height="15" fill="rgb(207,125,25)" fg:x="1490" fg:w="1"/><text x="22.0400%" y="127.50"></text></g><g><title>libsystem_c.dylib`DYLD-STUB$$__sendto (1 samples, 0.01%)</title><rect x="21.8046%" y="117" width="0.0146%" height="15" fill="rgb(210,195,18)" fg:x="1491" fg:w="1"/><text x="22.0546%" y="127.50"></text></g><g><title>itsi_server.bundle`&lt;&amp;mio::net::tcp::stream::TcpStream as std::io::Write&gt;::write (780 samples, 11.41%)</title><rect x="21.7607%" y="133" width="11.4068%" height="15" fill="rgb(249,80,12)" fg:x="1488" fg:w="780"/><text x="22.0107%" y="143.50">itsi_server.bundl..</text></g><g><title>libsystem_kernel.dylib`__sendto (776 samples, 11.35%)</title><rect x="21.8192%" y="117" width="11.3483%" height="15" fill="rgb(221,65,9)" fg:x="1492" fg:w="776"/><text x="22.0692%" y="127.50">libsystem_kernel...</text></g><g><title>itsi_server.bundle`tokio::runtime::io::registration::Registration::poll_ready (7 samples, 0.10%)</title><rect x="33.1676%" y="133" width="0.1024%" height="15" fill="rgb(235,49,36)" fg:x="2268" fg:w="7"/><text x="33.4176%" y="143.50"></text></g><g><title>itsi_server.bundle`tokio::runtime::io::scheduled_io::ScheduledIo::poll_readiness (1 samples, 0.01%)</title><rect x="33.2553%" y="117" width="0.0146%" height="15" fill="rgb(225,32,20)" fg:x="2274" fg:w="1"/><text x="33.5053%" y="127.50"></text></g><g><title>itsi_server.bundle`tokio::io::poll_evented::PollEvented&lt;E&gt;::poll_write (797 samples, 11.66%)</title><rect x="21.6438%" y="149" width="11.6555%" height="15" fill="rgb(215,141,46)" fg:x="1480" fg:w="797"/><text x="21.8938%" y="159.50">itsi_server.bundl..</text></g><g><title>libdyld.dylib`tlv_get_addr (2 samples, 0.03%)</title><rect x="33.2700%" y="133" width="0.0292%" height="15" fill="rgb(250,160,47)" fg:x="2275" fg:w="2"/><text x="33.5200%" y="143.50"></text></g><g><title>itsi_server.bundle`hyper::proto::h1::io::Buffered&lt;T,B&gt;::poll_flush (804 samples, 11.76%)</title><rect x="21.5560%" y="165" width="11.7578%" height="15" fill="rgb(216,222,40)" fg:x="1474" fg:w="804"/><text x="21.8060%" y="175.50">itsi_server.bundl..</text></g><g><title>itsi_server.bundle`tokio::runtime::io::registration::Registration::poll_ready (1 samples, 0.01%)</title><rect x="33.2992%" y="149" width="0.0146%" height="15" fill="rgb(234,217,39)" fg:x="2277" fg:w="1"/><text x="33.5492%" y="159.50"></text></g><g><title>itsi_server.bundle`tokio::sync::batch_semaphore::Semaphore::close (5 samples, 0.07%)</title><rect x="34.2644%" y="133" width="0.0731%" height="15" fill="rgb(207,178,40)" fg:x="2343" fg:w="5"/><text x="34.5144%" y="143.50"></text></g><g><title>itsi_server.bundle`&lt;tokio::sync::mpsc::chan::Rx&lt;T,S&gt; as core::ops::drop::Drop&gt;::drop (26 samples, 0.38%)</title><rect x="33.9865%" y="149" width="0.3802%" height="15" fill="rgb(221,136,13)" fg:x="2324" fg:w="26"/><text x="34.2365%" y="159.50"></text></g><g><title>itsi_server.bundle`tokio::sync::notify::Notify::notify_waiters (2 samples, 0.03%)</title><rect x="34.3375%" y="133" width="0.0292%" height="15" fill="rgb(249,199,10)" fg:x="2348" fg:w="2"/><text x="34.5875%" y="143.50"></text></g><g><title>itsi_server.bundle`tokio::sync::mpsc::list::Rx&lt;T&gt;::pop (3 samples, 0.04%)</title><rect x="34.4106%" y="133" width="0.0439%" height="15" fill="rgb(249,222,13)" fg:x="2353" fg:w="3"/><text x="34.6606%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`small_free_list_add_ptr (3 samples, 0.04%)</title><rect x="34.6008%" y="117" width="0.0439%" height="15" fill="rgb(244,185,38)" fg:x="2366" fg:w="3"/><text x="34.8508%" y="127.50"></text></g><g><title>itsi_server.bundle`alloc::sync::Arc&lt;T,A&gt;::drop_slow (23 samples, 0.34%)</title><rect x="34.3668%" y="149" width="0.3364%" height="15" fill="rgb(236,202,9)" fg:x="2350" fg:w="23"/><text x="34.6168%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`free_small (17 samples, 0.25%)</title><rect x="34.4545%" y="133" width="0.2486%" height="15" fill="rgb(250,229,37)" fg:x="2356" fg:w="17"/><text x="34.7045%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`small_free_list_remove_ptr_no_clear (4 samples, 0.06%)</title><rect x="34.6446%" y="117" width="0.0585%" height="15" fill="rgb(206,174,23)" fg:x="2369" fg:w="4"/><text x="34.8946%" y="127.50"></text></g><g><title>itsi_server.bundle`tokio::sync::mpsc::list::Rx&lt;T&gt;::pop (1 samples, 0.01%)</title><rect x="34.7031%" y="149" width="0.0146%" height="15" fill="rgb(211,33,43)" fg:x="2373" fg:w="1"/><text x="34.9531%" y="159.50"></text></g><g><title>libsystem_kernel.dylib`__ulock_wake (1 samples, 0.01%)</title><rect x="34.7178%" y="149" width="0.0146%" height="15" fill="rgb(245,58,50)" fg:x="2374" fg:w="1"/><text x="34.9678%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`_szone_free (1 samples, 0.01%)</title><rect x="34.7324%" y="149" width="0.0146%" height="15" fill="rgb(244,68,36)" fg:x="2375" fg:w="1"/><text x="34.9824%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`get_tiny_previous_free_msize (3 samples, 0.04%)</title><rect x="34.8347%" y="133" width="0.0439%" height="15" fill="rgb(232,229,15)" fg:x="2382" fg:w="3"/><text x="35.0847%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_add_ptr (3 samples, 0.04%)</title><rect x="35.0395%" y="117" width="0.0439%" height="15" fill="rgb(254,30,23)" fg:x="2396" fg:w="3"/><text x="35.2895%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_remove_ptr (4 samples, 0.06%)</title><rect x="35.0834%" y="117" width="0.0585%" height="15" fill="rgb(235,160,14)" fg:x="2399" fg:w="4"/><text x="35.3334%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (28 samples, 0.41%)</title><rect x="34.7470%" y="149" width="0.4095%" height="15" fill="rgb(212,155,44)" fg:x="2376" fg:w="28"/><text x="34.9970%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (19 samples, 0.28%)</title><rect x="34.8786%" y="133" width="0.2779%" height="15" fill="rgb(226,2,50)" fg:x="2385" fg:w="19"/><text x="35.1286%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`tiny_madvise_free_range_no_lock (1 samples, 0.01%)</title><rect x="35.1419%" y="117" width="0.0146%" height="15" fill="rgb(234,177,6)" fg:x="2403" fg:w="1"/><text x="35.3919%" y="127.50"></text></g><g><title>libsystem_kernel.dylib`madvise (1 samples, 0.01%)</title><rect x="35.1419%" y="101" width="0.0146%" height="15" fill="rgb(217,24,9)" fg:x="2403" fg:w="1"/><text x="35.3919%" y="111.50"></text></g><g><title>libsystem_platform.dylib`_platform_memset (2 samples, 0.03%)</title><rect x="35.1565%" y="149" width="0.0292%" height="15" fill="rgb(220,13,46)" fg:x="2404" fg:w="2"/><text x="35.4065%" y="159.50"></text></g><g><title>itsi_server.bundle`itsi_server::response::itsi_response::ItsiResponse::build::_{{closure}} (129 samples, 1.89%)</title><rect x="33.3138%" y="165" width="1.8865%" height="15" fill="rgb(239,221,27)" fg:x="2278" fg:w="129"/><text x="33.5638%" y="175.50">i..</text></g><g><title>libsystem_platform.dylib`os_unfair_lock_lock_with_options (1 samples, 0.01%)</title><rect x="35.1857%" y="149" width="0.0146%" height="15" fill="rgb(222,198,25)" fg:x="2406" fg:w="1"/><text x="35.4357%" y="159.50"></text></g><g><title>itsi_server.bundle`http::header::map::HeaderMap&lt;T&gt;::try_with_capacity (1 samples, 0.01%)</title><rect x="35.2296%" y="149" width="0.0146%" height="15" fill="rgb(211,99,13)" fg:x="2409" fg:w="1"/><text x="35.4796%" y="159.50"></text></g><g><title>itsi_server.bundle`http::response::Parts::new (9 samples, 0.13%)</title><rect x="35.2442%" y="149" width="0.1316%" height="15" fill="rgb(232,111,31)" fg:x="2410" fg:w="9"/><text x="35.4942%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`rack_get_thread_index (1 samples, 0.01%)</title><rect x="35.4051%" y="133" width="0.0146%" height="15" fill="rgb(245,82,37)" fg:x="2421" fg:w="1"/><text x="35.6551%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`set_tiny_meta_header_in_use (1 samples, 0.01%)</title><rect x="35.4490%" y="117" width="0.0146%" height="15" fill="rgb(227,149,46)" fg:x="2424" fg:w="1"/><text x="35.6990%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`_tiny_check_and_zero_inline_meta_from_freelist (1 samples, 0.01%)</title><rect x="35.4782%" y="101" width="0.0146%" height="15" fill="rgb(218,36,50)" fg:x="2426" fg:w="1"/><text x="35.7282%" y="111.50"></text></g><g><title>itsi_server.bundle`itsi_server::response::itsi_response::ItsiResponse::new (21 samples, 0.31%)</title><rect x="35.2004%" y="165" width="0.3071%" height="15" fill="rgb(226,80,48)" fg:x="2407" fg:w="21"/><text x="35.4504%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (9 samples, 0.13%)</title><rect x="35.3758%" y="149" width="0.1316%" height="15" fill="rgb(238,224,15)" fg:x="2419" fg:w="9"/><text x="35.6258%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (6 samples, 0.09%)</title><rect x="35.4197%" y="133" width="0.0877%" height="15" fill="rgb(241,136,10)" fg:x="2422" fg:w="6"/><text x="35.6697%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (3 samples, 0.04%)</title><rect x="35.4636%" y="117" width="0.0439%" height="15" fill="rgb(208,32,45)" fg:x="2425" fg:w="3"/><text x="35.7136%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_add_ptr (1 samples, 0.01%)</title><rect x="35.4928%" y="101" width="0.0146%" height="15" fill="rgb(207,135,9)" fg:x="2427" fg:w="1"/><text x="35.7428%" y="111.50"></text></g><g><title>libsystem_c.dylib`DYLD-STUB$$mach_timebase_info (2 samples, 0.03%)</title><rect x="35.5367%" y="133" width="0.0292%" height="15" fill="rgb(206,86,44)" fg:x="2430" fg:w="2"/><text x="35.7867%" y="143.50"></text></g><g><title>itsi_server.bundle`std::sys::pal::unix::time::Timespec::now (21 samples, 0.31%)</title><rect x="35.5075%" y="165" width="0.3071%" height="15" fill="rgb(245,177,15)" fg:x="2428" fg:w="21"/><text x="35.7575%" y="175.50"></text></g><g><title>libsystem_c.dylib`clock_gettime (20 samples, 0.29%)</title><rect x="35.5221%" y="149" width="0.2925%" height="15" fill="rgb(206,64,50)" fg:x="2429" fg:w="20"/><text x="35.7721%" y="159.50"></text></g><g><title>libsystem_kernel.dylib`mach_absolute_time (17 samples, 0.25%)</title><rect x="35.5660%" y="133" width="0.2486%" height="15" fill="rgb(234,36,40)" fg:x="2432" fg:w="17"/><text x="35.8160%" y="143.50"></text></g><g><title>itsi_server.bundle`std::time::Instant::now (2 samples, 0.03%)</title><rect x="35.8146%" y="165" width="0.0292%" height="15" fill="rgb(213,64,8)" fg:x="2449" fg:w="2"/><text x="36.0646%" y="175.50"></text></g><g><title>itsi_server.bundle`tokio::io::poll_evented::PollEvented&lt;E&gt;::poll_write (1 samples, 0.01%)</title><rect x="35.8438%" y="165" width="0.0146%" height="15" fill="rgb(210,75,36)" fg:x="2451" fg:w="1"/><text x="36.0938%" y="175.50"></text></g><g><title>itsi_server.bundle`tokio::sync::batch_semaphore::Semaphore::add_permits_locked (1 samples, 0.01%)</title><rect x="35.8584%" y="165" width="0.0146%" height="15" fill="rgb(229,88,21)" fg:x="2452" fg:w="1"/><text x="36.1084%" y="175.50"></text></g><g><title>itsi_server.bundle`&lt;tokio::runtime::coop::RestoreOnPending as core::ops::drop::Drop&gt;::drop (9 samples, 0.13%)</title><rect x="35.9462%" y="149" width="0.1316%" height="15" fill="rgb(252,204,47)" fg:x="2458" fg:w="9"/><text x="36.1962%" y="159.50"></text></g><g><title>itsi_server.bundle`tokio::sync::batch_semaphore::Semaphore::add_permits_locked (3 samples, 0.04%)</title><rect x="36.0778%" y="149" width="0.0439%" height="15" fill="rgb(208,77,27)" fg:x="2467" fg:w="3"/><text x="36.3278%" y="159.50"></text></g><g><title>itsi_server.bundle`tokio::sync::mpsc::list::Rx&lt;T&gt;::pop (3 samples, 0.04%)</title><rect x="36.1217%" y="149" width="0.0439%" height="15" fill="rgb(221,76,26)" fg:x="2470" fg:w="3"/><text x="36.3717%" y="159.50"></text></g><g><title>itsi_server.bundle`tokio::sync::task::atomic_waker::AtomicWaker::register_by_ref (1 samples, 0.01%)</title><rect x="36.1655%" y="149" width="0.0146%" height="15" fill="rgb(225,139,18)" fg:x="2473" fg:w="1"/><text x="36.4155%" y="159.50"></text></g><g><title>itsi_server.bundle`tokio::sync::mpsc::chan::Rx&lt;T,S&gt;::recv (25 samples, 0.37%)</title><rect x="35.8731%" y="165" width="0.3656%" height="15" fill="rgb(230,137,11)" fg:x="2453" fg:w="25"/><text x="36.1231%" y="175.50"></text></g><g><title>libdyld.dylib`tlv_get_addr (4 samples, 0.06%)</title><rect x="36.1802%" y="149" width="0.0585%" height="15" fill="rgb(212,28,1)" fg:x="2474" fg:w="4"/><text x="36.4302%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_memalign (1 samples, 0.01%)</title><rect x="36.2679%" y="133" width="0.0146%" height="15" fill="rgb(248,164,17)" fg:x="2480" fg:w="1"/><text x="36.5179%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (1 samples, 0.01%)</title><rect x="36.3410%" y="101" width="0.0146%" height="15" fill="rgb(222,171,42)" fg:x="2485" fg:w="1"/><text x="36.5910%" y="111.50"></text></g><g><title>libsystem_malloc.dylib`set_tiny_meta_header_in_use (3 samples, 0.04%)</title><rect x="36.3557%" y="101" width="0.0439%" height="15" fill="rgb(243,84,45)" fg:x="2486" fg:w="3"/><text x="36.6057%" y="111.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (1 samples, 0.01%)</title><rect x="36.3995%" y="101" width="0.0146%" height="15" fill="rgb(252,49,23)" fg:x="2489" fg:w="1"/><text x="36.6495%" y="111.50"></text></g><g><title>libsystem_kernel.dylib`__ulock_wake (2 samples, 0.03%)</title><rect x="36.4727%" y="85" width="0.0292%" height="15" fill="rgb(215,19,7)" fg:x="2494" fg:w="2"/><text x="36.7227%" y="95.50"></text></g><g><title>libsystem_kernel.dylib`__ulock_wait2 (1 samples, 0.01%)</title><rect x="36.5896%" y="69" width="0.0146%" height="15" fill="rgb(238,81,41)" fg:x="2502" fg:w="1"/><text x="36.8396%" y="79.50"></text></g><g><title>libsystem_malloc.dylib`get_tiny_previous_free_msize (3 samples, 0.04%)</title><rect x="36.6043%" y="69" width="0.0439%" height="15" fill="rgb(210,199,37)" fg:x="2503" fg:w="3"/><text x="36.8543%" y="79.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_add_ptr (3 samples, 0.04%)</title><rect x="36.7505%" y="53" width="0.0439%" height="15" fill="rgb(244,192,49)" fg:x="2513" fg:w="3"/><text x="37.0005%" y="63.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (21 samples, 0.31%)</title><rect x="36.5019%" y="85" width="0.3071%" height="15" fill="rgb(226,211,11)" fg:x="2496" fg:w="21"/><text x="36.7519%" y="95.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (11 samples, 0.16%)</title><rect x="36.6481%" y="69" width="0.1609%" height="15" fill="rgb(236,162,54)" fg:x="2506" fg:w="11"/><text x="36.8981%" y="79.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_remove_ptr (1 samples, 0.01%)</title><rect x="36.7944%" y="53" width="0.0146%" height="15" fill="rgb(220,229,9)" fg:x="2516" fg:w="1"/><text x="37.0444%" y="63.50"></text></g><g><title>libsystem_malloc.dylib`set_tiny_meta_header_in_use (4 samples, 0.06%)</title><rect x="36.8236%" y="69" width="0.0585%" height="15" fill="rgb(250,87,22)" fg:x="2518" fg:w="4"/><text x="37.0736%" y="79.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_add_ptr (1 samples, 0.01%)</title><rect x="36.8821%" y="69" width="0.0146%" height="15" fill="rgb(239,43,17)" fg:x="2522" fg:w="1"/><text x="37.1321%" y="79.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_memalign (54 samples, 0.79%)</title><rect x="36.2972%" y="117" width="0.7897%" height="15" fill="rgb(231,177,25)" fg:x="2482" fg:w="54"/><text x="36.5472%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`tiny_memalign (46 samples, 0.67%)</title><rect x="36.4142%" y="101" width="0.6727%" height="15" fill="rgb(219,179,1)" fg:x="2490" fg:w="46"/><text x="36.6642%" y="111.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (19 samples, 0.28%)</title><rect x="36.8090%" y="85" width="0.2779%" height="15" fill="rgb(238,219,53)" fg:x="2517" fg:w="19"/><text x="37.0590%" y="95.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (13 samples, 0.19%)</title><rect x="36.8968%" y="69" width="0.1901%" height="15" fill="rgb(232,167,36)" fg:x="2523" fg:w="13"/><text x="37.1468%" y="79.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_add_ptr (3 samples, 0.04%)</title><rect x="37.0430%" y="53" width="0.0439%" height="15" fill="rgb(244,19,51)" fg:x="2533" fg:w="3"/><text x="37.2930%" y="63.50"></text></g><g><title>itsi_server.bundle`__rdl_alloc (58 samples, 0.85%)</title><rect x="36.2533%" y="149" width="0.8482%" height="15" fill="rgb(224,6,22)" fg:x="2479" fg:w="58"/><text x="36.5033%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`_posix_memalign (56 samples, 0.82%)</title><rect x="36.2825%" y="133" width="0.8190%" height="15" fill="rgb(224,145,5)" fg:x="2481" fg:w="56"/><text x="36.5325%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_memalign (1 samples, 0.01%)</title><rect x="37.0869%" y="117" width="0.0146%" height="15" fill="rgb(234,130,49)" fg:x="2536" fg:w="1"/><text x="37.3369%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`rack_get_thread_index (2 samples, 0.03%)</title><rect x="37.1015%" y="133" width="0.0292%" height="15" fill="rgb(254,6,2)" fg:x="2537" fg:w="2"/><text x="37.3515%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`small_free_list_add_ptr (1 samples, 0.01%)</title><rect x="37.1454%" y="101" width="0.0146%" height="15" fill="rgb(208,96,46)" fg:x="2540" fg:w="1"/><text x="37.3954%" y="111.50"></text></g><g><title>itsi_server.bundle`tokio::sync::mpsc::chan::channel (69 samples, 1.01%)</title><rect x="36.2387%" y="165" width="1.0091%" height="15" fill="rgb(239,3,39)" fg:x="2478" fg:w="69"/><text x="36.4887%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (10 samples, 0.15%)</title><rect x="37.1015%" y="149" width="0.1462%" height="15" fill="rgb(233,210,1)" fg:x="2537" fg:w="10"/><text x="37.3515%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`small_malloc_should_clear (8 samples, 0.12%)</title><rect x="37.1307%" y="133" width="0.1170%" height="15" fill="rgb(244,137,37)" fg:x="2539" fg:w="8"/><text x="37.3807%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`small_malloc_from_free_list (7 samples, 0.10%)</title><rect x="37.1454%" y="117" width="0.1024%" height="15" fill="rgb(240,136,2)" fg:x="2540" fg:w="7"/><text x="37.3954%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`small_free_list_remove_ptr_no_clear (6 samples, 0.09%)</title><rect x="37.1600%" y="101" width="0.0877%" height="15" fill="rgb(239,18,37)" fg:x="2541" fg:w="6"/><text x="37.4100%" y="111.50"></text></g><g><title>itsi_server.bundle`tokio::sync::task::atomic_waker::AtomicWaker::register_by_ref (1 samples, 0.01%)</title><rect x="37.2477%" y="165" width="0.0146%" height="15" fill="rgb(218,185,22)" fg:x="2547" fg:w="1"/><text x="37.4977%" y="175.50"></text></g><g><title>libdyld.dylib`tlv_get_addr (11 samples, 0.16%)</title><rect x="37.2624%" y="165" width="0.1609%" height="15" fill="rgb(225,218,4)" fg:x="2548" fg:w="11"/><text x="37.5124%" y="175.50"></text></g><g><title>libsystem_c.dylib`clock_gettime (1 samples, 0.01%)</title><rect x="37.4232%" y="165" width="0.0146%" height="15" fill="rgb(230,182,32)" fg:x="2559" fg:w="1"/><text x="37.6732%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`_free (2 samples, 0.03%)</title><rect x="37.4378%" y="165" width="0.0292%" height="15" fill="rgb(242,56,43)" fg:x="2560" fg:w="2"/><text x="37.6878%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (4 samples, 0.06%)</title><rect x="37.4671%" y="165" width="0.0585%" height="15" fill="rgb(233,99,24)" fg:x="2562" fg:w="4"/><text x="37.7171%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (5 samples, 0.07%)</title><rect x="37.5256%" y="165" width="0.0731%" height="15" fill="rgb(234,209,42)" fg:x="2566" fg:w="5"/><text x="37.7756%" y="175.50"></text></g><g><title>itsi_server.bundle`hyper::proto::h1::dispatch::Dispatcher&lt;D,Bs,I,T&gt;::poll_catch (2,572 samples, 37.61%)</title><rect x="0.8336%" y="181" width="37.6133%" height="15" fill="rgb(227,7,12)" fg:x="57" fg:w="2572"/><text x="1.0836%" y="191.50">itsi_server.bundle`hyper::proto::h1::dispatch::Dispatcher&lt;D,B..</text></g><g><title>libsystem_platform.dylib`_platform_memmove (58 samples, 0.85%)</title><rect x="37.5987%" y="165" width="0.8482%" height="15" fill="rgb(245,203,43)" fg:x="2571" fg:w="58"/><text x="37.8487%" y="175.50"></text></g><g><title>itsi_server.bundle`hyper::proto::h1::io::WriteBuf&lt;B&gt;::can_buffer (1 samples, 0.01%)</title><rect x="38.4469%" y="181" width="0.0146%" height="15" fill="rgb(238,205,33)" fg:x="2629" fg:w="1"/><text x="38.6969%" y="191.50"></text></g><g><title>itsi_server.bundle`tokio::sync::batch_semaphore::Semaphore::new (2 samples, 0.03%)</title><rect x="38.4615%" y="181" width="0.0292%" height="15" fill="rgb(231,56,7)" fg:x="2630" fg:w="2"/><text x="38.7115%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`_free (1 samples, 0.01%)</title><rect x="38.4908%" y="181" width="0.0146%" height="15" fill="rgb(244,186,29)" fg:x="2632" fg:w="1"/><text x="38.7408%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (1 samples, 0.01%)</title><rect x="38.5054%" y="181" width="0.0146%" height="15" fill="rgb(234,111,31)" fg:x="2633" fg:w="1"/><text x="38.7554%" y="191.50"></text></g><g><title>itsi_server.bundle`&lt;hyper::server::conn::http1::UpgradeableConnection&lt;I,S&gt; as core::future::future::Future&gt;::poll (2,609 samples, 38.15%)</title><rect x="0.5557%" y="197" width="38.1544%" height="15" fill="rgb(241,149,10)" fg:x="38" fg:w="2609"/><text x="0.8057%" y="207.50">itsi_server.bundle`&lt;hyper::server::conn::http1::UpgradeableCon..</text></g><g><title>libsystem_platform.dylib`_platform_memmove (13 samples, 0.19%)</title><rect x="38.5200%" y="181" width="0.1901%" height="15" fill="rgb(249,206,44)" fg:x="2634" fg:w="13"/><text x="38.7700%" y="191.50"></text></g><g><title>itsi_server.bundle`&lt;hyper_util::server::conn::auto::UpgradeableConnection&lt;I,S,E&gt; as core::future::future::Future&gt;::poll (2,618 samples, 38.29%)</title><rect x="0.4680%" y="213" width="38.2860%" height="15" fill="rgb(251,153,30)" fg:x="32" fg:w="2618"/><text x="0.7180%" y="223.50">itsi_server.bundle`&lt;hyper_util::server::conn::auto::Upgradeabl..</text></g><g><title>itsi_server.bundle`hyper::proto::h1::dispatch::Dispatcher&lt;D,Bs,I,T&gt;::poll_catch (3 samples, 0.04%)</title><rect x="38.7101%" y="197" width="0.0439%" height="15" fill="rgb(239,152,38)" fg:x="2647" fg:w="3"/><text x="38.9601%" y="207.50"></text></g><g><title>itsi_server.bundle`&lt;tokio::runtime::coop::RestoreOnPending as core::ops::drop::Drop&gt;::drop (1 samples, 0.01%)</title><rect x="38.7540%" y="213" width="0.0146%" height="15" fill="rgb(249,139,47)" fg:x="2650" fg:w="1"/><text x="39.0040%" y="223.50"></text></g><g><title>itsi_server.bundle`&lt;tokio::sync::notify::Notified as core::future::future::Future&gt;::poll (1 samples, 0.01%)</title><rect x="38.7686%" y="213" width="0.0146%" height="15" fill="rgb(244,64,35)" fg:x="2651" fg:w="1"/><text x="39.0186%" y="223.50"></text></g><g><title>itsi_server.bundle`tokio::sync::notify::Notified::poll_notified (5 samples, 0.07%)</title><rect x="38.7833%" y="213" width="0.0731%" height="15" fill="rgb(216,46,15)" fg:x="2652" fg:w="5"/><text x="39.0333%" y="223.50"></text></g><g><title>itsi_server.bundle`&lt;tokio::runtime::coop::RestoreOnPending as core::ops::drop::Drop&gt;::drop (6 samples, 0.09%)</title><rect x="38.9149%" y="197" width="0.0877%" height="15" fill="rgb(250,74,19)" fg:x="2661" fg:w="6"/><text x="39.1649%" y="207.50"></text></g><g><title>itsi_server.bundle`tokio::sync::notify::Notified::poll_notified (5 samples, 0.07%)</title><rect x="39.0026%" y="197" width="0.0731%" height="15" fill="rgb(249,42,33)" fg:x="2667" fg:w="5"/><text x="39.2526%" y="207.50"></text></g><g><title>itsi_server.bundle`tokio::sync::watch::Receiver&lt;T&gt;::changed::_{{closure}} (19 samples, 0.28%)</title><rect x="38.8564%" y="213" width="0.2779%" height="15" fill="rgb(242,149,17)" fg:x="2657" fg:w="19"/><text x="39.1064%" y="223.50"></text></g><g><title>libdyld.dylib`tlv_get_addr (4 samples, 0.06%)</title><rect x="39.0758%" y="197" width="0.0585%" height="15" fill="rgb(244,29,21)" fg:x="2672" fg:w="4"/><text x="39.3258%" y="207.50"></text></g><g><title>itsi_server.bundle`&lt;core::future::poll_fn::PollFn&lt;F&gt; as core::future::future::Future&gt;::poll (2,663 samples, 38.94%)</title><rect x="0.3949%" y="229" width="38.9441%" height="15" fill="rgb(220,130,37)" fg:x="27" fg:w="2663"/><text x="0.6449%" y="239.50">itsi_server.bundle`&lt;core::future::poll_fn::PollFn&lt;F&gt; as core::fu..</text></g><g><title>libdyld.dylib`tlv_get_addr (14 samples, 0.20%)</title><rect x="39.1342%" y="213" width="0.2047%" height="15" fill="rgb(211,67,2)" fg:x="2676" fg:w="14"/><text x="39.3842%" y="223.50"></text></g><g><title>itsi_server.bundle`&lt;hyper_util::server::conn::auto::UpgradeableConnection&lt;I,S,E&gt; as core::future::future::Future&gt;::poll (3 samples, 0.04%)</title><rect x="39.3390%" y="229" width="0.0439%" height="15" fill="rgb(235,68,52)" fg:x="2690" fg:w="3"/><text x="39.5890%" y="239.50"></text></g><g><title>itsi_server.bundle`itsi_server::server::serve_strategy::single_mode::SingleMode::serve_connection::_{{closure}}::_{{closure}} (2,670 samples, 39.05%)</title><rect x="0.3510%" y="245" width="39.0465%" height="15" fill="rgb(246,142,3)" fg:x="24" fg:w="2670"/><text x="0.6010%" y="255.50">itsi_server.bundle`itsi_server::server::serve_strategy::single_m..</text></g><g><title>itsi_server.bundle`tokio::macros::support::thread_rng_n (1 samples, 0.01%)</title><rect x="39.3829%" y="229" width="0.0146%" height="15" fill="rgb(241,25,7)" fg:x="2693" fg:w="1"/><text x="39.6329%" y="239.50"></text></g><g><title>itsi_server.bundle`tokio::runtime::task::core::Core&lt;T,S&gt;::poll (2,683 samples, 39.24%)</title><rect x="0.2632%" y="261" width="39.2366%" height="15" fill="rgb(242,119,39)" fg:x="18" fg:w="2683"/><text x="0.5132%" y="271.50">itsi_server.bundle`tokio::runtime::task::core::Core&lt;T,S&gt;::poll</text></g><g><title>libdyld.dylib`tlv_get_addr (7 samples, 0.10%)</title><rect x="39.3975%" y="245" width="0.1024%" height="15" fill="rgb(241,98,45)" fg:x="2694" fg:w="7"/><text x="39.6475%" y="255.50"></text></g><g><title>itsi_server.bundle`tokio::runtime::task::core::TaskIdGuard::enter (1 samples, 0.01%)</title><rect x="39.4999%" y="261" width="0.0146%" height="15" fill="rgb(254,28,30)" fg:x="2701" fg:w="1"/><text x="39.7499%" y="271.50"></text></g><g><title>itsi_server.bundle`tokio::runtime::task::state::State::transition_to_idle (2 samples, 0.03%)</title><rect x="39.5145%" y="261" width="0.0292%" height="15" fill="rgb(241,142,54)" fg:x="2702" fg:w="2"/><text x="39.7645%" y="271.50"></text></g><g><title>itsi_server.bundle`tokio::runtime::scheduler::current_thread::Context::enter (2,703 samples, 39.53%)</title><rect x="0.0439%" y="293" width="39.5291%" height="15" fill="rgb(222,85,15)" fg:x="3" fg:w="2703"/><text x="0.2939%" y="303.50">itsi_server.bundle`tokio::runtime::scheduler::current_thread::Co..</text></g><g><title>itsi_server.bundle`tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll (2,696 samples, 39.43%)</title><rect x="0.1462%" y="277" width="39.4267%" height="15" fill="rgb(210,85,47)" fg:x="10" fg:w="2696"/><text x="0.3962%" y="287.50">itsi_server.bundle`tokio::runtime::task::harness::Harness&lt;T,S&gt;::..</text></g><g><title>itsi_server.bundle`tokio::runtime::task::state::State::transition_to_running (2 samples, 0.03%)</title><rect x="39.5437%" y="261" width="0.0292%" height="15" fill="rgb(224,206,25)" fg:x="2704" fg:w="2"/><text x="39.7937%" y="271.50"></text></g><g><title>itsi_server.bundle`std::sys::pal::unix::time::Timespec::now (1 samples, 0.01%)</title><rect x="39.6461%" y="261" width="0.0146%" height="15" fill="rgb(243,201,19)" fg:x="2711" fg:w="1"/><text x="39.8961%" y="271.50"></text></g><g><title>libsystem_c.dylib`clock_gettime (1 samples, 0.01%)</title><rect x="39.6461%" y="245" width="0.0146%" height="15" fill="rgb(236,59,4)" fg:x="2711" fg:w="1"/><text x="39.8961%" y="255.50"></text></g><g><title>libsystem_c.dylib`DYLD-STUB$$mach_timebase_info (1 samples, 0.01%)</title><rect x="39.6461%" y="229" width="0.0146%" height="15" fill="rgb(254,179,45)" fg:x="2711" fg:w="1"/><text x="39.8961%" y="239.50"></text></g><g><title>itsi_server.bundle`mio::poll::Poll::poll (1 samples, 0.01%)</title><rect x="39.6900%" y="245" width="0.0146%" height="15" fill="rgb(226,14,10)" fg:x="2714" fg:w="1"/><text x="39.9400%" y="255.50"></text></g><g><title>itsi_server.bundle`tokio::runtime::context::with_scheduler (8 samples, 0.12%)</title><rect x="39.7631%" y="229" width="0.1170%" height="15" fill="rgb(244,27,41)" fg:x="2719" fg:w="8"/><text x="40.0131%" y="239.50"></text></g><g><title>itsi_server.bundle`tokio::runtime::context::with_scheduler (1 samples, 0.01%)</title><rect x="39.8801%" y="213" width="0.0146%" height="15" fill="rgb(235,35,32)" fg:x="2727" fg:w="1"/><text x="40.1301%" y="223.50"></text></g><g><title>itsi_server.bundle`tokio::runtime::io::scheduled_io::ScheduledIo::wake (15 samples, 0.22%)</title><rect x="39.7046%" y="245" width="0.2194%" height="15" fill="rgb(218,68,31)" fg:x="2715" fg:w="15"/><text x="39.9546%" y="255.50"></text></g><g><title>itsi_server.bundle`tokio::runtime::task::waker::wake_by_val (3 samples, 0.04%)</title><rect x="39.8801%" y="229" width="0.0439%" height="15" fill="rgb(207,120,37)" fg:x="2727" fg:w="3"/><text x="40.1301%" y="239.50"></text></g><g><title>libdyld.dylib`tlv_get_addr (2 samples, 0.03%)</title><rect x="39.8947%" y="213" width="0.0292%" height="15" fill="rgb(227,98,0)" fg:x="2728" fg:w="2"/><text x="40.1447%" y="223.50"></text></g><g><title>itsi_server.bundle`tokio::runtime::io::driver::Driver::turn (245 samples, 3.58%)</title><rect x="39.6607%" y="261" width="3.5829%" height="15" fill="rgb(207,7,3)" fg:x="2712" fg:w="245"/><text x="39.9107%" y="271.50">itsi..</text></g><g><title>libsystem_kernel.dylib`kevent (227 samples, 3.32%)</title><rect x="39.9240%" y="245" width="3.3197%" height="15" fill="rgb(206,98,19)" fg:x="2730" fg:w="227"/><text x="40.1740%" y="255.50">lib..</text></g><g><title>libsystem_c.dylib`clock_gettime_nsec_np (1 samples, 0.01%)</title><rect x="43.2436%" y="213" width="0.0146%" height="15" fill="rgb(217,5,26)" fg:x="2957" fg:w="1"/><text x="43.4936%" y="223.50"></text></g><g><title>libsystem_c.dylib`clock_gettime (4 samples, 0.06%)</title><rect x="43.2436%" y="229" width="0.0585%" height="15" fill="rgb(235,190,38)" fg:x="2957" fg:w="4"/><text x="43.4936%" y="239.50"></text></g><g><title>libsystem_kernel.dylib`mach_absolute_time (3 samples, 0.04%)</title><rect x="43.2583%" y="213" width="0.0439%" height="15" fill="rgb(247,86,24)" fg:x="2958" fg:w="3"/><text x="43.5083%" y="223.50"></text></g><g><title>itsi_server.bundle`std::sys::pal::unix::time::Timespec::now (5 samples, 0.07%)</title><rect x="43.2436%" y="245" width="0.0731%" height="15" fill="rgb(205,101,16)" fg:x="2957" fg:w="5"/><text x="43.4936%" y="255.50"></text></g><g><title>libsystem_c.dylib`clock_gettime_nsec_np (1 samples, 0.01%)</title><rect x="43.3021%" y="229" width="0.0146%" height="15" fill="rgb(246,168,33)" fg:x="2961" fg:w="1"/><text x="43.5521%" y="239.50"></text></g><g><title>itsi_server.bundle`std::sys::pal::unix::time::Timespec::sub_timespec (1 samples, 0.01%)</title><rect x="43.3168%" y="245" width="0.0146%" height="15" fill="rgb(231,114,1)" fg:x="2962" fg:w="1"/><text x="43.5668%" y="255.50"></text></g><g><title>itsi_server.bundle`tokio::runtime::time::wheel::Wheel::poll (2 samples, 0.03%)</title><rect x="43.3460%" y="229" width="0.0292%" height="15" fill="rgb(207,184,53)" fg:x="2964" fg:w="2"/><text x="43.5960%" y="239.50"></text></g><g><title>itsi_server.bundle`tokio::runtime::time::wheel::level::Level::next_expiration (2 samples, 0.03%)</title><rect x="43.3460%" y="213" width="0.0292%" height="15" fill="rgb(224,95,51)" fg:x="2964" fg:w="2"/><text x="43.5960%" y="223.50"></text></g><g><title>itsi_server.bundle`tokio::runtime::time::_&lt;impl tokio::runtime::time::handle::Handle&gt;::process_at_sharded_time (4 samples, 0.06%)</title><rect x="43.3314%" y="245" width="0.0585%" height="15" fill="rgb(212,188,45)" fg:x="2963" fg:w="4"/><text x="43.5814%" y="255.50"></text></g><g><title>itsi_server.bundle`tokio::runtime::time::wheel::level::Level::next_expiration (1 samples, 0.01%)</title><rect x="43.3753%" y="229" width="0.0146%" height="15" fill="rgb(223,154,38)" fg:x="2966" fg:w="1"/><text x="43.6253%" y="239.50"></text></g><g><title>itsi_server.bundle`tokio::runtime::time::_&lt;impl tokio::runtime::time::handle::Handle&gt;::process (11 samples, 0.16%)</title><rect x="43.2436%" y="261" width="0.1609%" height="15" fill="rgb(251,22,52)" fg:x="2957" fg:w="11"/><text x="43.4936%" y="271.50"></text></g><g><title>itsi_server.bundle`tokio::runtime::time::wheel::Wheel::poll (1 samples, 0.01%)</title><rect x="43.3899%" y="245" width="0.0146%" height="15" fill="rgb(229,209,22)" fg:x="2967" fg:w="1"/><text x="43.6399%" y="255.50"></text></g><g><title>itsi_server.bundle`tokio::runtime::scheduler::current_thread::Context::park (263 samples, 3.85%)</title><rect x="39.5730%" y="293" width="3.8462%" height="15" fill="rgb(234,138,34)" fg:x="2706" fg:w="263"/><text x="39.8230%" y="303.50">itsi..</text></g><g><title>itsi_server.bundle`tokio::runtime::time::Driver::park_internal (261 samples, 3.82%)</title><rect x="39.6022%" y="277" width="3.8169%" height="15" fill="rgb(212,95,11)" fg:x="2708" fg:w="261"/><text x="39.8522%" y="287.50">itsi..</text></g><g><title>libdyld.dylib`tlv_get_addr (1 samples, 0.01%)</title><rect x="43.4045%" y="261" width="0.0146%" height="15" fill="rgb(240,179,47)" fg:x="2968" fg:w="1"/><text x="43.6545%" y="271.50"></text></g><g><title>itsi_server.bundle`tokio::runtime::scheduler::current_thread::Context::park_yield (5 samples, 0.07%)</title><rect x="43.4191%" y="293" width="0.0731%" height="15" fill="rgb(240,163,11)" fg:x="2969" fg:w="5"/><text x="43.6691%" y="303.50"></text></g><g><title>itsi_server.bundle`tokio::runtime::time::Driver::park_internal (5 samples, 0.07%)</title><rect x="43.4191%" y="277" width="0.0731%" height="15" fill="rgb(236,37,12)" fg:x="2969" fg:w="5"/><text x="43.6691%" y="287.50"></text></g><g><title>itsi_server.bundle`tokio::runtime::io::driver::Driver::turn (5 samples, 0.07%)</title><rect x="43.4191%" y="261" width="0.0731%" height="15" fill="rgb(232,164,16)" fg:x="2969" fg:w="5"/><text x="43.6691%" y="271.50"></text></g><g><title>libsystem_kernel.dylib`kevent (5 samples, 0.07%)</title><rect x="43.4191%" y="245" width="0.0731%" height="15" fill="rgb(244,205,15)" fg:x="2969" fg:w="5"/><text x="43.6691%" y="255.50"></text></g><g><title>itsi_server.bundle`tokio::runtime::scheduler::current_thread::Core::next_task (15 samples, 0.22%)</title><rect x="43.4922%" y="293" width="0.2194%" height="15" fill="rgb(223,117,47)" fg:x="2974" fg:w="15"/><text x="43.7422%" y="303.50"></text></g><g><title>itsi_server.bundle`tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll (2 samples, 0.03%)</title><rect x="43.7116%" y="293" width="0.0292%" height="15" fill="rgb(244,107,35)" fg:x="2989" fg:w="2"/><text x="43.9616%" y="303.50"></text></g><g><title>itsi_server.bundle`tokio::runtime::task::raw::RawTask::poll (1 samples, 0.01%)</title><rect x="43.7409%" y="293" width="0.0146%" height="15" fill="rgb(205,140,8)" fg:x="2991" fg:w="1"/><text x="43.9909%" y="303.50"></text></g><g><title>itsi_server.bundle`tokio::runtime::context::scoped::Scoped&lt;T&gt;::set (2,999 samples, 43.86%)</title><rect x="0.0000%" y="309" width="43.8579%" height="15" fill="rgb(228,84,46)" fg:x="0" fg:w="2999"/><text x="0.2500%" y="319.50">itsi_server.bundle`tokio::runtime::context::scoped::Scoped&lt;T&gt;::set</text></g><g><title>libdyld.dylib`tlv_get_addr (7 samples, 0.10%)</title><rect x="43.7555%" y="293" width="0.1024%" height="15" fill="rgb(254,188,9)" fg:x="2992" fg:w="7"/><text x="44.0055%" y="303.50"></text></g><g><title>itsi_server.bundle`tokio::runtime::scheduler::current_thread::Context::enter (1 samples, 0.01%)</title><rect x="43.8579%" y="309" width="0.0146%" height="15" fill="rgb(206,112,54)" fg:x="2999" fg:w="1"/><text x="44.1079%" y="319.50"></text></g><g><title>itsi_server.bundle`tokio::runtime::scheduler::current_thread::Context::park (1 samples, 0.01%)</title><rect x="43.8725%" y="309" width="0.0146%" height="15" fill="rgb(216,84,49)" fg:x="3000" fg:w="1"/><text x="44.1225%" y="319.50"></text></g><g><title>itsi_server.bundle`tokio::runtime::scheduler::current_thread::Core::next_task (2 samples, 0.03%)</title><rect x="43.8871%" y="309" width="0.0292%" height="15" fill="rgb(214,194,35)" fg:x="3001" fg:w="2"/><text x="44.1371%" y="319.50"></text></g><g><title>dyld`start (3,006 samples, 43.96%)</title><rect x="0.0000%" y="789" width="43.9602%" height="15" fill="rgb(249,28,3)" fg:x="0" fg:w="3006"/><text x="0.2500%" y="799.50">dyld`start</text></g><g><title>ruby`main (3,006 samples, 43.96%)</title><rect x="0.0000%" y="773" width="43.9602%" height="15" fill="rgb(222,56,52)" fg:x="0" fg:w="3006"/><text x="0.2500%" y="783.50">ruby`main</text></g><g><title>libruby.3.4.dylib`ruby_run_node (3,006 samples, 43.96%)</title><rect x="0.0000%" y="757" width="43.9602%" height="15" fill="rgb(245,217,50)" fg:x="0" fg:w="3006"/><text x="0.2500%" y="767.50">libruby.3.4.dylib`ruby_run_node</text></g><g><title>libruby.3.4.dylib`rb_ec_exec_node (3,006 samples, 43.96%)</title><rect x="0.0000%" y="741" width="43.9602%" height="15" fill="rgb(213,201,24)" fg:x="0" fg:w="3006"/><text x="0.2500%" y="751.50">libruby.3.4.dylib`rb_ec_exec_node</text></g><g><title>libruby.3.4.dylib`rb_vm_exec (3,006 samples, 43.96%)</title><rect x="0.0000%" y="725" width="43.9602%" height="15" fill="rgb(248,116,28)" fg:x="0" fg:w="3006"/><text x="0.2500%" y="735.50">libruby.3.4.dylib`rb_vm_exec</text></g><g><title>libruby.3.4.dylib`vm_exec_core (3,006 samples, 43.96%)</title><rect x="0.0000%" y="709" width="43.9602%" height="15" fill="rgb(219,72,43)" fg:x="0" fg:w="3006"/><text x="0.2500%" y="719.50">libruby.3.4.dylib`vm_exec_core</text></g><g><title>libruby.3.4.dylib`vm_call_cfunc_with_frame_ (3,006 samples, 43.96%)</title><rect x="0.0000%" y="693" width="43.9602%" height="15" fill="rgb(209,138,14)" fg:x="0" fg:w="3006"/><text x="0.2500%" y="703.50">libruby.3.4.dylib`vm_call_cfunc_with_frame_</text></g><g><title>libruby.3.4.dylib`rb_f_load (3,006 samples, 43.96%)</title><rect x="0.0000%" y="677" width="43.9602%" height="15" fill="rgb(222,18,33)" fg:x="0" fg:w="3006"/><text x="0.2500%" y="687.50">libruby.3.4.dylib`rb_f_load</text></g><g><title>libruby.3.4.dylib`rb_load_internal (3,006 samples, 43.96%)</title><rect x="0.0000%" y="661" width="43.9602%" height="15" fill="rgb(213,199,7)" fg:x="0" fg:w="3006"/><text x="0.2500%" y="671.50">libruby.3.4.dylib`rb_load_internal</text></g><g><title>libruby.3.4.dylib`load_iseq_eval (3,006 samples, 43.96%)</title><rect x="0.0000%" y="645" width="43.9602%" height="15" fill="rgb(250,110,10)" fg:x="0" fg:w="3006"/><text x="0.2500%" y="655.50">libruby.3.4.dylib`load_iseq_eval</text></g><g><title>libruby.3.4.dylib`rb_vm_exec (3,006 samples, 43.96%)</title><rect x="0.0000%" y="629" width="43.9602%" height="15" fill="rgb(248,123,6)" fg:x="0" fg:w="3006"/><text x="0.2500%" y="639.50">libruby.3.4.dylib`rb_vm_exec</text></g><g><title>libruby.3.4.dylib`vm_exec_core (3,006 samples, 43.96%)</title><rect x="0.0000%" y="613" width="43.9602%" height="15" fill="rgb(206,91,31)" fg:x="0" fg:w="3006"/><text x="0.2500%" y="623.50">libruby.3.4.dylib`vm_exec_core</text></g><g><title>libruby.3.4.dylib`vm_call_cfunc_with_frame_ (3,006 samples, 43.96%)</title><rect x="0.0000%" y="597" width="43.9602%" height="15" fill="rgb(211,154,13)" fg:x="0" fg:w="3006"/><text x="0.2500%" y="607.50">libruby.3.4.dylib`vm_call_cfunc_with_frame_</text></g><g><title>libruby.3.4.dylib`rb_f_load (3,006 samples, 43.96%)</title><rect x="0.0000%" y="581" width="43.9602%" height="15" fill="rgb(225,148,7)" fg:x="0" fg:w="3006"/><text x="0.2500%" y="591.50">libruby.3.4.dylib`rb_f_load</text></g><g><title>libruby.3.4.dylib`rb_load_internal (3,006 samples, 43.96%)</title><rect x="0.0000%" y="565" width="43.9602%" height="15" fill="rgb(220,160,43)" fg:x="0" fg:w="3006"/><text x="0.2500%" y="575.50">libruby.3.4.dylib`rb_load_internal</text></g><g><title>libruby.3.4.dylib`load_iseq_eval (3,006 samples, 43.96%)</title><rect x="0.0000%" y="549" width="43.9602%" height="15" fill="rgb(213,52,39)" fg:x="0" fg:w="3006"/><text x="0.2500%" y="559.50">libruby.3.4.dylib`load_iseq_eval</text></g><g><title>libruby.3.4.dylib`rb_vm_exec (3,006 samples, 43.96%)</title><rect x="0.0000%" y="533" width="43.9602%" height="15" fill="rgb(243,137,7)" fg:x="0" fg:w="3006"/><text x="0.2500%" y="543.50">libruby.3.4.dylib`rb_vm_exec</text></g><g><title>libruby.3.4.dylib`vm_exec_core (3,006 samples, 43.96%)</title><rect x="0.0000%" y="517" width="43.9602%" height="15" fill="rgb(230,79,13)" fg:x="0" fg:w="3006"/><text x="0.2500%" y="527.50">libruby.3.4.dylib`vm_exec_core</text></g><g><title>libruby.3.4.dylib`vm_call_cfunc_with_frame_ (3,006 samples, 43.96%)</title><rect x="0.0000%" y="501" width="43.9602%" height="15" fill="rgb(247,105,23)" fg:x="0" fg:w="3006"/><text x="0.2500%" y="511.50">libruby.3.4.dylib`vm_call_cfunc_with_frame_</text></g><g><title>libruby.3.4.dylib`rb_f_load (3,006 samples, 43.96%)</title><rect x="0.0000%" y="485" width="43.9602%" height="15" fill="rgb(223,179,41)" fg:x="0" fg:w="3006"/><text x="0.2500%" y="495.50">libruby.3.4.dylib`rb_f_load</text></g><g><title>libruby.3.4.dylib`rb_load_internal (3,006 samples, 43.96%)</title><rect x="0.0000%" y="469" width="43.9602%" height="15" fill="rgb(218,9,34)" fg:x="0" fg:w="3006"/><text x="0.2500%" y="479.50">libruby.3.4.dylib`rb_load_internal</text></g><g><title>libruby.3.4.dylib`load_iseq_eval (3,006 samples, 43.96%)</title><rect x="0.0000%" y="453" width="43.9602%" height="15" fill="rgb(222,106,8)" fg:x="0" fg:w="3006"/><text x="0.2500%" y="463.50">libruby.3.4.dylib`load_iseq_eval</text></g><g><title>libruby.3.4.dylib`rb_vm_exec (3,006 samples, 43.96%)</title><rect x="0.0000%" y="437" width="43.9602%" height="15" fill="rgb(211,220,0)" fg:x="0" fg:w="3006"/><text x="0.2500%" y="447.50">libruby.3.4.dylib`rb_vm_exec</text></g><g><title>libruby.3.4.dylib`vm_exec_core (3,006 samples, 43.96%)</title><rect x="0.0000%" y="421" width="43.9602%" height="15" fill="rgb(229,52,16)" fg:x="0" fg:w="3006"/><text x="0.2500%" y="431.50">libruby.3.4.dylib`vm_exec_core</text></g><g><title>libruby.3.4.dylib`vm_call_cfunc_with_frame_ (3,006 samples, 43.96%)</title><rect x="0.0000%" y="405" width="43.9602%" height="15" fill="rgb(212,155,18)" fg:x="0" fg:w="3006"/><text x="0.2500%" y="415.50">libruby.3.4.dylib`vm_call_cfunc_with_frame_</text></g><g><title>itsi_server.bundle`itsi_server::init::anon (3,006 samples, 43.96%)</title><rect x="0.0000%" y="389" width="43.9602%" height="15" fill="rgb(242,21,14)" fg:x="0" fg:w="3006"/><text x="0.2500%" y="399.50">itsi_server.bundle`itsi_server::init::anon</text></g><g><title>libruby.3.4.dylib`rb_nogvl (3,006 samples, 43.96%)</title><rect x="0.0000%" y="373" width="43.9602%" height="15" fill="rgb(222,19,48)" fg:x="0" fg:w="3006"/><text x="0.2500%" y="383.50">libruby.3.4.dylib`rb_nogvl</text></g><g><title>itsi_server.bundle`itsi_rb_helpers::call_without_gvl::trampoline (3,006 samples, 43.96%)</title><rect x="0.0000%" y="357" width="43.9602%" height="15" fill="rgb(232,45,27)" fg:x="0" fg:w="3006"/><text x="0.2500%" y="367.50">itsi_server.bundle`itsi_rb_helpers::call_without_gvl::trampoline</text></g><g><title>itsi_server.bundle`itsi_server::server::serve_strategy::single_mode::SingleMode::run (3,006 samples, 43.96%)</title><rect x="0.0000%" y="341" width="43.9602%" height="15" fill="rgb(249,103,42)" fg:x="0" fg:w="3006"/><text x="0.2500%" y="351.50">itsi_server.bundle`itsi_server::server::serve_strategy::single_mode::Sin..</text></g><g><title>itsi_server.bundle`tokio::runtime::runtime::Runtime::block_on (3,006 samples, 43.96%)</title><rect x="0.0000%" y="325" width="43.9602%" height="15" fill="rgb(246,81,33)" fg:x="0" fg:w="3006"/><text x="0.2500%" y="335.50">itsi_server.bundle`tokio::runtime::runtime::Runtime::block_on</text></g><g><title>itsi_server.bundle`tokio::runtime::scheduler::defer::Defer::is_empty (3 samples, 0.04%)</title><rect x="43.9163%" y="309" width="0.0439%" height="15" fill="rgb(252,33,42)" fg:x="3003" fg:w="3"/><text x="44.1663%" y="319.50"></text></g><g><title>libruby.3.4.dylib`fiber_entry (1 samples, 0.01%)</title><rect x="43.9895%" y="773" width="0.0146%" height="15" fill="rgb(209,212,41)" fg:x="3008" fg:w="1"/><text x="44.2395%" y="783.50"></text></g><g><title>libruby.3.4.dylib`fiber_restore_thread (1 samples, 0.01%)</title><rect x="43.9895%" y="757" width="0.0146%" height="15" fill="rgb(207,154,6)" fg:x="3008" fg:w="1"/><text x="44.2395%" y="767.50"></text></g><g><title>libdyld.dylib`tlv_get_addr (1 samples, 0.01%)</title><rect x="43.9895%" y="741" width="0.0146%" height="15" fill="rgb(223,64,47)" fg:x="3008" fg:w="1"/><text x="44.2395%" y="751.50"></text></g><g><title>libruby.3.4.dylib`fiber_setcontext (1 samples, 0.01%)</title><rect x="44.0480%" y="725" width="0.0146%" height="15" fill="rgb(211,161,38)" fg:x="3012" fg:w="1"/><text x="44.2980%" y="735.50"></text></g><g><title>libdyld.dylib`tlv_get_addr (2 samples, 0.03%)</title><rect x="44.0626%" y="709" width="0.0292%" height="15" fill="rgb(219,138,40)" fg:x="3013" fg:w="2"/><text x="44.3126%" y="719.50"></text></g><g><title>libruby.3.4.dylib`coroutine_transfer (11 samples, 0.16%)</title><rect x="44.0918%" y="709" width="0.1609%" height="15" fill="rgb(241,228,46)" fg:x="3015" fg:w="11"/><text x="44.3418%" y="719.50"></text></g><g><title>libruby.3.4.dylib`rb_fiber_terminate (16 samples, 0.23%)</title><rect x="44.0333%" y="741" width="0.2340%" height="15" fill="rgb(223,209,38)" fg:x="3011" fg:w="16"/><text x="44.2833%" y="751.50"></text></g><g><title>libruby.3.4.dylib`fiber_switch (14 samples, 0.20%)</title><rect x="44.0626%" y="725" width="0.2047%" height="15" fill="rgb(236,164,45)" fg:x="3013" fg:w="14"/><text x="44.3126%" y="735.50"></text></g><g><title>libruby.3.4.dylib`fiber_setcontext (1 samples, 0.01%)</title><rect x="44.2527%" y="709" width="0.0146%" height="15" fill="rgb(231,15,5)" fg:x="3026" fg:w="1"/><text x="44.5027%" y="719.50"></text></g><g><title>libdyld.dylib`tlv_get_addr (1 samples, 0.01%)</title><rect x="44.2527%" y="693" width="0.0146%" height="15" fill="rgb(252,35,15)" fg:x="3026" fg:w="1"/><text x="44.5027%" y="703.50"></text></g><g><title>libruby.3.4.dylib`rb_vm_exec (1 samples, 0.01%)</title><rect x="44.2673%" y="741" width="0.0146%" height="15" fill="rgb(248,181,18)" fg:x="3027" fg:w="1"/><text x="44.5173%" y="751.50"></text></g><g><title>libruby.3.4.dylib`CALLER_SETUP_ARG (2 samples, 0.03%)</title><rect x="44.3551%" y="725" width="0.0292%" height="15" fill="rgb(233,39,42)" fg:x="3033" fg:w="2"/><text x="44.6051%" y="735.50"></text></g><g><title>libruby.3.4.dylib`hash_copy (1 samples, 0.01%)</title><rect x="44.3843%" y="709" width="0.0146%" height="15" fill="rgb(238,110,33)" fg:x="3035" fg:w="1"/><text x="44.6343%" y="719.50"></text></g><g><title>libruby.3.4.dylib`rb_ec_str_resurrect (1 samples, 0.01%)</title><rect x="44.3989%" y="709" width="0.0146%" height="15" fill="rgb(233,195,10)" fg:x="3036" fg:w="1"/><text x="44.6489%" y="719.50"></text></g><g><title>libruby.3.4.dylib`rb_gvar_get (2 samples, 0.03%)</title><rect x="44.4136%" y="709" width="0.0292%" height="15" fill="rgb(254,105,3)" fg:x="3037" fg:w="2"/><text x="44.6636%" y="719.50"></text></g><g><title>libruby.3.4.dylib`rb_ractor_stderr (2 samples, 0.03%)</title><rect x="44.4428%" y="709" width="0.0292%" height="15" fill="rgb(221,225,9)" fg:x="3039" fg:w="2"/><text x="44.6928%" y="719.50"></text></g><g><title>libruby.3.4.dylib`stderr_getter (2 samples, 0.03%)</title><rect x="44.4721%" y="709" width="0.0292%" height="15" fill="rgb(224,227,45)" fg:x="3041" fg:w="2"/><text x="44.7221%" y="719.50"></text></g><g><title>libruby.3.4.dylib`vm_call_cfunc_with_frame (3 samples, 0.04%)</title><rect x="44.5013%" y="709" width="0.0439%" height="15" fill="rgb(229,198,43)" fg:x="3043" fg:w="3"/><text x="44.7513%" y="719.50"></text></g><g><title>libruby.3.4.dylib`vm_call_cfunc_with_frame_ (7 samples, 0.10%)</title><rect x="44.5452%" y="709" width="0.1024%" height="15" fill="rgb(206,209,35)" fg:x="3046" fg:w="7"/><text x="44.7952%" y="719.50"></text></g><g><title>libruby.3.4.dylib`vm_call_iseq_setup_normal_0start (1 samples, 0.01%)</title><rect x="44.6476%" y="709" width="0.0146%" height="15" fill="rgb(245,195,53)" fg:x="3053" fg:w="1"/><text x="44.8976%" y="719.50"></text></g><g><title>libruby.3.4.dylib`vm_call_iseq_setup_normal_0start_0params_3locals (1 samples, 0.01%)</title><rect x="44.6622%" y="709" width="0.0146%" height="15" fill="rgb(240,92,26)" fg:x="3054" fg:w="1"/><text x="44.9122%" y="719.50"></text></g><g><title>libruby.3.4.dylib`vm_call_iseq_setup_normal_0start_2params_2locals (1 samples, 0.01%)</title><rect x="44.6768%" y="709" width="0.0146%" height="15" fill="rgb(207,40,23)" fg:x="3055" fg:w="1"/><text x="44.9268%" y="719.50"></text></g><g><title>libruby.3.4.dylib`vm_caller_setup_arg_block (1 samples, 0.01%)</title><rect x="44.6914%" y="709" width="0.0146%" height="15" fill="rgb(223,111,35)" fg:x="3056" fg:w="1"/><text x="44.9414%" y="719.50"></text></g><g><title>itsi_server.bundle`itsi_server::init::anon (7 samples, 0.10%)</title><rect x="47.1190%" y="693" width="0.1024%" height="15" fill="rgb(229,147,28)" fg:x="3222" fg:w="7"/><text x="47.3690%" y="703.50"></text></g><g><title>libruby.3.4.dylib`call_cfunc_0 (2 samples, 0.03%)</title><rect x="47.2214%" y="693" width="0.0292%" height="15" fill="rgb(211,29,28)" fg:x="3229" fg:w="2"/><text x="47.4714%" y="703.50"></text></g><g><title>libruby.3.4.dylib`hash_copy (2 samples, 0.03%)</title><rect x="47.2507%" y="693" width="0.0292%" height="15" fill="rgb(228,72,33)" fg:x="3231" fg:w="2"/><text x="47.5007%" y="703.50"></text></g><g><title>libruby.3.4.dylib`newobj_of (4 samples, 0.06%)</title><rect x="47.2799%" y="693" width="0.0585%" height="15" fill="rgb(205,214,31)" fg:x="3233" fg:w="4"/><text x="47.5299%" y="703.50"></text></g><g><title>libruby.3.4.dylib`obj_respond_to (1 samples, 0.01%)</title><rect x="47.3384%" y="693" width="0.0146%" height="15" fill="rgb(224,111,15)" fg:x="3237" fg:w="1"/><text x="47.5884%" y="703.50"></text></g><g><title>libruby.3.4.dylib`ractor_safe_call_cfunc_0 (2 samples, 0.03%)</title><rect x="47.3530%" y="693" width="0.0292%" height="15" fill="rgb(253,21,26)" fg:x="3238" fg:w="2"/><text x="47.6030%" y="703.50"></text></g><g><title>libruby.3.4.dylib`ractor_safe_call_cfunc_m1 (1 samples, 0.01%)</title><rect x="47.3823%" y="693" width="0.0146%" height="15" fill="rgb(245,139,43)" fg:x="3240" fg:w="1"/><text x="47.6323%" y="703.50"></text></g><g><title>libruby.3.4.dylib`ary_memcpy0 (1 samples, 0.01%)</title><rect x="47.4846%" y="677" width="0.0146%" height="15" fill="rgb(252,170,7)" fg:x="3247" fg:w="1"/><text x="47.7346%" y="687.50"></text></g><g><title>itsi_server.bundle`bytes::bytes_mut::shared_v_drop (1 samples, 0.01%)</title><rect x="47.6016%" y="501" width="0.0146%" height="15" fill="rgb(231,118,14)" fg:x="3255" fg:w="1"/><text x="47.8516%" y="511.50"></text></g><g><title>libsystem_malloc.dylib`free_small (1 samples, 0.01%)</title><rect x="47.6016%" y="485" width="0.0146%" height="15" fill="rgb(238,83,0)" fg:x="3255" fg:w="1"/><text x="47.8516%" y="495.50"></text></g><g><title>libsystem_malloc.dylib`small_free_list_add_ptr (1 samples, 0.01%)</title><rect x="47.6016%" y="469" width="0.0146%" height="15" fill="rgb(221,39,39)" fg:x="3255" fg:w="1"/><text x="47.8516%" y="479.50"></text></g><g><title>itsi_server.bundle`&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.03%)</title><rect x="47.6016%" y="517" width="0.0292%" height="15" fill="rgb(222,119,46)" fg:x="3255" fg:w="2"/><text x="47.8516%" y="527.50"></text></g><g><title>libsystem_malloc.dylib`_szone_free (1 samples, 0.01%)</title><rect x="47.6163%" y="501" width="0.0146%" height="15" fill="rgb(222,165,49)" fg:x="3256" fg:w="1"/><text x="47.8663%" y="511.50"></text></g><g><title>itsi_server.bundle`alloc::sync::Arc&lt;T,A&gt;::drop_slow (3 samples, 0.04%)</title><rect x="47.6016%" y="565" width="0.0439%" height="15" fill="rgb(219,113,52)" fg:x="3255" fg:w="3"/><text x="47.8516%" y="575.50"></text></g><g><title>itsi_server.bundle`core::ptr::drop_in_place&lt;http::request::Parts&gt; (3 samples, 0.04%)</title><rect x="47.6016%" y="549" width="0.0439%" height="15" fill="rgb(214,7,15)" fg:x="3255" fg:w="3"/><text x="47.8516%" y="559.50"></text></g><g><title>itsi_server.bundle`core::ptr::drop_in_place&lt;http::header::map::HeaderMap&gt; (3 samples, 0.04%)</title><rect x="47.6016%" y="533" width="0.0439%" height="15" fill="rgb(235,32,4)" fg:x="3255" fg:w="3"/><text x="47.8516%" y="543.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (1 samples, 0.01%)</title><rect x="47.6309%" y="517" width="0.0146%" height="15" fill="rgb(238,90,54)" fg:x="3257" fg:w="1"/><text x="47.8809%" y="527.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (1 samples, 0.01%)</title><rect x="47.6455%" y="517" width="0.0146%" height="15" fill="rgb(213,208,19)" fg:x="3258" fg:w="1"/><text x="47.8955%" y="527.50"></text></g><g><title>itsi_server.bundle`magnus::typed_data::DataTypeFunctions::extern_free (6 samples, 0.09%)</title><rect x="47.6016%" y="581" width="0.0877%" height="15" fill="rgb(233,156,4)" fg:x="3255" fg:w="6"/><text x="47.8516%" y="591.50"></text></g><g><title>itsi_server.bundle`core::ptr::drop_in_place&lt;itsi_server::request::itsi_request::ItsiRequest&gt; (3 samples, 0.04%)</title><rect x="47.6455%" y="565" width="0.0439%" height="15" fill="rgb(207,194,5)" fg:x="3258" fg:w="3"/><text x="47.8955%" y="575.50"></text></g><g><title>itsi_server.bundle`core::ptr::drop_in_place&lt;http::request::Parts&gt; (3 samples, 0.04%)</title><rect x="47.6455%" y="549" width="0.0439%" height="15" fill="rgb(206,111,30)" fg:x="3258" fg:w="3"/><text x="47.8955%" y="559.50"></text></g><g><title>itsi_server.bundle`core::ptr::drop_in_place&lt;http::header::map::HeaderMap&gt; (3 samples, 0.04%)</title><rect x="47.6455%" y="533" width="0.0439%" height="15" fill="rgb(243,70,54)" fg:x="3258" fg:w="3"/><text x="47.8955%" y="543.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (2 samples, 0.03%)</title><rect x="47.6601%" y="517" width="0.0292%" height="15" fill="rgb(242,28,8)" fg:x="3259" fg:w="2"/><text x="47.9101%" y="527.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (1 samples, 0.01%)</title><rect x="47.6748%" y="501" width="0.0146%" height="15" fill="rgb(219,106,18)" fg:x="3260" fg:w="1"/><text x="47.9248%" y="511.50"></text></g><g><title>libruby.3.4.dylib`cont_free (1 samples, 0.01%)</title><rect x="47.6894%" y="581" width="0.0146%" height="15" fill="rgb(244,222,10)" fg:x="3261" fg:w="1"/><text x="47.9394%" y="591.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (1 samples, 0.01%)</title><rect x="47.6894%" y="565" width="0.0146%" height="15" fill="rgb(236,179,52)" fg:x="3261" fg:w="1"/><text x="47.9394%" y="575.50"></text></g><g><title>libsystem_malloc.dylib`DYLD-STUB$$_platform_bzero (1 samples, 0.01%)</title><rect x="47.7040%" y="565" width="0.0146%" height="15" fill="rgb(213,23,39)" fg:x="3262" fg:w="1"/><text x="47.9540%" y="575.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (1 samples, 0.01%)</title><rect x="47.7186%" y="565" width="0.0146%" height="15" fill="rgb(238,48,10)" fg:x="3263" fg:w="1"/><text x="47.9686%" y="575.50"></text></g><g><title>libruby.3.4.dylib`ruby_xfree (3 samples, 0.04%)</title><rect x="47.7040%" y="581" width="0.0439%" height="15" fill="rgb(251,196,23)" fg:x="3262" fg:w="3"/><text x="47.9540%" y="591.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (1 samples, 0.01%)</title><rect x="47.7333%" y="565" width="0.0146%" height="15" fill="rgb(250,152,24)" fg:x="3264" fg:w="1"/><text x="47.9833%" y="575.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (1 samples, 0.01%)</title><rect x="47.7333%" y="549" width="0.0146%" height="15" fill="rgb(209,150,17)" fg:x="3264" fg:w="1"/><text x="47.9833%" y="559.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_add_ptr (1 samples, 0.01%)</title><rect x="47.7479%" y="549" width="0.0146%" height="15" fill="rgb(234,202,34)" fg:x="3265" fg:w="1"/><text x="47.9979%" y="559.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (2 samples, 0.03%)</title><rect x="47.7479%" y="581" width="0.0292%" height="15" fill="rgb(253,148,53)" fg:x="3265" fg:w="2"/><text x="47.9979%" y="591.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (2 samples, 0.03%)</title><rect x="47.7479%" y="565" width="0.0292%" height="15" fill="rgb(218,129,16)" fg:x="3265" fg:w="2"/><text x="47.9979%" y="575.50"></text></g><g><title>libsystem_malloc.dylib`tiny_madvise_free_range_no_lock (1 samples, 0.01%)</title><rect x="47.7625%" y="549" width="0.0146%" height="15" fill="rgb(216,85,19)" fg:x="3266" fg:w="1"/><text x="48.0125%" y="559.50"></text></g><g><title>libsystem_kernel.dylib`madvise (1 samples, 0.01%)</title><rect x="47.7625%" y="533" width="0.0146%" height="15" fill="rgb(235,228,7)" fg:x="3266" fg:w="1"/><text x="48.0125%" y="543.50"></text></g><g><title>libruby.3.4.dylib`rb_gc_obj_free (15 samples, 0.22%)</title><rect x="47.5724%" y="597" width="0.2194%" height="15" fill="rgb(245,175,0)" fg:x="3253" fg:w="15"/><text x="47.8224%" y="607.50"></text></g><g><title>libsystem_platform.dylib`_platform_memset (1 samples, 0.01%)</title><rect x="47.7771%" y="581" width="0.0146%" height="15" fill="rgb(208,168,36)" fg:x="3267" fg:w="1"/><text x="48.0271%" y="591.50"></text></g><g><title>libruby.3.4.dylib`gc_sweep_plane (22 samples, 0.32%)</title><rect x="47.5285%" y="613" width="0.3217%" height="15" fill="rgb(246,171,24)" fg:x="3250" fg:w="22"/><text x="47.7785%" y="623.50"></text></g><g><title>libruby.3.4.dylib`rb_gc_obj_free_vm_weak_references (4 samples, 0.06%)</title><rect x="47.7918%" y="597" width="0.0585%" height="15" fill="rgb(215,142,24)" fg:x="3268" fg:w="4"/><text x="48.0418%" y="607.50"></text></g><g><title>libruby.3.4.dylib`newobj_of (26 samples, 0.38%)</title><rect x="47.4993%" y="677" width="0.3802%" height="15" fill="rgb(250,187,7)" fg:x="3248" fg:w="26"/><text x="47.7493%" y="687.50"></text></g><g><title>libruby.3.4.dylib`newobj_cache_miss (24 samples, 0.35%)</title><rect x="47.5285%" y="661" width="0.3510%" height="15" fill="rgb(228,66,33)" fg:x="3250" fg:w="24"/><text x="47.7785%" y="671.50"></text></g><g><title>libruby.3.4.dylib`gc_continue (24 samples, 0.35%)</title><rect x="47.5285%" y="645" width="0.3510%" height="15" fill="rgb(234,215,21)" fg:x="3250" fg:w="24"/><text x="47.7785%" y="655.50"></text></g><g><title>libruby.3.4.dylib`gc_sweep_step (24 samples, 0.35%)</title><rect x="47.5285%" y="629" width="0.3510%" height="15" fill="rgb(222,191,20)" fg:x="3250" fg:w="24"/><text x="47.7785%" y="639.50"></text></g><g><title>libruby.3.4.dylib`rb_gc_obj_free_vm_weak_references (2 samples, 0.03%)</title><rect x="47.8502%" y="613" width="0.0292%" height="15" fill="rgb(245,79,54)" fg:x="3272" fg:w="2"/><text x="48.1002%" y="623.50"></text></g><g><title>libruby.3.4.dylib`rb_ec_ary_new_from_values (34 samples, 0.50%)</title><rect x="47.3969%" y="693" width="0.4972%" height="15" fill="rgb(240,10,37)" fg:x="3241" fg:w="34"/><text x="47.6469%" y="703.50"></text></g><g><title>libruby.3.4.dylib`rb_gc_writebarrier (1 samples, 0.01%)</title><rect x="47.8795%" y="677" width="0.0146%" height="15" fill="rgb(214,192,32)" fg:x="3274" fg:w="1"/><text x="48.1295%" y="687.50"></text></g><g><title>libruby.3.4.dylib`rb_ivar_defined (4 samples, 0.06%)</title><rect x="47.9672%" y="677" width="0.0585%" height="15" fill="rgb(209,36,54)" fg:x="3280" fg:w="4"/><text x="48.2172%" y="687.50"></text></g><g><title>libruby.3.4.dylib`rb_shape_get_iv_index (1 samples, 0.01%)</title><rect x="48.0111%" y="661" width="0.0146%" height="15" fill="rgb(220,10,11)" fg:x="3283" fg:w="1"/><text x="48.2611%" y="671.50"></text></g><g><title>libruby.3.4.dylib`rb_ec_str_resurrect (12 samples, 0.18%)</title><rect x="47.8941%" y="693" width="0.1755%" height="15" fill="rgb(221,106,17)" fg:x="3275" fg:w="12"/><text x="48.1441%" y="703.50"></text></g><g><title>libruby.3.4.dylib`rb_shape_obj_too_complex (3 samples, 0.04%)</title><rect x="48.0257%" y="677" width="0.0439%" height="15" fill="rgb(251,142,44)" fg:x="3284" fg:w="3"/><text x="48.2757%" y="687.50"></text></g><g><title>libruby.3.4.dylib`rb_gc_writebarrier (2 samples, 0.03%)</title><rect x="48.0696%" y="693" width="0.0292%" height="15" fill="rgb(238,13,15)" fg:x="3287" fg:w="2"/><text x="48.3196%" y="703.50"></text></g><g><title>libruby.3.4.dylib`rb_gc_writebarrier_remember (1 samples, 0.01%)</title><rect x="48.0989%" y="693" width="0.0146%" height="15" fill="rgb(208,107,27)" fg:x="3289" fg:w="1"/><text x="48.3489%" y="703.50"></text></g><g><title>libruby.3.4.dylib`rb_global_entry (1 samples, 0.01%)</title><rect x="48.1135%" y="693" width="0.0146%" height="15" fill="rgb(205,136,37)" fg:x="3290" fg:w="1"/><text x="48.3635%" y="703.50"></text></g><g><title>libruby.3.4.dylib`rb_gvar_get (2 samples, 0.03%)</title><rect x="48.1281%" y="693" width="0.0292%" height="15" fill="rgb(250,205,27)" fg:x="3291" fg:w="2"/><text x="48.3781%" y="703.50"></text></g><g><title>libruby.3.4.dylib`rb_global_entry (2 samples, 0.03%)</title><rect x="48.1281%" y="677" width="0.0292%" height="15" fill="rgb(210,80,43)" fg:x="3291" fg:w="2"/><text x="48.3781%" y="687.50"></text></g><g><title>libruby.3.4.dylib`rb_hash_bulk_insert (4 samples, 0.06%)</title><rect x="48.1574%" y="693" width="0.0585%" height="15" fill="rgb(247,160,36)" fg:x="3293" fg:w="4"/><text x="48.4074%" y="703.50"></text></g><g><title>libruby.3.4.dylib`ar_insert (4 samples, 0.06%)</title><rect x="48.1574%" y="677" width="0.0585%" height="15" fill="rgb(234,13,49)" fg:x="3293" fg:w="4"/><text x="48.4074%" y="687.50"></text></g><g><title>libruby.3.4.dylib`any_hash (2 samples, 0.03%)</title><rect x="48.1866%" y="661" width="0.0292%" height="15" fill="rgb(234,122,0)" fg:x="3295" fg:w="2"/><text x="48.4366%" y="671.50"></text></g><g><title>libdyld.dylib`tlv_get_addr (3 samples, 0.04%)</title><rect x="48.2159%" y="677" width="0.0439%" height="15" fill="rgb(207,146,38)" fg:x="3297" fg:w="3"/><text x="48.4659%" y="687.50"></text></g><g><title>libruby.3.4.dylib`newobj_of (1 samples, 0.01%)</title><rect x="48.2597%" y="677" width="0.0146%" height="15" fill="rgb(207,177,25)" fg:x="3300" fg:w="1"/><text x="48.5097%" y="687.50"></text></g><g><title>libruby.3.4.dylib`rb_hash_new_with_size (5 samples, 0.07%)</title><rect x="48.2159%" y="693" width="0.0731%" height="15" fill="rgb(211,178,42)" fg:x="3297" fg:w="5"/><text x="48.4659%" y="703.50"></text></g><g><title>libruby.3.4.dylib`rb_current_ec (1 samples, 0.01%)</title><rect x="48.2743%" y="677" width="0.0146%" height="15" fill="rgb(230,69,54)" fg:x="3301" fg:w="1"/><text x="48.5243%" y="687.50"></text></g><g><title>libruby.3.4.dylib`rb_hash_resurrect (3 samples, 0.04%)</title><rect x="48.2890%" y="693" width="0.0439%" height="15" fill="rgb(214,135,41)" fg:x="3302" fg:w="3"/><text x="48.5390%" y="703.50"></text></g><g><title>libruby.3.4.dylib`newobj_of (1 samples, 0.01%)</title><rect x="48.3182%" y="677" width="0.0146%" height="15" fill="rgb(237,67,25)" fg:x="3304" fg:w="1"/><text x="48.5682%" y="687.50"></text></g><g><title>libruby.3.4.dylib`rb_hash_update (1 samples, 0.01%)</title><rect x="48.3328%" y="693" width="0.0146%" height="15" fill="rgb(222,189,50)" fg:x="3305" fg:w="1"/><text x="48.5828%" y="703.50"></text></g><g><title>libruby.3.4.dylib`rb_ivar_defined (1 samples, 0.01%)</title><rect x="48.3475%" y="693" width="0.0146%" height="15" fill="rgb(245,148,34)" fg:x="3306" fg:w="1"/><text x="48.5975%" y="703.50"></text></g><g><title>itsi_server.bundle`&lt;alloc::string::String as core::clone::Clone&gt;::clone (2 samples, 0.03%)</title><rect x="49.0202%" y="677" width="0.0292%" height="15" fill="rgb(222,29,6)" fg:x="3352" fg:w="2"/><text x="49.2702%" y="687.50"></text></g><g><title>itsi_server.bundle`&lt;core::result::Result&lt;T,E&gt; as magnus::method::private::ReturnValue&gt;::into_return_value (1 samples, 0.01%)</title><rect x="49.0494%" y="677" width="0.0146%" height="15" fill="rgb(221,189,43)" fg:x="3354" fg:w="1"/><text x="49.2994%" y="687.50"></text></g><g><title>itsi_server.bundle`DYLD-STUB$$free (1 samples, 0.01%)</title><rect x="49.0641%" y="677" width="0.0146%" height="15" fill="rgb(207,36,27)" fg:x="3355" fg:w="1"/><text x="49.3141%" y="687.50"></text></g><g><title>itsi_server.bundle`DYLD-STUB$$rb_utf8_str_new (1 samples, 0.01%)</title><rect x="49.0787%" y="677" width="0.0146%" height="15" fill="rgb(217,90,24)" fg:x="3356" fg:w="1"/><text x="49.3287%" y="687.50"></text></g><g><title>itsi_server.bundle`__rdl_dealloc (1 samples, 0.01%)</title><rect x="49.0933%" y="677" width="0.0146%" height="15" fill="rgb(224,66,35)" fg:x="3357" fg:w="1"/><text x="49.3433%" y="687.50"></text></g><g><title>itsi_server.bundle`http::uri::Uri::port_u16 (2 samples, 0.03%)</title><rect x="49.1079%" y="677" width="0.0292%" height="15" fill="rgb(221,13,50)" fg:x="3358" fg:w="2"/><text x="49.3579%" y="687.50"></text></g><g><title>itsi_server.bundle`&lt;bytes::bytes::Bytes as core::convert::From&lt;alloc::vec::Vec&lt;u8&gt;&gt;&gt;::from (1 samples, 0.01%)</title><rect x="49.2980%" y="661" width="0.0146%" height="15" fill="rgb(236,68,49)" fg:x="3371" fg:w="1"/><text x="49.5480%" y="671.50"></text></g><g><title>itsi_server.bundle`&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (2 samples, 0.03%)</title><rect x="49.3127%" y="661" width="0.0292%" height="15" fill="rgb(229,146,28)" fg:x="3372" fg:w="2"/><text x="49.5627%" y="671.50"></text></g><g><title>itsi_server.bundle`magnus::error::protect::call (1 samples, 0.01%)</title><rect x="49.3712%" y="645" width="0.0146%" height="15" fill="rgb(225,31,38)" fg:x="3376" fg:w="1"/><text x="49.6212%" y="655.50"></text></g><g><title>libruby.3.4.dylib`newobj_of (2 samples, 0.03%)</title><rect x="49.3858%" y="645" width="0.0292%" height="15" fill="rgb(250,208,3)" fg:x="3377" fg:w="2"/><text x="49.6358%" y="655.50"></text></g><g><title>libruby.3.4.dylib`rb_current_ec (1 samples, 0.01%)</title><rect x="49.4150%" y="645" width="0.0146%" height="15" fill="rgb(246,54,23)" fg:x="3379" fg:w="1"/><text x="49.6650%" y="655.50"></text></g><g><title>libruby.3.4.dylib`rb_enc_raw_set (1 samples, 0.01%)</title><rect x="49.4297%" y="645" width="0.0146%" height="15" fill="rgb(243,76,11)" fg:x="3380" fg:w="1"/><text x="49.6797%" y="655.50"></text></g><g><title>libruby.3.4.dylib`rb_hash_aset (1 samples, 0.01%)</title><rect x="49.4443%" y="645" width="0.0146%" height="15" fill="rgb(245,21,50)" fg:x="3381" fg:w="1"/><text x="49.6943%" y="655.50"></text></g><g><title>libdyld.dylib`tlv_get_addr (2 samples, 0.03%)</title><rect x="49.4589%" y="629" width="0.0292%" height="15" fill="rgb(228,9,43)" fg:x="3382" fg:w="2"/><text x="49.7089%" y="639.50"></text></g><g><title>libruby.3.4.dylib`rb_hash_new (3 samples, 0.04%)</title><rect x="49.4589%" y="645" width="0.0439%" height="15" fill="rgb(208,100,47)" fg:x="3382" fg:w="3"/><text x="49.7089%" y="655.50"></text></g><g><title>libruby.3.4.dylib`rb_current_ec (1 samples, 0.01%)</title><rect x="49.4882%" y="629" width="0.0146%" height="15" fill="rgb(232,26,8)" fg:x="3384" fg:w="1"/><text x="49.7382%" y="639.50"></text></g><g><title>libruby.3.4.dylib`ar_update (1 samples, 0.01%)</title><rect x="49.5467%" y="613" width="0.0146%" height="15" fill="rgb(216,166,38)" fg:x="3388" fg:w="1"/><text x="49.7967%" y="623.50"></text></g><g><title>libruby.3.4.dylib`coderange_scan (2 samples, 0.03%)</title><rect x="49.5905%" y="565" width="0.0292%" height="15" fill="rgb(251,202,51)" fg:x="3391" fg:w="2"/><text x="49.8405%" y="575.50"></text></g><g><title>libruby.3.4.dylib`rb_str_hash (1 samples, 0.01%)</title><rect x="49.6198%" y="565" width="0.0146%" height="15" fill="rgb(254,216,34)" fg:x="3393" fg:w="1"/><text x="49.8698%" y="575.50"></text></g><g><title>libruby.3.4.dylib`any_hash (5 samples, 0.07%)</title><rect x="49.5905%" y="581" width="0.0731%" height="15" fill="rgb(251,32,27)" fg:x="3391" fg:w="5"/><text x="49.8405%" y="591.50"></text></g><g><title>libruby.3.4.dylib`str_do_hash (2 samples, 0.03%)</title><rect x="49.6344%" y="565" width="0.0292%" height="15" fill="rgb(208,127,28)" fg:x="3394" fg:w="2"/><text x="49.8844%" y="575.50"></text></g><g><title>libruby.3.4.dylib`coderange_scan (1 samples, 0.01%)</title><rect x="49.6490%" y="549" width="0.0146%" height="15" fill="rgb(224,137,22)" fg:x="3395" fg:w="1"/><text x="49.8990%" y="559.50"></text></g><g><title>libruby.3.4.dylib`fstring_cmp (1 samples, 0.01%)</title><rect x="49.6929%" y="533" width="0.0146%" height="15" fill="rgb(254,70,32)" fg:x="3398" fg:w="1"/><text x="49.9429%" y="543.50"></text></g><g><title>libruby.3.4.dylib`fstr_update_callback (1 samples, 0.01%)</title><rect x="49.7806%" y="517" width="0.0146%" height="15" fill="rgb(229,75,37)" fg:x="3404" fg:w="1"/><text x="50.0306%" y="527.50"></text></g><g><title>libruby.3.4.dylib`fstring_cmp (1 samples, 0.01%)</title><rect x="49.7953%" y="517" width="0.0146%" height="15" fill="rgb(252,64,23)" fg:x="3405" fg:w="1"/><text x="50.0453%" y="527.50"></text></g><g><title>libruby.3.4.dylib`fstring_hash (1 samples, 0.01%)</title><rect x="49.8099%" y="517" width="0.0146%" height="15" fill="rgb(232,162,48)" fg:x="3406" fg:w="1"/><text x="50.0599%" y="527.50"></text></g><g><title>libruby.3.4.dylib`rb_objspace_garbage_object_p (1 samples, 0.01%)</title><rect x="49.8245%" y="517" width="0.0146%" height="15" fill="rgb(246,160,12)" fg:x="3407" fg:w="1"/><text x="50.0745%" y="527.50"></text></g><g><title>libruby.3.4.dylib`ruby_sip_hash13 (5 samples, 0.07%)</title><rect x="49.8391%" y="517" width="0.0731%" height="15" fill="rgb(247,166,0)" fg:x="3408" fg:w="5"/><text x="50.0891%" y="527.50"></text></g><g><title>libruby.3.4.dylib`rb_st_update (16 samples, 0.23%)</title><rect x="49.7075%" y="533" width="0.2340%" height="15" fill="rgb(249,219,21)" fg:x="3399" fg:w="16"/><text x="49.9575%" y="543.50"></text></g><g><title>libsystem_platform.dylib`_platform_memcmp (2 samples, 0.03%)</title><rect x="49.9123%" y="517" width="0.0292%" height="15" fill="rgb(205,209,3)" fg:x="3413" fg:w="2"/><text x="50.1623%" y="527.50"></text></g><g><title>libruby.3.4.dylib`rb_fstring (19 samples, 0.28%)</title><rect x="49.6783%" y="549" width="0.2779%" height="15" fill="rgb(243,44,1)" fg:x="3397" fg:w="19"/><text x="49.9283%" y="559.50"></text></g><g><title>libruby.3.4.dylib`rb_str_resize (1 samples, 0.01%)</title><rect x="49.9415%" y="533" width="0.0146%" height="15" fill="rgb(206,159,16)" fg:x="3415" fg:w="1"/><text x="50.1915%" y="543.50"></text></g><g><title>libruby.3.4.dylib`hash_aset_str_insert (22 samples, 0.32%)</title><rect x="49.6636%" y="565" width="0.3217%" height="15" fill="rgb(244,77,30)" fg:x="3396" fg:w="22"/><text x="49.9136%" y="575.50"></text></g><g><title>libruby.3.4.dylib`rb_st_update (2 samples, 0.03%)</title><rect x="49.9561%" y="549" width="0.0292%" height="15" fill="rgb(218,69,12)" fg:x="3416" fg:w="2"/><text x="50.2061%" y="559.50"></text></g><g><title>libruby.3.4.dylib`ar_update (30 samples, 0.44%)</title><rect x="49.5759%" y="597" width="0.4387%" height="15" fill="rgb(212,87,7)" fg:x="3390" fg:w="30"/><text x="49.8259%" y="607.50"></text></g><g><title>libruby.3.4.dylib`tbl_update_modify (24 samples, 0.35%)</title><rect x="49.6636%" y="581" width="0.3510%" height="15" fill="rgb(245,114,25)" fg:x="3396" fg:w="24"/><text x="49.9136%" y="591.50"></text></g><g><title>libruby.3.4.dylib`rb_fstring (2 samples, 0.03%)</title><rect x="49.9854%" y="565" width="0.0292%" height="15" fill="rgb(210,61,42)" fg:x="3418" fg:w="2"/><text x="50.2354%" y="575.50"></text></g><g><title>libruby.3.4.dylib`rb_gc_writebarrier (2 samples, 0.03%)</title><rect x="50.0146%" y="597" width="0.0292%" height="15" fill="rgb(211,52,33)" fg:x="3420" fg:w="2"/><text x="50.2646%" y="607.50"></text></g><g><title>libruby.3.4.dylib`rb_protect (39 samples, 0.57%)</title><rect x="49.5028%" y="645" width="0.5703%" height="15" fill="rgb(234,58,33)" fg:x="3385" fg:w="39"/><text x="49.7528%" y="655.50"></text></g><g><title>libruby.3.4.dylib`rb_hash_aset (36 samples, 0.53%)</title><rect x="49.5467%" y="629" width="0.5265%" height="15" fill="rgb(220,115,36)" fg:x="3388" fg:w="36"/><text x="49.7967%" y="639.50"></text></g><g><title>libruby.3.4.dylib`tbl_update (35 samples, 0.51%)</title><rect x="49.5613%" y="613" width="0.5118%" height="15" fill="rgb(243,153,54)" fg:x="3389" fg:w="35"/><text x="49.8113%" y="623.50"></text></g><g><title>libruby.3.4.dylib`tbl_update_modify (2 samples, 0.03%)</title><rect x="50.0439%" y="597" width="0.0292%" height="15" fill="rgb(251,47,18)" fg:x="3422" fg:w="2"/><text x="50.2939%" y="607.50"></text></g><g><title>libruby.3.4.dylib`rb_wb_protected_newobj_of (1 samples, 0.01%)</title><rect x="50.0731%" y="645" width="0.0146%" height="15" fill="rgb(242,102,42)" fg:x="3424" fg:w="1"/><text x="50.3231%" y="655.50"></text></g><g><title>itsi_server.bundle`&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.03%)</title><rect x="50.2632%" y="469" width="0.0292%" height="15" fill="rgb(234,31,38)" fg:x="3437" fg:w="2"/><text x="50.5132%" y="479.50"></text></g><g><title>itsi_server.bundle`bytes::bytes_mut::shared_v_drop (2 samples, 0.03%)</title><rect x="50.2632%" y="453" width="0.0292%" height="15" fill="rgb(221,117,51)" fg:x="3437" fg:w="2"/><text x="50.5132%" y="463.50"></text></g><g><title>libsystem_malloc.dylib`free_small (2 samples, 0.03%)</title><rect x="50.2632%" y="437" width="0.0292%" height="15" fill="rgb(212,20,18)" fg:x="3437" fg:w="2"/><text x="50.5132%" y="447.50"></text></g><g><title>libsystem_malloc.dylib`small_free_list_remove_ptr_no_clear (1 samples, 0.01%)</title><rect x="50.2779%" y="421" width="0.0146%" height="15" fill="rgb(245,133,36)" fg:x="3438" fg:w="1"/><text x="50.5279%" y="431.50"></text></g><g><title>itsi_server.bundle`alloc::sync::Arc&lt;T,A&gt;::drop_slow (3 samples, 0.04%)</title><rect x="50.2632%" y="517" width="0.0439%" height="15" fill="rgb(212,6,19)" fg:x="3437" fg:w="3"/><text x="50.5132%" y="527.50"></text></g><g><title>itsi_server.bundle`core::ptr::drop_in_place&lt;http::request::Parts&gt; (3 samples, 0.04%)</title><rect x="50.2632%" y="501" width="0.0439%" height="15" fill="rgb(218,1,36)" fg:x="3437" fg:w="3"/><text x="50.5132%" y="511.50"></text></g><g><title>itsi_server.bundle`core::ptr::drop_in_place&lt;http::header::map::HeaderMap&gt; (3 samples, 0.04%)</title><rect x="50.2632%" y="485" width="0.0439%" height="15" fill="rgb(246,84,54)" fg:x="3437" fg:w="3"/><text x="50.5132%" y="495.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (1 samples, 0.01%)</title><rect x="50.2925%" y="469" width="0.0146%" height="15" fill="rgb(242,110,6)" fg:x="3439" fg:w="1"/><text x="50.5425%" y="479.50"></text></g><g><title>itsi_server.bundle`core::ptr::drop_in_place&lt;itsi_server::request::itsi_request::ItsiRequest&gt; (1 samples, 0.01%)</title><rect x="50.3071%" y="517" width="0.0146%" height="15" fill="rgb(214,47,5)" fg:x="3440" fg:w="1"/><text x="50.5571%" y="527.50"></text></g><g><title>itsi_server.bundle`core::ptr::drop_in_place&lt;http::request::Parts&gt; (1 samples, 0.01%)</title><rect x="50.3071%" y="501" width="0.0146%" height="15" fill="rgb(218,159,25)" fg:x="3440" fg:w="1"/><text x="50.5571%" y="511.50"></text></g><g><title>itsi_server.bundle`core::ptr::drop_in_place&lt;http::header::map::HeaderMap&gt; (1 samples, 0.01%)</title><rect x="50.3071%" y="485" width="0.0146%" height="15" fill="rgb(215,211,28)" fg:x="3440" fg:w="1"/><text x="50.5571%" y="495.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (1 samples, 0.01%)</title><rect x="50.3071%" y="469" width="0.0146%" height="15" fill="rgb(238,59,32)" fg:x="3440" fg:w="1"/><text x="50.5571%" y="479.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (1 samples, 0.01%)</title><rect x="50.3071%" y="453" width="0.0146%" height="15" fill="rgb(226,82,3)" fg:x="3440" fg:w="1"/><text x="50.5571%" y="463.50"></text></g><g><title>itsi_server.bundle`magnus::typed_data::DataTypeFunctions::extern_free (7 samples, 0.10%)</title><rect x="50.2632%" y="533" width="0.1024%" height="15" fill="rgb(240,164,32)" fg:x="3437" fg:w="7"/><text x="50.5132%" y="543.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (3 samples, 0.04%)</title><rect x="50.3217%" y="517" width="0.0439%" height="15" fill="rgb(232,46,7)" fg:x="3441" fg:w="3"/><text x="50.5717%" y="527.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (1 samples, 0.01%)</title><rect x="50.3510%" y="501" width="0.0146%" height="15" fill="rgb(229,129,53)" fg:x="3443" fg:w="1"/><text x="50.6010%" y="511.50"></text></g><g><title>libruby.3.4.dylib`DYLD-STUB$$free (1 samples, 0.01%)</title><rect x="50.3656%" y="533" width="0.0146%" height="15" fill="rgb(234,188,29)" fg:x="3444" fg:w="1"/><text x="50.6156%" y="543.50"></text></g><g><title>libruby.3.4.dylib`ruby_xfree (1 samples, 0.01%)</title><rect x="50.3802%" y="533" width="0.0146%" height="15" fill="rgb(246,141,4)" fg:x="3445" fg:w="1"/><text x="50.6302%" y="543.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (1 samples, 0.01%)</title><rect x="50.3802%" y="517" width="0.0146%" height="15" fill="rgb(229,23,39)" fg:x="3445" fg:w="1"/><text x="50.6302%" y="527.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (1 samples, 0.01%)</title><rect x="50.3949%" y="533" width="0.0146%" height="15" fill="rgb(206,12,3)" fg:x="3446" fg:w="1"/><text x="50.6449%" y="543.50"></text></g><g><title>libruby.3.4.dylib`rb_gc_obj_free (15 samples, 0.22%)</title><rect x="50.2194%" y="549" width="0.2194%" height="15" fill="rgb(252,226,20)" fg:x="3434" fg:w="15"/><text x="50.4694%" y="559.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (2 samples, 0.03%)</title><rect x="50.4095%" y="533" width="0.0292%" height="15" fill="rgb(216,123,35)" fg:x="3447" fg:w="2"/><text x="50.6595%" y="543.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (2 samples, 0.03%)</title><rect x="50.4095%" y="517" width="0.0292%" height="15" fill="rgb(212,68,40)" fg:x="3447" fg:w="2"/><text x="50.6595%" y="527.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_remove_ptr (2 samples, 0.03%)</title><rect x="50.4095%" y="501" width="0.0292%" height="15" fill="rgb(254,125,32)" fg:x="3447" fg:w="2"/><text x="50.6595%" y="511.50"></text></g><g><title>libruby.3.4.dylib`rb_gc_obj_free_vm_weak_references (1 samples, 0.01%)</title><rect x="50.4387%" y="549" width="0.0146%" height="15" fill="rgb(253,97,22)" fg:x="3449" fg:w="1"/><text x="50.6887%" y="559.50"></text></g><g><title>libruby.3.4.dylib`rb_str_free (1 samples, 0.01%)</title><rect x="50.4533%" y="549" width="0.0146%" height="15" fill="rgb(241,101,14)" fg:x="3450" fg:w="1"/><text x="50.7033%" y="559.50"></text></g><g><title>libruby.3.4.dylib`newobj_of (24 samples, 0.35%)</title><rect x="50.1316%" y="629" width="0.3510%" height="15" fill="rgb(238,103,29)" fg:x="3428" fg:w="24"/><text x="50.3816%" y="639.50"></text></g><g><title>libruby.3.4.dylib`newobj_cache_miss (21 samples, 0.31%)</title><rect x="50.1755%" y="613" width="0.3071%" height="15" fill="rgb(233,195,47)" fg:x="3431" fg:w="21"/><text x="50.4255%" y="623.50"></text></g><g><title>libruby.3.4.dylib`gc_continue (21 samples, 0.31%)</title><rect x="50.1755%" y="597" width="0.3071%" height="15" fill="rgb(246,218,30)" fg:x="3431" fg:w="21"/><text x="50.4255%" y="607.50"></text></g><g><title>libruby.3.4.dylib`gc_sweep_step (21 samples, 0.31%)</title><rect x="50.1755%" y="581" width="0.3071%" height="15" fill="rgb(219,145,47)" fg:x="3431" fg:w="21"/><text x="50.4255%" y="591.50"></text></g><g><title>libruby.3.4.dylib`gc_sweep_plane (21 samples, 0.31%)</title><rect x="50.1755%" y="565" width="0.3071%" height="15" fill="rgb(243,12,26)" fg:x="3431" fg:w="21"/><text x="50.4255%" y="575.50"></text></g><g><title>libsystem_malloc.dylib`malloc_size (1 samples, 0.01%)</title><rect x="50.4680%" y="549" width="0.0146%" height="15" fill="rgb(214,87,16)" fg:x="3451" fg:w="1"/><text x="50.7180%" y="559.50"></text></g><g><title>libruby.3.4.dylib`str_enc_new (29 samples, 0.42%)</title><rect x="50.0877%" y="645" width="0.4241%" height="15" fill="rgb(208,99,42)" fg:x="3425" fg:w="29"/><text x="50.3377%" y="655.50"></text></g><g><title>libruby.3.4.dylib`rb_enc_raw_set (2 samples, 0.03%)</title><rect x="50.4826%" y="629" width="0.0292%" height="15" fill="rgb(253,99,2)" fg:x="3452" fg:w="2"/><text x="50.7326%" y="639.50"></text></g><g><title>libruby.3.4.dylib`typed_data_alloc (2 samples, 0.03%)</title><rect x="50.5118%" y="645" width="0.0292%" height="15" fill="rgb(220,168,23)" fg:x="3454" fg:w="2"/><text x="50.7618%" y="655.50"></text></g><g><title>libruby.3.4.dylib`rb_get_alloc_func (2 samples, 0.03%)</title><rect x="50.5118%" y="629" width="0.0292%" height="15" fill="rgb(242,38,24)" fg:x="3454" fg:w="2"/><text x="50.7618%" y="639.50"></text></g><g><title>libsystem_malloc.dylib`DYLD-STUB$$_platform_bzero (1 samples, 0.01%)</title><rect x="50.5411%" y="645" width="0.0146%" height="15" fill="rgb(225,182,9)" fg:x="3456" fg:w="1"/><text x="50.7911%" y="655.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (3 samples, 0.04%)</title><rect x="50.5557%" y="645" width="0.0439%" height="15" fill="rgb(243,178,37)" fg:x="3457" fg:w="3"/><text x="50.8057%" y="655.50"></text></g><g><title>itsi_server.bundle`&lt;core::result::Result&lt;T,E&gt; as magnus::method::private::ReturnValue&gt;::into_return_value (87 samples, 1.27%)</title><rect x="49.3419%" y="661" width="1.2723%" height="15" fill="rgb(232,139,19)" fg:x="3374" fg:w="87"/><text x="49.5919%" y="671.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (1 samples, 0.01%)</title><rect x="50.5996%" y="645" width="0.0146%" height="15" fill="rgb(225,201,24)" fg:x="3460" fg:w="1"/><text x="50.8496%" y="655.50"></text></g><g><title>itsi_server.bundle`&lt;alloc::string::String as core::fmt::Write&gt;::write_str (2 samples, 0.03%)</title><rect x="50.7605%" y="613" width="0.0292%" height="15" fill="rgb(221,47,46)" fg:x="3471" fg:w="2"/><text x="51.0105%" y="623.50"></text></g><g><title>itsi_server.bundle`DYLD-STUB$$memcpy (1 samples, 0.01%)</title><rect x="50.8190%" y="597" width="0.0146%" height="15" fill="rgb(249,23,13)" fg:x="3475" fg:w="1"/><text x="51.0690%" y="607.50"></text></g><g><title>itsi_server.bundle`alloc::fmt::format::format_inner (11 samples, 0.16%)</title><rect x="50.7458%" y="629" width="0.1609%" height="15" fill="rgb(219,9,5)" fg:x="3470" fg:w="11"/><text x="50.9958%" y="639.50"></text></g><g><title>itsi_server.bundle`core::fmt::write (8 samples, 0.12%)</title><rect x="50.7897%" y="613" width="0.1170%" height="15" fill="rgb(254,171,16)" fg:x="3473" fg:w="8"/><text x="51.0397%" y="623.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (5 samples, 0.07%)</title><rect x="50.8336%" y="597" width="0.0731%" height="15" fill="rgb(230,171,20)" fg:x="3476" fg:w="5"/><text x="51.0836%" y="607.50"></text></g><g><title>itsi_server.bundle`alloc::str::_&lt;impl str&gt;::to_uppercase (1 samples, 0.01%)</title><rect x="50.9067%" y="629" width="0.0146%" height="15" fill="rgb(210,71,41)" fg:x="3481" fg:w="1"/><text x="51.1567%" y="639.50"></text></g><g><title>itsi_server.bundle`core::fmt::write (1 samples, 0.01%)</title><rect x="50.9213%" y="629" width="0.0146%" height="15" fill="rgb(206,173,20)" fg:x="3482" fg:w="1"/><text x="51.1713%" y="639.50"></text></g><g><title>itsi_server.bundle`&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (3 samples, 0.04%)</title><rect x="50.9359%" y="613" width="0.0439%" height="15" fill="rgb(233,88,34)" fg:x="3483" fg:w="3"/><text x="51.1859%" y="623.50"></text></g><g><title>itsi_server.bundle`hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (4 samples, 0.06%)</title><rect x="50.9359%" y="629" width="0.0585%" height="15" fill="rgb(223,209,46)" fg:x="3483" fg:w="4"/><text x="51.1859%" y="639.50"></text></g><g><title>itsi_server.bundle`core::hash::BuildHasher::hash_one (1 samples, 0.01%)</title><rect x="50.9798%" y="613" width="0.0146%" height="15" fill="rgb(250,43,18)" fg:x="3486" fg:w="1"/><text x="51.2298%" y="623.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (7 samples, 0.10%)</title><rect x="50.9944%" y="629" width="0.1024%" height="15" fill="rgb(208,13,10)" fg:x="3487" fg:w="7"/><text x="51.2444%" y="639.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (2 samples, 0.03%)</title><rect x="51.0968%" y="629" width="0.0292%" height="15" fill="rgb(212,200,36)" fg:x="3494" fg:w="2"/><text x="51.3468%" y="639.50"></text></g><g><title>libsystem_malloc.dylib`malloc (1 samples, 0.01%)</title><rect x="51.1261%" y="629" width="0.0146%" height="15" fill="rgb(225,90,30)" fg:x="3496" fg:w="1"/><text x="51.3761%" y="639.50"></text></g><g><title>itsi_server.bundle`&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (37 samples, 0.54%)</title><rect x="50.6288%" y="645" width="0.5411%" height="15" fill="rgb(236,182,39)" fg:x="3462" fg:w="37"/><text x="50.8788%" y="655.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (2 samples, 0.03%)</title><rect x="51.1407%" y="629" width="0.0292%" height="15" fill="rgb(212,144,35)" fg:x="3497" fg:w="2"/><text x="51.3907%" y="639.50"></text></g><g><title>itsi_server.bundle`DYLD-STUB$$free (2 samples, 0.03%)</title><rect x="51.1699%" y="645" width="0.0292%" height="15" fill="rgb(228,63,44)" fg:x="3499" fg:w="2"/><text x="51.4199%" y="655.50"></text></g><g><title>itsi_server.bundle`alloc::str::_&lt;impl str&gt;::to_uppercase (1 samples, 0.01%)</title><rect x="51.1992%" y="645" width="0.0146%" height="15" fill="rgb(228,109,6)" fg:x="3501" fg:w="1"/><text x="51.4492%" y="655.50"></text></g><g><title>itsi_server.bundle`hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.01%)</title><rect x="51.2138%" y="645" width="0.0146%" height="15" fill="rgb(238,117,24)" fg:x="3502" fg:w="1"/><text x="51.4638%" y="655.50"></text></g><g><title>itsi_server.bundle`hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (1 samples, 0.01%)</title><rect x="51.2284%" y="645" width="0.0146%" height="15" fill="rgb(242,26,26)" fg:x="3503" fg:w="1"/><text x="51.4784%" y="655.50"></text></g><g><title>itsi_server.bundle`http::header::value::HeaderValue::to_str (12 samples, 0.18%)</title><rect x="51.2431%" y="645" width="0.1755%" height="15" fill="rgb(221,92,48)" fg:x="3504" fg:w="12"/><text x="51.4931%" y="655.50"></text></g><g><title>libsystem_malloc.dylib`_free (1 samples, 0.01%)</title><rect x="51.4185%" y="645" width="0.0146%" height="15" fill="rgb(209,209,32)" fg:x="3516" fg:w="1"/><text x="51.6685%" y="655.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (2 samples, 0.03%)</title><rect x="51.4332%" y="645" width="0.0292%" height="15" fill="rgb(221,70,22)" fg:x="3517" fg:w="2"/><text x="51.6832%" y="655.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (2 samples, 0.03%)</title><rect x="51.4624%" y="645" width="0.0292%" height="15" fill="rgb(248,145,5)" fg:x="3519" fg:w="2"/><text x="51.7124%" y="655.50"></text></g><g><title>itsi_server.bundle`&lt;std::collections::hash::map::HashMap&lt;K,V,S&gt; as core::iter::traits::collect::FromIterator&lt;(K,V)&gt;&gt;::from_iter (64 samples, 0.94%)</title><rect x="50.6142%" y="661" width="0.9359%" height="15" fill="rgb(226,116,26)" fg:x="3461" fg:w="64"/><text x="50.8642%" y="671.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (4 samples, 0.06%)</title><rect x="51.4917%" y="645" width="0.0585%" height="15" fill="rgb(244,5,17)" fg:x="3521" fg:w="4"/><text x="51.7417%" y="655.50"></text></g><g><title>itsi_server.bundle`DYLD-STUB$$free (1 samples, 0.01%)</title><rect x="51.5502%" y="661" width="0.0146%" height="15" fill="rgb(252,159,33)" fg:x="3525" fg:w="1"/><text x="51.8002%" y="671.50"></text></g><g><title>itsi_server.bundle`DYLD-STUB$$malloc (1 samples, 0.01%)</title><rect x="51.5648%" y="661" width="0.0146%" height="15" fill="rgb(206,71,0)" fg:x="3526" fg:w="1"/><text x="51.8148%" y="671.50"></text></g><g><title>itsi_server.bundle`DYLD-STUB$$memcpy (1 samples, 0.01%)</title><rect x="51.5794%" y="661" width="0.0146%" height="15" fill="rgb(233,118,54)" fg:x="3527" fg:w="1"/><text x="51.8294%" y="671.50"></text></g><g><title>itsi_server.bundle`DYLD-STUB$$rb_hash_new (2 samples, 0.03%)</title><rect x="51.5940%" y="661" width="0.0292%" height="15" fill="rgb(234,83,48)" fg:x="3528" fg:w="2"/><text x="51.8440%" y="671.50"></text></g><g><title>itsi_server.bundle`DYLD-STUB$$rb_protect (4 samples, 0.06%)</title><rect x="51.6233%" y="661" width="0.0585%" height="15" fill="rgb(228,3,54)" fg:x="3530" fg:w="4"/><text x="51.8733%" y="671.50"></text></g><g><title>itsi_server.bundle`hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (1 samples, 0.01%)</title><rect x="51.6818%" y="661" width="0.0146%" height="15" fill="rgb(226,155,13)" fg:x="3534" fg:w="1"/><text x="51.9318%" y="671.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (2 samples, 0.03%)</title><rect x="51.6964%" y="645" width="0.0292%" height="15" fill="rgb(241,28,37)" fg:x="3535" fg:w="2"/><text x="51.9464%" y="655.50"></text></g><g><title>itsi_server.bundle`itsi_server::request::itsi_request::ItsiRequest::scheme (3 samples, 0.04%)</title><rect x="51.6964%" y="661" width="0.0439%" height="15" fill="rgb(233,93,10)" fg:x="3535" fg:w="3"/><text x="51.9464%" y="671.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (1 samples, 0.01%)</title><rect x="51.7257%" y="645" width="0.0146%" height="15" fill="rgb(225,113,19)" fg:x="3537" fg:w="1"/><text x="51.9757%" y="655.50"></text></g><g><title>itsi_server.bundle`&lt;tokio::sync::batch_semaphore::Acquire as core::future::future::Future&gt;::poll (1 samples, 0.01%)</title><rect x="51.8280%" y="629" width="0.0146%" height="15" fill="rgb(241,2,18)" fg:x="3544" fg:w="1"/><text x="52.0780%" y="639.50"></text></g><g><title>itsi_server.bundle`&lt;tokio::sync::batch_semaphore::Acquire as core::future::future::Future&gt;::poll (3 samples, 0.04%)</title><rect x="51.9304%" y="613" width="0.0439%" height="15" fill="rgb(228,207,21)" fg:x="3551" fg:w="3"/><text x="52.1804%" y="623.50"></text></g><g><title>itsi_server.bundle`tokio::runtime::context::with_scheduler (1 samples, 0.01%)</title><rect x="51.9743%" y="613" width="0.0146%" height="15" fill="rgb(213,211,35)" fg:x="3554" fg:w="1"/><text x="52.2243%" y="623.50"></text></g><g><title>itsi_server.bundle`mio::waker::Waker::wake (3 samples, 0.04%)</title><rect x="52.0328%" y="581" width="0.0439%" height="15" fill="rgb(209,83,10)" fg:x="3558" fg:w="3"/><text x="52.2828%" y="591.50"></text></g><g><title>itsi_server.bundle`tokio::runtime::driver::Handle::unpark (286 samples, 4.18%)</title><rect x="52.0766%" y="581" width="4.1825%" height="15" fill="rgb(209,164,1)" fg:x="3561" fg:w="286"/><text x="52.3266%" y="591.50">itsi_..</text></g><g><title>libsystem_kernel.dylib`kevent (283 samples, 4.14%)</title><rect x="52.1205%" y="565" width="4.1386%" height="15" fill="rgb(213,184,43)" fg:x="3564" fg:w="283"/><text x="52.3705%" y="575.50">libsy..</text></g><g><title>itsi_server.bundle`tokio::runtime::context::with_scheduler (296 samples, 4.33%)</title><rect x="52.0181%" y="597" width="4.3288%" height="15" fill="rgb(231,61,34)" fg:x="3557" fg:w="296"/><text x="52.2681%" y="607.50">itsi_..</text></g><g><title>itsi_server.bundle`tokio::runtime::scheduler::inject::Inject&lt;T&gt;::push (6 samples, 0.09%)</title><rect x="56.2591%" y="581" width="0.0877%" height="15" fill="rgb(235,75,3)" fg:x="3847" fg:w="6"/><text x="56.5091%" y="591.50"></text></g><g><title>itsi_server.bundle`tokio::runtime::task::state::State::transition_to_notified_by_val (2 samples, 0.03%)</title><rect x="56.3469%" y="597" width="0.0292%" height="15" fill="rgb(220,106,47)" fg:x="3853" fg:w="2"/><text x="56.5969%" y="607.50"></text></g><g><title>itsi_server.bundle`tokio::runtime::task::waker::wake_by_val (301 samples, 4.40%)</title><rect x="51.9889%" y="613" width="4.4019%" height="15" fill="rgb(210,196,33)" fg:x="3555" fg:w="301"/><text x="52.2389%" y="623.50">itsi_..</text></g><g><title>libdyld.dylib`tlv_get_addr (1 samples, 0.01%)</title><rect x="56.3761%" y="597" width="0.0146%" height="15" fill="rgb(229,154,42)" fg:x="3855" fg:w="1"/><text x="56.6261%" y="607.50"></text></g><g><title>itsi_server.bundle`tokio::future::block_on::block_on (317 samples, 4.64%)</title><rect x="51.8426%" y="629" width="4.6359%" height="15" fill="rgb(228,114,26)" fg:x="3545" fg:w="317"/><text x="52.0926%" y="639.50">itsi_..</text></g><g><title>libdyld.dylib`tlv_get_addr (6 samples, 0.09%)</title><rect x="56.3908%" y="613" width="0.0877%" height="15" fill="rgb(208,144,1)" fg:x="3856" fg:w="6"/><text x="56.6408%" y="623.50"></text></g><g><title>itsi_server.bundle`itsi_server::response::itsi_response::ItsiResponse::send_frame_into (323 samples, 4.72%)</title><rect x="51.7988%" y="645" width="4.7236%" height="15" fill="rgb(239,112,37)" fg:x="3542" fg:w="323"/><text x="52.0488%" y="655.50">itsi_s..</text></g><g><title>itsi_server.bundle`tokio::sync::task::atomic_waker::AtomicWaker::wake (3 samples, 0.04%)</title><rect x="56.4785%" y="629" width="0.0439%" height="15" fill="rgb(210,96,50)" fg:x="3862" fg:w="3"/><text x="56.7285%" y="639.50"></text></g><g><title>itsi_server.bundle`itsi_server::response::itsi_response::ItsiResponse::send_and_close (329 samples, 4.81%)</title><rect x="51.7403%" y="661" width="4.8113%" height="15" fill="rgb(222,178,2)" fg:x="3538" fg:w="329"/><text x="51.9903%" y="671.50">itsi_s..</text></g><g><title>itsi_server.bundle`tokio::future::block_on::block_on (2 samples, 0.03%)</title><rect x="56.5224%" y="645" width="0.0292%" height="15" fill="rgb(226,74,18)" fg:x="3865" fg:w="2"/><text x="56.7724%" y="655.50"></text></g><g><title>itsi_server.bundle`itsi_server::response::itsi_response::ItsiResponse::send_frame_into (1 samples, 0.01%)</title><rect x="56.5516%" y="661" width="0.0146%" height="15" fill="rgb(225,67,54)" fg:x="3867" fg:w="1"/><text x="56.8016%" y="671.50"></text></g><g><title>itsi_server.bundle`itsi_server::response::itsi_response::ItsiResponse::set_status (2 samples, 0.03%)</title><rect x="56.5662%" y="661" width="0.0292%" height="15" fill="rgb(251,92,32)" fg:x="3868" fg:w="2"/><text x="56.8162%" y="671.50"></text></g><g><title>itsi_server.bundle`magnus::error::protect::call (2 samples, 0.03%)</title><rect x="56.7271%" y="645" width="0.0292%" height="15" fill="rgb(228,149,22)" fg:x="3879" fg:w="2"/><text x="56.9771%" y="655.50"></text></g><g><title>itsi_server.bundle`DYLD-STUB$$rb_check_typeddata (2 samples, 0.03%)</title><rect x="57.1073%" y="629" width="0.0292%" height="15" fill="rgb(243,54,13)" fg:x="3905" fg:w="2"/><text x="57.3573%" y="639.50"></text></g><g><title>itsi_server.bundle`magnus::error::protect::call (18 samples, 0.26%)</title><rect x="57.1366%" y="629" width="0.2632%" height="15" fill="rgb(243,180,28)" fg:x="3907" fg:w="18"/><text x="57.3866%" y="639.50"></text></g><g><title>libruby.3.4.dylib`rb_check_typeddata (4 samples, 0.06%)</title><rect x="57.3413%" y="613" width="0.0585%" height="15" fill="rgb(208,167,24)" fg:x="3921" fg:w="4"/><text x="57.5913%" y="623.50"></text></g><g><title>libdyld.dylib`tlv_get_addr (9 samples, 0.13%)</title><rect x="57.3998%" y="629" width="0.1316%" height="15" fill="rgb(245,73,45)" fg:x="3925" fg:w="9"/><text x="57.6498%" y="639.50"></text></g><g><title>libruby.3.4.dylib`rb_check_typeddata (2 samples, 0.03%)</title><rect x="57.5314%" y="629" width="0.0292%" height="15" fill="rgb(237,203,48)" fg:x="3934" fg:w="2"/><text x="57.7814%" y="639.50"></text></g><g><title>libruby.3.4.dylib`rb_protect (59 samples, 0.86%)</title><rect x="56.7564%" y="645" width="0.8628%" height="15" fill="rgb(211,197,16)" fg:x="3881" fg:w="59"/><text x="57.0064%" y="655.50"></text></g><g><title>libruby.3.4.dylib`rb_current_ec (4 samples, 0.06%)</title><rect x="57.5607%" y="629" width="0.0585%" height="15" fill="rgb(243,99,51)" fg:x="3936" fg:w="4"/><text x="57.8107%" y="639.50"></text></g><g><title>itsi_server.bundle`magnus::typed_data::_&lt;impl magnus::try_convert::TryConvert for &amp;T&gt;::try_convert (86 samples, 1.26%)</title><rect x="56.5955%" y="661" width="1.2577%" height="15" fill="rgb(215,123,29)" fg:x="3870" fg:w="86"/><text x="56.8455%" y="671.50"></text></g><g><title>libsystem_platform.dylib`_setjmp (16 samples, 0.23%)</title><rect x="57.6192%" y="645" width="0.2340%" height="15" fill="rgb(239,186,37)" fg:x="3940" fg:w="16"/><text x="57.8692%" y="655.50"></text></g><g><title>itsi_server.bundle`tokio::sync::task::atomic_waker::AtomicWaker::wake (1 samples, 0.01%)</title><rect x="57.8532%" y="661" width="0.0146%" height="15" fill="rgb(252,136,39)" fg:x="3956" fg:w="1"/><text x="58.1032%" y="671.50"></text></g><g><title>libdyld.dylib`tlv_get_addr (2 samples, 0.03%)</title><rect x="57.8678%" y="661" width="0.0292%" height="15" fill="rgb(223,213,32)" fg:x="3957" fg:w="2"/><text x="58.1178%" y="671.50"></text></g><g><title>libruby.3.4.dylib`DYLD-STUB$$memcpy (2 samples, 0.03%)</title><rect x="57.8970%" y="661" width="0.0292%" height="15" fill="rgb(233,115,5)" fg:x="3959" fg:w="2"/><text x="58.1470%" y="671.50"></text></g><g><title>libruby.3.4.dylib`newobj_of (2 samples, 0.03%)</title><rect x="57.9263%" y="661" width="0.0292%" height="15" fill="rgb(207,226,44)" fg:x="3961" fg:w="2"/><text x="58.1763%" y="671.50"></text></g><g><title>libruby.3.4.dylib`rb_enc_dummy_p (1 samples, 0.01%)</title><rect x="57.9555%" y="661" width="0.0146%" height="15" fill="rgb(208,126,0)" fg:x="3963" fg:w="1"/><text x="58.2055%" y="671.50"></text></g><g><title>libruby.3.4.dylib`rb_enc_raw_set (2 samples, 0.03%)</title><rect x="57.9702%" y="661" width="0.0292%" height="15" fill="rgb(244,66,21)" fg:x="3964" fg:w="2"/><text x="58.2202%" y="671.50"></text></g><g><title>libruby.3.4.dylib`rb_gc_size_allocatable_p (1 samples, 0.01%)</title><rect x="57.9994%" y="661" width="0.0146%" height="15" fill="rgb(222,97,12)" fg:x="3966" fg:w="1"/><text x="58.2494%" y="671.50"></text></g><g><title>libruby.3.4.dylib`rb_protect (5 samples, 0.07%)</title><rect x="58.0140%" y="661" width="0.0731%" height="15" fill="rgb(219,213,19)" fg:x="3967" fg:w="5"/><text x="58.2640%" y="671.50"></text></g><g><title>libruby.3.4.dylib`rb_str_new (1 samples, 0.01%)</title><rect x="58.0872%" y="661" width="0.0146%" height="15" fill="rgb(252,169,30)" fg:x="3972" fg:w="1"/><text x="58.3372%" y="671.50"></text></g><g><title>libruby.3.4.dylib`rb_utf8_encoding (2 samples, 0.03%)</title><rect x="58.1018%" y="661" width="0.0292%" height="15" fill="rgb(206,32,51)" fg:x="3973" fg:w="2"/><text x="58.3518%" y="671.50"></text></g><g><title>libruby.3.4.dylib`rb_utf8_str_new (1 samples, 0.01%)</title><rect x="58.1310%" y="661" width="0.0146%" height="15" fill="rgb(250,172,42)" fg:x="3975" fg:w="1"/><text x="58.3810%" y="671.50"></text></g><g><title>libdyld.dylib`tlv_get_addr (5 samples, 0.07%)</title><rect x="58.2334%" y="645" width="0.0731%" height="15" fill="rgb(209,34,43)" fg:x="3982" fg:w="5"/><text x="58.4834%" y="655.50"></text></g><g><title>libruby.3.4.dylib`DYLD-STUB$$malloc_size (1 samples, 0.01%)</title><rect x="58.6429%" y="565" width="0.0146%" height="15" fill="rgb(223,11,35)" fg:x="4010" fg:w="1"/><text x="58.8929%" y="575.50"></text></g><g><title>itsi_server.bundle`DYLD-STUB$$free (1 samples, 0.01%)</title><rect x="58.7891%" y="533" width="0.0146%" height="15" fill="rgb(251,219,26)" fg:x="4020" fg:w="1"/><text x="59.0391%" y="543.50"></text></g><g><title>libsystem_malloc.dylib`_szone_free (4 samples, 0.06%)</title><rect x="58.8476%" y="453" width="0.0585%" height="15" fill="rgb(231,119,3)" fg:x="4024" fg:w="4"/><text x="59.0976%" y="463.50"></text></g><g><title>itsi_server.bundle`&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (14 samples, 0.20%)</title><rect x="58.8330%" y="485" width="0.2047%" height="15" fill="rgb(216,97,11)" fg:x="4023" fg:w="14"/><text x="59.0830%" y="495.50"></text></g><g><title>itsi_server.bundle`bytes::bytes_mut::shared_v_drop (13 samples, 0.19%)</title><rect x="58.8476%" y="469" width="0.1901%" height="15" fill="rgb(223,59,9)" fg:x="4024" fg:w="13"/><text x="59.0976%" y="479.50"></text></g><g><title>libsystem_malloc.dylib`free_small (9 samples, 0.13%)</title><rect x="58.9061%" y="453" width="0.1316%" height="15" fill="rgb(233,93,31)" fg:x="4028" fg:w="9"/><text x="59.1561%" y="463.50"></text></g><g><title>libsystem_malloc.dylib`small_free_list_remove_ptr_no_clear (3 samples, 0.04%)</title><rect x="58.9939%" y="437" width="0.0439%" height="15" fill="rgb(239,81,33)" fg:x="4034" fg:w="3"/><text x="59.2439%" y="447.50"></text></g><g><title>itsi_server.bundle`DYLD-STUB$$free (1 samples, 0.01%)</title><rect x="59.0377%" y="485" width="0.0146%" height="15" fill="rgb(213,120,34)" fg:x="4037" fg:w="1"/><text x="59.2877%" y="495.50"></text></g><g><title>libsystem_malloc.dylib`_free (2 samples, 0.03%)</title><rect x="59.0524%" y="485" width="0.0292%" height="15" fill="rgb(243,49,53)" fg:x="4038" fg:w="2"/><text x="59.3024%" y="495.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (6 samples, 0.09%)</title><rect x="59.0816%" y="485" width="0.0877%" height="15" fill="rgb(247,216,33)" fg:x="4040" fg:w="6"/><text x="59.3316%" y="495.50"></text></g><g><title>libsystem_platform.dylib`__bzero (1 samples, 0.01%)</title><rect x="59.1693%" y="485" width="0.0146%" height="15" fill="rgb(226,26,14)" fg:x="4046" fg:w="1"/><text x="59.4193%" y="495.50"></text></g><g><title>itsi_server.bundle`core::ptr::drop_in_place&lt;http::header::map::HeaderMap&gt; (32 samples, 0.47%)</title><rect x="58.8330%" y="501" width="0.4680%" height="15" fill="rgb(215,49,53)" fg:x="4023" fg:w="32"/><text x="59.0830%" y="511.50"></text></g><g><title>libsystem_platform.dylib`_platform_memset (8 samples, 0.12%)</title><rect x="59.1840%" y="485" width="0.1170%" height="15" fill="rgb(245,162,40)" fg:x="4047" fg:w="8"/><text x="59.4340%" y="495.50"></text></g><g><title>libsystem_malloc.dylib`_free (2 samples, 0.03%)</title><rect x="59.3010%" y="501" width="0.0292%" height="15" fill="rgb(229,68,17)" fg:x="4055" fg:w="2"/><text x="59.5510%" y="511.50"></text></g><g><title>itsi_server.bundle`alloc::sync::Arc&lt;T,A&gt;::drop_slow (37 samples, 0.54%)</title><rect x="58.8037%" y="533" width="0.5411%" height="15" fill="rgb(213,182,10)" fg:x="4021" fg:w="37"/><text x="59.0537%" y="543.50"></text></g><g><title>itsi_server.bundle`core::ptr::drop_in_place&lt;http::request::Parts&gt; (35 samples, 0.51%)</title><rect x="58.8330%" y="517" width="0.5118%" height="15" fill="rgb(245,125,30)" fg:x="4023" fg:w="35"/><text x="59.0830%" y="527.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (1 samples, 0.01%)</title><rect x="59.3302%" y="501" width="0.0146%" height="15" fill="rgb(232,202,2)" fg:x="4057" fg:w="1"/><text x="59.5802%" y="511.50"></text></g><g><title>itsi_server.bundle`core::ptr::drop_in_place&lt;http::request::Parts&gt; (1 samples, 0.01%)</title><rect x="59.3448%" y="533" width="0.0146%" height="15" fill="rgb(237,140,51)" fg:x="4058" fg:w="1"/><text x="59.5948%" y="543.50"></text></g><g><title>itsi_server.bundle`core::ptr::drop_in_place&lt;http::header::map::HeaderMap&gt; (1 samples, 0.01%)</title><rect x="59.3595%" y="517" width="0.0146%" height="15" fill="rgb(236,157,25)" fg:x="4059" fg:w="1"/><text x="59.6095%" y="527.50"></text></g><g><title>itsi_server.bundle`&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.01%)</title><rect x="59.4180%" y="485" width="0.0146%" height="15" fill="rgb(219,209,0)" fg:x="4063" fg:w="1"/><text x="59.6680%" y="495.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (2 samples, 0.03%)</title><rect x="59.4326%" y="485" width="0.0292%" height="15" fill="rgb(240,116,54)" fg:x="4064" fg:w="2"/><text x="59.6826%" y="495.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (7 samples, 0.10%)</title><rect x="59.4618%" y="485" width="0.1024%" height="15" fill="rgb(216,10,36)" fg:x="4066" fg:w="7"/><text x="59.7118%" y="495.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (3 samples, 0.04%)</title><rect x="59.5203%" y="469" width="0.0439%" height="15" fill="rgb(222,72,44)" fg:x="4070" fg:w="3"/><text x="59.7703%" y="479.50"></text></g><g><title>itsi_server.bundle`core::ptr::drop_in_place&lt;http::header::map::HeaderMap&gt; (14 samples, 0.20%)</title><rect x="59.3741%" y="501" width="0.2047%" height="15" fill="rgb(232,159,9)" fg:x="4060" fg:w="14"/><text x="59.6241%" y="511.50"></text></g><g><title>libsystem_platform.dylib`_platform_memset (1 samples, 0.01%)</title><rect x="59.5642%" y="485" width="0.0146%" height="15" fill="rgb(210,39,32)" fg:x="4073" fg:w="1"/><text x="59.8142%" y="495.50"></text></g><g><title>libsystem_malloc.dylib`_free (1 samples, 0.01%)</title><rect x="59.5788%" y="501" width="0.0146%" height="15" fill="rgb(216,194,45)" fg:x="4074" fg:w="1"/><text x="59.8288%" y="511.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (1 samples, 0.01%)</title><rect x="59.5934%" y="501" width="0.0146%" height="15" fill="rgb(218,18,35)" fg:x="4075" fg:w="1"/><text x="59.8434%" y="511.50"></text></g><g><title>itsi_server.bundle`core::ptr::drop_in_place&lt;http::request::Parts&gt; (17 samples, 0.25%)</title><rect x="59.3741%" y="517" width="0.2486%" height="15" fill="rgb(207,83,51)" fg:x="4060" fg:w="17"/><text x="59.6241%" y="527.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (1 samples, 0.01%)</title><rect x="59.6081%" y="501" width="0.0146%" height="15" fill="rgb(225,63,43)" fg:x="4076" fg:w="1"/><text x="59.8581%" y="511.50"></text></g><g><title>itsi_server.bundle`core::ptr::drop_in_place&lt;itsi_server::request::itsi_request::ItsiRequest&gt; (22 samples, 0.32%)</title><rect x="59.3595%" y="533" width="0.3217%" height="15" fill="rgb(207,57,36)" fg:x="4059" fg:w="22"/><text x="59.6095%" y="543.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (4 samples, 0.06%)</title><rect x="59.6227%" y="517" width="0.0585%" height="15" fill="rgb(216,99,33)" fg:x="4077" fg:w="4"/><text x="59.8727%" y="527.50"></text></g><g><title>libsystem_malloc.dylib`_free (1 samples, 0.01%)</title><rect x="59.6812%" y="533" width="0.0146%" height="15" fill="rgb(225,42,16)" fg:x="4081" fg:w="1"/><text x="59.9312%" y="543.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_add_ptr (2 samples, 0.03%)</title><rect x="59.7836%" y="501" width="0.0292%" height="15" fill="rgb(220,201,45)" fg:x="4088" fg:w="2"/><text x="60.0336%" y="511.50"></text></g><g><title>itsi_server.bundle`magnus::typed_data::DataTypeFunctions::extern_free (71 samples, 1.04%)</title><rect x="58.7891%" y="549" width="1.0383%" height="15" fill="rgb(225,33,4)" fg:x="4020" fg:w="71"/><text x="59.0391%" y="559.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (9 samples, 0.13%)</title><rect x="59.6958%" y="533" width="0.1316%" height="15" fill="rgb(224,33,50)" fg:x="4082" fg:w="9"/><text x="59.9458%" y="543.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (5 samples, 0.07%)</title><rect x="59.7543%" y="517" width="0.0731%" height="15" fill="rgb(246,198,51)" fg:x="4086" fg:w="5"/><text x="60.0043%" y="527.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_scan_madvise_free (1 samples, 0.01%)</title><rect x="59.8128%" y="501" width="0.0146%" height="15" fill="rgb(205,22,4)" fg:x="4090" fg:w="1"/><text x="60.0628%" y="511.50"></text></g><g><title>libruby.3.4.dylib`cont_free (4 samples, 0.06%)</title><rect x="59.8274%" y="549" width="0.0585%" height="15" fill="rgb(206,3,8)" fg:x="4091" fg:w="4"/><text x="60.0774%" y="559.50"></text></g><g><title>libruby.3.4.dylib`rb_native_mutex_lock (4 samples, 0.06%)</title><rect x="59.8274%" y="533" width="0.0585%" height="15" fill="rgb(251,23,15)" fg:x="4091" fg:w="4"/><text x="60.0774%" y="543.50"></text></g><g><title>libsystem_pthread.dylib`pthread_mutex_lock (4 samples, 0.06%)</title><rect x="59.8274%" y="517" width="0.0585%" height="15" fill="rgb(252,88,28)" fg:x="4091" fg:w="4"/><text x="60.0774%" y="527.50"></text></g><g><title>libsystem_malloc.dylib`DYLD-STUB$$_platform_bzero (2 samples, 0.03%)</title><rect x="59.9006%" y="533" width="0.0292%" height="15" fill="rgb(212,127,14)" fg:x="4096" fg:w="2"/><text x="60.1506%" y="543.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (1 samples, 0.01%)</title><rect x="59.9298%" y="533" width="0.0146%" height="15" fill="rgb(247,145,37)" fg:x="4098" fg:w="1"/><text x="60.1798%" y="543.50"></text></g><g><title>libsystem_malloc.dylib`get_tiny_previous_free_msize (2 samples, 0.03%)</title><rect x="60.0614%" y="517" width="0.0292%" height="15" fill="rgb(209,117,53)" fg:x="4107" fg:w="2"/><text x="60.3114%" y="527.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (17 samples, 0.25%)</title><rect x="59.9444%" y="533" width="0.2486%" height="15" fill="rgb(212,90,42)" fg:x="4099" fg:w="17"/><text x="60.1944%" y="543.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (7 samples, 0.10%)</title><rect x="60.0907%" y="517" width="0.1024%" height="15" fill="rgb(218,164,37)" fg:x="4109" fg:w="7"/><text x="60.3407%" y="527.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_remove_ptr (1 samples, 0.01%)</title><rect x="60.1784%" y="501" width="0.0146%" height="15" fill="rgb(246,65,34)" fg:x="4115" fg:w="1"/><text x="60.4284%" y="511.50"></text></g><g><title>libsystem_malloc.dylib`malloc_size (1 samples, 0.01%)</title><rect x="60.1930%" y="533" width="0.0146%" height="15" fill="rgb(231,100,33)" fg:x="4116" fg:w="1"/><text x="60.4430%" y="543.50"></text></g><g><title>libsystem_malloc.dylib`szone_size (1 samples, 0.01%)</title><rect x="60.1930%" y="517" width="0.0146%" height="15" fill="rgb(228,126,14)" fg:x="4116" fg:w="1"/><text x="60.4430%" y="527.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_madvise_block (1 samples, 0.01%)</title><rect x="60.2077%" y="533" width="0.0146%" height="15" fill="rgb(215,173,21)" fg:x="4117" fg:w="1"/><text x="60.4577%" y="543.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_madvise_block_locked (1 samples, 0.01%)</title><rect x="60.2077%" y="517" width="0.0146%" height="15" fill="rgb(210,6,40)" fg:x="4117" fg:w="1"/><text x="60.4577%" y="527.50"></text></g><g><title>libsystem_kernel.dylib`madvise (1 samples, 0.01%)</title><rect x="60.2077%" y="501" width="0.0146%" height="15" fill="rgb(212,48,18)" fg:x="4117" fg:w="1"/><text x="60.4577%" y="511.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_size (1 samples, 0.01%)</title><rect x="60.2223%" y="533" width="0.0146%" height="15" fill="rgb(230,214,11)" fg:x="4118" fg:w="1"/><text x="60.4723%" y="543.50"></text></g><g><title>libruby.3.4.dylib`ruby_xfree (26 samples, 0.38%)</title><rect x="59.8859%" y="549" width="0.3802%" height="15" fill="rgb(254,105,39)" fg:x="4095" fg:w="26"/><text x="60.1359%" y="559.50"></text></g><g><title>libsystem_platform.dylib`_platform_memset (2 samples, 0.03%)</title><rect x="60.2369%" y="533" width="0.0292%" height="15" fill="rgb(245,158,5)" fg:x="4119" fg:w="2"/><text x="60.4869%" y="543.50"></text></g><g><title>libsystem_malloc.dylib`_free (3 samples, 0.04%)</title><rect x="60.2662%" y="549" width="0.0439%" height="15" fill="rgb(249,208,11)" fg:x="4121" fg:w="3"/><text x="60.5162%" y="559.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (5 samples, 0.07%)</title><rect x="60.3100%" y="549" width="0.0731%" height="15" fill="rgb(210,39,28)" fg:x="4124" fg:w="5"/><text x="60.5600%" y="559.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_add_ptr (1 samples, 0.01%)</title><rect x="60.4855%" y="517" width="0.0146%" height="15" fill="rgb(211,56,53)" fg:x="4136" fg:w="1"/><text x="60.7355%" y="527.50"></text></g><g><title>libsystem_kernel.dylib`madvise (1 samples, 0.01%)</title><rect x="60.5001%" y="501" width="0.0146%" height="15" fill="rgb(226,201,30)" fg:x="4137" fg:w="1"/><text x="60.7501%" y="511.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (10 samples, 0.15%)</title><rect x="60.3832%" y="549" width="0.1462%" height="15" fill="rgb(239,101,34)" fg:x="4129" fg:w="10"/><text x="60.6332%" y="559.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (6 samples, 0.09%)</title><rect x="60.4416%" y="533" width="0.0877%" height="15" fill="rgb(226,209,5)" fg:x="4133" fg:w="6"/><text x="60.6916%" y="543.50"></text></g><g><title>libsystem_malloc.dylib`tiny_madvise_free_range_no_lock (2 samples, 0.03%)</title><rect x="60.5001%" y="517" width="0.0292%" height="15" fill="rgb(250,105,47)" fg:x="4137" fg:w="2"/><text x="60.7501%" y="527.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_remove_ptr (1 samples, 0.01%)</title><rect x="60.5148%" y="501" width="0.0146%" height="15" fill="rgb(230,72,3)" fg:x="4138" fg:w="1"/><text x="60.7648%" y="511.50"></text></g><g><title>libsystem_malloc.dylib`malloc_size (4 samples, 0.06%)</title><rect x="60.5294%" y="549" width="0.0585%" height="15" fill="rgb(232,218,39)" fg:x="4139" fg:w="4"/><text x="60.7794%" y="559.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_size (1 samples, 0.01%)</title><rect x="60.5879%" y="549" width="0.0146%" height="15" fill="rgb(248,166,6)" fg:x="4143" fg:w="1"/><text x="60.8379%" y="559.50"></text></g><g><title>libruby.3.4.dylib`rb_gc_obj_free (135 samples, 1.97%)</title><rect x="58.6575%" y="565" width="1.9743%" height="15" fill="rgb(247,89,20)" fg:x="4011" fg:w="135"/><text x="58.9075%" y="575.50">l..</text></g><g><title>libsystem_platform.dylib`_platform_memset (2 samples, 0.03%)</title><rect x="60.6025%" y="549" width="0.0292%" height="15" fill="rgb(248,130,54)" fg:x="4144" fg:w="2"/><text x="60.8525%" y="559.50"></text></g><g><title>libruby.3.4.dylib`rb_gc_obj_free_vm_weak_references (12 samples, 0.18%)</title><rect x="60.6318%" y="565" width="0.1755%" height="15" fill="rgb(234,196,4)" fg:x="4146" fg:w="12"/><text x="60.8818%" y="575.50"></text></g><g><title>libsystem_malloc.dylib`_free (2 samples, 0.03%)</title><rect x="60.8073%" y="565" width="0.0292%" height="15" fill="rgb(250,143,31)" fg:x="4158" fg:w="2"/><text x="61.0573%" y="575.50"></text></g><g><title>libruby.3.4.dylib`gc_sweep_plane (168 samples, 2.46%)</title><rect x="58.3943%" y="581" width="2.4569%" height="15" fill="rgb(211,110,34)" fg:x="3993" fg:w="168"/><text x="58.6443%" y="591.50">li..</text></g><g><title>libsystem_malloc.dylib`malloc_size (1 samples, 0.01%)</title><rect x="60.8365%" y="565" width="0.0146%" height="15" fill="rgb(215,124,48)" fg:x="4160" fg:w="1"/><text x="61.0865%" y="575.50"></text></g><g><title>libruby.3.4.dylib`rb_gc_obj_free (1 samples, 0.01%)</title><rect x="60.8511%" y="581" width="0.0146%" height="15" fill="rgb(216,46,13)" fg:x="4161" fg:w="1"/><text x="61.1011%" y="591.50"></text></g><g><title>libruby.3.4.dylib`gc_continue (171 samples, 2.50%)</title><rect x="58.3943%" y="613" width="2.5007%" height="15" fill="rgb(205,184,25)" fg:x="3993" fg:w="171"/><text x="58.6443%" y="623.50">li..</text></g><g><title>libruby.3.4.dylib`gc_sweep_step (171 samples, 2.50%)</title><rect x="58.3943%" y="597" width="2.5007%" height="15" fill="rgb(228,1,10)" fg:x="3993" fg:w="171"/><text x="58.6443%" y="607.50">li..</text></g><g><title>libruby.3.4.dylib`rb_gc_obj_free_vm_weak_references (2 samples, 0.03%)</title><rect x="60.8658%" y="581" width="0.0292%" height="15" fill="rgb(213,116,27)" fg:x="4162" fg:w="2"/><text x="61.1158%" y="591.50"></text></g><g><title>libruby.3.4.dylib`gc_mark (1 samples, 0.01%)</title><rect x="60.9242%" y="565" width="0.0146%" height="15" fill="rgb(241,95,50)" fg:x="4166" fg:w="1"/><text x="61.1742%" y="575.50"></text></g><g><title>libruby.3.4.dylib`gc_marks_rest (4 samples, 0.06%)</title><rect x="60.9242%" y="597" width="0.0585%" height="15" fill="rgb(238,48,32)" fg:x="4166" fg:w="4"/><text x="61.1742%" y="607.50"></text></g><g><title>libruby.3.4.dylib`cont_mark (4 samples, 0.06%)</title><rect x="60.9242%" y="581" width="0.0585%" height="15" fill="rgb(235,113,49)" fg:x="4166" fg:w="4"/><text x="61.1742%" y="591.50"></text></g><g><title>libruby.3.4.dylib`rb_execution_context_mark (3 samples, 0.04%)</title><rect x="60.9389%" y="565" width="0.0439%" height="15" fill="rgb(205,127,43)" fg:x="4167" fg:w="3"/><text x="61.1889%" y="575.50"></text></g><g><title>libruby.3.4.dylib`rb_gc_mark_machine_context (3 samples, 0.04%)</title><rect x="60.9389%" y="549" width="0.0439%" height="15" fill="rgb(250,162,2)" fg:x="4167" fg:w="3"/><text x="61.1889%" y="559.50"></text></g><g><title>libruby.3.4.dylib`each_location (3 samples, 0.04%)</title><rect x="60.9389%" y="533" width="0.0439%" height="15" fill="rgb(220,13,41)" fg:x="4167" fg:w="3"/><text x="61.1889%" y="543.50"></text></g><g><title>libruby.3.4.dylib`gc_mark_maybe_internal (3 samples, 0.04%)</title><rect x="60.9389%" y="517" width="0.0439%" height="15" fill="rgb(249,221,25)" fg:x="4167" fg:w="3"/><text x="61.1889%" y="527.50"></text></g><g><title>libsystem_c.dylib`bsearch (3 samples, 0.04%)</title><rect x="60.9389%" y="501" width="0.0439%" height="15" fill="rgb(215,208,19)" fg:x="4167" fg:w="3"/><text x="61.1889%" y="511.50"></text></g><g><title>itsi_server.bundle`alloc::sync::Arc&lt;T,A&gt;::drop_slow (2 samples, 0.03%)</title><rect x="61.3922%" y="517" width="0.0292%" height="15" fill="rgb(236,175,2)" fg:x="4198" fg:w="2"/><text x="61.6422%" y="527.50"></text></g><g><title>itsi_server.bundle`core::ptr::drop_in_place&lt;http::request::Parts&gt; (2 samples, 0.03%)</title><rect x="61.3922%" y="501" width="0.0292%" height="15" fill="rgb(241,52,2)" fg:x="4198" fg:w="2"/><text x="61.6422%" y="511.50"></text></g><g><title>itsi_server.bundle`core::ptr::drop_in_place&lt;http::header::map::HeaderMap&gt; (2 samples, 0.03%)</title><rect x="61.3922%" y="485" width="0.0292%" height="15" fill="rgb(248,140,14)" fg:x="4198" fg:w="2"/><text x="61.6422%" y="495.50"></text></g><g><title>itsi_server.bundle`&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.03%)</title><rect x="61.3922%" y="469" width="0.0292%" height="15" fill="rgb(253,22,42)" fg:x="4198" fg:w="2"/><text x="61.6422%" y="479.50"></text></g><g><title>itsi_server.bundle`bytes::bytes_mut::shared_v_drop (2 samples, 0.03%)</title><rect x="61.3922%" y="453" width="0.0292%" height="15" fill="rgb(234,61,47)" fg:x="4198" fg:w="2"/><text x="61.6422%" y="463.50"></text></g><g><title>libsystem_malloc.dylib`free_small (1 samples, 0.01%)</title><rect x="61.4068%" y="437" width="0.0146%" height="15" fill="rgb(208,226,15)" fg:x="4199" fg:w="1"/><text x="61.6568%" y="447.50"></text></g><g><title>libsystem_malloc.dylib`small_free_list_remove_ptr_no_clear (1 samples, 0.01%)</title><rect x="61.4068%" y="421" width="0.0146%" height="15" fill="rgb(217,221,4)" fg:x="4199" fg:w="1"/><text x="61.6568%" y="431.50"></text></g><g><title>itsi_server.bundle`core::ptr::drop_in_place&lt;http::request::Parts&gt; (2 samples, 0.03%)</title><rect x="61.4215%" y="501" width="0.0292%" height="15" fill="rgb(212,174,34)" fg:x="4200" fg:w="2"/><text x="61.6715%" y="511.50"></text></g><g><title>itsi_server.bundle`core::ptr::drop_in_place&lt;http::header::map::HeaderMap&gt; (2 samples, 0.03%)</title><rect x="61.4215%" y="485" width="0.0292%" height="15" fill="rgb(253,83,4)" fg:x="4200" fg:w="2"/><text x="61.6715%" y="495.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (2 samples, 0.03%)</title><rect x="61.4215%" y="469" width="0.0292%" height="15" fill="rgb(250,195,49)" fg:x="4200" fg:w="2"/><text x="61.6715%" y="479.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (1 samples, 0.01%)</title><rect x="61.4361%" y="453" width="0.0146%" height="15" fill="rgb(241,192,25)" fg:x="4201" fg:w="1"/><text x="61.6861%" y="463.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_add_ptr (1 samples, 0.01%)</title><rect x="61.4361%" y="437" width="0.0146%" height="15" fill="rgb(208,124,10)" fg:x="4201" fg:w="1"/><text x="61.6861%" y="447.50"></text></g><g><title>itsi_server.bundle`core::ptr::drop_in_place&lt;itsi_server::request::itsi_request::ItsiRequest&gt; (3 samples, 0.04%)</title><rect x="61.4215%" y="517" width="0.0439%" height="15" fill="rgb(222,33,0)" fg:x="4200" fg:w="3"/><text x="61.6715%" y="527.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (1 samples, 0.01%)</title><rect x="61.4507%" y="501" width="0.0146%" height="15" fill="rgb(234,209,28)" fg:x="4202" fg:w="1"/><text x="61.7007%" y="511.50"></text></g><g><title>itsi_server.bundle`magnus::typed_data::DataTypeFunctions::extern_free (8 samples, 0.12%)</title><rect x="61.3922%" y="533" width="0.1170%" height="15" fill="rgb(224,11,23)" fg:x="4198" fg:w="8"/><text x="61.6422%" y="543.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (3 samples, 0.04%)</title><rect x="61.4653%" y="517" width="0.0439%" height="15" fill="rgb(232,99,1)" fg:x="4203" fg:w="3"/><text x="61.7153%" y="527.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (1 samples, 0.01%)</title><rect x="61.4946%" y="501" width="0.0146%" height="15" fill="rgb(237,95,45)" fg:x="4205" fg:w="1"/><text x="61.7446%" y="511.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_remove_ptr (1 samples, 0.01%)</title><rect x="61.4946%" y="485" width="0.0146%" height="15" fill="rgb(208,109,11)" fg:x="4205" fg:w="1"/><text x="61.7446%" y="495.50"></text></g><g><title>libruby.3.4.dylib`DYLD-STUB$$free (1 samples, 0.01%)</title><rect x="61.5092%" y="533" width="0.0146%" height="15" fill="rgb(216,190,48)" fg:x="4206" fg:w="1"/><text x="61.7592%" y="543.50"></text></g><g><title>libruby.3.4.dylib`cont_free (1 samples, 0.01%)</title><rect x="61.5238%" y="533" width="0.0146%" height="15" fill="rgb(251,171,36)" fg:x="4207" fg:w="1"/><text x="61.7738%" y="543.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (1 samples, 0.01%)</title><rect x="61.5238%" y="517" width="0.0146%" height="15" fill="rgb(230,62,22)" fg:x="4207" fg:w="1"/><text x="61.7738%" y="527.50"></text></g><g><title>libsystem_malloc.dylib`DYLD-STUB$$_platform_bzero (2 samples, 0.03%)</title><rect x="61.5677%" y="501" width="0.0292%" height="15" fill="rgb(225,114,35)" fg:x="4210" fg:w="2"/><text x="61.8177%" y="511.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (10 samples, 0.15%)</title><rect x="61.5970%" y="501" width="0.1462%" height="15" fill="rgb(215,118,42)" fg:x="4212" fg:w="10"/><text x="61.8470%" y="511.50"></text></g><g><title>libsystem_malloc.dylib`malloc_size (1 samples, 0.01%)</title><rect x="61.7432%" y="501" width="0.0146%" height="15" fill="rgb(243,119,21)" fg:x="4222" fg:w="1"/><text x="61.9932%" y="511.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_size (5 samples, 0.07%)</title><rect x="61.7578%" y="501" width="0.0731%" height="15" fill="rgb(252,177,53)" fg:x="4223" fg:w="5"/><text x="62.0078%" y="511.50"></text></g><g><title>libruby.3.4.dylib`ruby_xfree (20 samples, 0.29%)</title><rect x="61.5677%" y="517" width="0.2925%" height="15" fill="rgb(237,209,29)" fg:x="4210" fg:w="20"/><text x="61.8177%" y="527.50"></text></g><g><title>libsystem_platform.dylib`_platform_memset (2 samples, 0.03%)</title><rect x="61.8309%" y="501" width="0.0292%" height="15" fill="rgb(212,65,23)" fg:x="4228" fg:w="2"/><text x="62.0809%" y="511.50"></text></g><g><title>libsystem_malloc.dylib`_free (3 samples, 0.04%)</title><rect x="61.8602%" y="517" width="0.0439%" height="15" fill="rgb(230,222,46)" fg:x="4230" fg:w="3"/><text x="62.1102%" y="527.50"></text></g><g><title>libruby.3.4.dylib`rb_hash_free (26 samples, 0.38%)</title><rect x="61.5385%" y="533" width="0.3802%" height="15" fill="rgb(215,135,32)" fg:x="4208" fg:w="26"/><text x="61.7885%" y="543.50"></text></g><g><title>libsystem_malloc.dylib`malloc_size (1 samples, 0.01%)</title><rect x="61.9041%" y="517" width="0.0146%" height="15" fill="rgb(246,101,22)" fg:x="4233" fg:w="1"/><text x="62.1541%" y="527.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (1 samples, 0.01%)</title><rect x="61.9479%" y="517" width="0.0146%" height="15" fill="rgb(206,107,13)" fg:x="4236" fg:w="1"/><text x="62.1979%" y="527.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_add_ptr (1 samples, 0.01%)</title><rect x="62.0064%" y="501" width="0.0146%" height="15" fill="rgb(250,100,44)" fg:x="4240" fg:w="1"/><text x="62.2564%" y="511.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_add_ptr (5 samples, 0.07%)</title><rect x="62.1234%" y="485" width="0.0731%" height="15" fill="rgb(231,147,38)" fg:x="4248" fg:w="5"/><text x="62.3734%" y="495.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (18 samples, 0.26%)</title><rect x="61.9626%" y="517" width="0.2632%" height="15" fill="rgb(229,8,40)" fg:x="4237" fg:w="18"/><text x="62.2126%" y="527.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (14 samples, 0.20%)</title><rect x="62.0211%" y="501" width="0.2047%" height="15" fill="rgb(221,135,30)" fg:x="4241" fg:w="14"/><text x="62.2711%" y="511.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_remove_ptr (2 samples, 0.03%)</title><rect x="62.1965%" y="485" width="0.0292%" height="15" fill="rgb(249,193,18)" fg:x="4253" fg:w="2"/><text x="62.4465%" y="495.50"></text></g><g><title>libsystem_malloc.dylib`malloc_size (1 samples, 0.01%)</title><rect x="62.2258%" y="517" width="0.0146%" height="15" fill="rgb(209,133,39)" fg:x="4255" fg:w="1"/><text x="62.4758%" y="527.50"></text></g><g><title>libsystem_malloc.dylib`szone_size (1 samples, 0.01%)</title><rect x="62.2404%" y="517" width="0.0146%" height="15" fill="rgb(232,100,14)" fg:x="4256" fg:w="1"/><text x="62.4904%" y="527.50"></text></g><g><title>libruby.3.4.dylib`ruby_xfree (29 samples, 0.42%)</title><rect x="61.9187%" y="533" width="0.4241%" height="15" fill="rgb(224,185,1)" fg:x="4234" fg:w="29"/><text x="62.1687%" y="543.50"></text></g><g><title>libsystem_platform.dylib`_platform_memset (6 samples, 0.09%)</title><rect x="62.2550%" y="517" width="0.0877%" height="15" fill="rgb(223,139,8)" fg:x="4257" fg:w="6"/><text x="62.5050%" y="527.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (1 samples, 0.01%)</title><rect x="62.3428%" y="533" width="0.0146%" height="15" fill="rgb(232,213,38)" fg:x="4263" fg:w="1"/><text x="62.5928%" y="543.50"></text></g><g><title>libruby.3.4.dylib`rb_gc_obj_free (72 samples, 1.05%)</title><rect x="61.3191%" y="549" width="1.0529%" height="15" fill="rgb(207,94,22)" fg:x="4193" fg:w="72"/><text x="61.5691%" y="559.50"></text></g><g><title>libsystem_malloc.dylib`malloc_size (1 samples, 0.01%)</title><rect x="62.3574%" y="533" width="0.0146%" height="15" fill="rgb(219,183,54)" fg:x="4264" fg:w="1"/><text x="62.6074%" y="543.50"></text></g><g><title>libruby.3.4.dylib`gc_sweep_plane (99 samples, 1.45%)</title><rect x="60.9974%" y="565" width="1.4478%" height="15" fill="rgb(216,185,54)" fg:x="4171" fg:w="99"/><text x="61.2474%" y="575.50"></text></g><g><title>libruby.3.4.dylib`rb_gc_obj_free_vm_weak_references (5 samples, 0.07%)</title><rect x="62.3720%" y="549" width="0.0731%" height="15" fill="rgb(254,217,39)" fg:x="4265" fg:w="5"/><text x="62.6220%" y="559.50"></text></g><g><title>libruby.3.4.dylib`gc_sweep (101 samples, 1.48%)</title><rect x="60.9827%" y="597" width="1.4770%" height="15" fill="rgb(240,178,23)" fg:x="4170" fg:w="101"/><text x="61.2327%" y="607.50"></text></g><g><title>libruby.3.4.dylib`gc_sweep_step (101 samples, 1.48%)</title><rect x="60.9827%" y="581" width="1.4770%" height="15" fill="rgb(218,11,47)" fg:x="4170" fg:w="101"/><text x="61.2327%" y="591.50"></text></g><g><title>libruby.3.4.dylib`rb_gc_obj_free (1 samples, 0.01%)</title><rect x="62.4452%" y="565" width="0.0146%" height="15" fill="rgb(218,51,51)" fg:x="4270" fg:w="1"/><text x="62.6952%" y="575.50"></text></g><g><title>libruby.3.4.dylib`each_location (1 samples, 0.01%)</title><rect x="62.4598%" y="581" width="0.0146%" height="15" fill="rgb(238,126,27)" fg:x="4271" fg:w="1"/><text x="62.7098%" y="591.50"></text></g><g><title>libruby.3.4.dylib`gc_mark_maybe_internal (1 samples, 0.01%)</title><rect x="62.4598%" y="565" width="0.0146%" height="15" fill="rgb(249,202,22)" fg:x="4271" fg:w="1"/><text x="62.7098%" y="575.50"></text></g><g><title>libruby.3.4.dylib`rb_gc_mark_roots (2 samples, 0.03%)</title><rect x="62.4598%" y="597" width="0.0292%" height="15" fill="rgb(254,195,49)" fg:x="4271" fg:w="2"/><text x="62.7098%" y="607.50"></text></g><g><title>libruby.3.4.dylib`rb_vm_mark (1 samples, 0.01%)</title><rect x="62.4744%" y="581" width="0.0146%" height="15" fill="rgb(208,123,14)" fg:x="4272" fg:w="1"/><text x="62.7244%" y="591.50"></text></g><g><title>libruby.3.4.dylib`gc_mark_maybe_internal (1 samples, 0.01%)</title><rect x="62.4744%" y="565" width="0.0146%" height="15" fill="rgb(224,200,8)" fg:x="4272" fg:w="1"/><text x="62.7244%" y="575.50"></text></g><g><title>libsystem_c.dylib`bsearch (1 samples, 0.01%)</title><rect x="62.4744%" y="549" width="0.0146%" height="15" fill="rgb(217,61,36)" fg:x="4272" fg:w="1"/><text x="62.7244%" y="559.50"></text></g><g><title>libruby.3.4.dylib`newobj_of (287 samples, 4.20%)</title><rect x="58.3065%" y="645" width="4.1971%" height="15" fill="rgb(206,35,45)" fg:x="3987" fg:w="287"/><text x="58.5565%" y="655.50">libru..</text></g><g><title>libruby.3.4.dylib`newobj_cache_miss (281 samples, 4.11%)</title><rect x="58.3943%" y="629" width="4.1094%" height="15" fill="rgb(217,65,33)" fg:x="3993" fg:w="281"/><text x="58.6443%" y="639.50">libr..</text></g><g><title>libruby.3.4.dylib`gc_start (110 samples, 1.61%)</title><rect x="60.8950%" y="613" width="1.6087%" height="15" fill="rgb(222,158,48)" fg:x="4164" fg:w="110"/><text x="61.1450%" y="623.50"></text></g><g><title>libruby.3.4.dylib`rb_gc_mark_vm_stack_values (1 samples, 0.01%)</title><rect x="62.4890%" y="597" width="0.0146%" height="15" fill="rgb(254,2,54)" fg:x="4273" fg:w="1"/><text x="62.7390%" y="607.50"></text></g><g><title>libruby.3.4.dylib`str_enc_new (299 samples, 4.37%)</title><rect x="58.1457%" y="661" width="4.3726%" height="15" fill="rgb(250,143,38)" fg:x="3976" fg:w="299"/><text x="58.3957%" y="671.50">libru..</text></g><g><title>libruby.3.4.dylib`rb_current_ec (1 samples, 0.01%)</title><rect x="62.5037%" y="645" width="0.0146%" height="15" fill="rgb(248,25,0)" fg:x="4274" fg:w="1"/><text x="62.7537%" y="655.50"></text></g><g><title>libsystem_malloc.dylib`_free (3 samples, 0.04%)</title><rect x="62.5183%" y="661" width="0.0439%" height="15" fill="rgb(206,152,27)" fg:x="4275" fg:w="3"/><text x="62.7683%" y="671.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (2 samples, 0.03%)</title><rect x="62.5622%" y="661" width="0.0292%" height="15" fill="rgb(240,77,30)" fg:x="4278" fg:w="2"/><text x="62.8122%" y="671.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (6 samples, 0.09%)</title><rect x="62.5914%" y="661" width="0.0877%" height="15" fill="rgb(231,5,3)" fg:x="4280" fg:w="6"/><text x="62.8414%" y="671.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (7 samples, 0.10%)</title><rect x="62.6791%" y="661" width="0.1024%" height="15" fill="rgb(207,226,32)" fg:x="4286" fg:w="7"/><text x="62.9291%" y="671.50"></text></g><g><title>itsi_server.bundle`itsi_server::init::anon (947 samples, 13.85%)</title><rect x="49.1372%" y="677" width="13.8491%" height="15" fill="rgb(222,207,47)" fg:x="3360" fg:w="947"/><text x="49.3872%" y="687.50">itsi_server.bundle`it..</text></g><g><title>libsystem_platform.dylib`_platform_memmove (14 samples, 0.20%)</title><rect x="62.7815%" y="661" width="0.2047%" height="15" fill="rgb(229,115,45)" fg:x="4293" fg:w="14"/><text x="63.0315%" y="671.50"></text></g><g><title>itsi_server.bundle`itsi_server::response::itsi_response::ItsiResponse::set_status (1 samples, 0.01%)</title><rect x="62.9863%" y="677" width="0.0146%" height="15" fill="rgb(224,191,6)" fg:x="4307" fg:w="1"/><text x="63.2363%" y="687.50"></text></g><g><title>itsi_server.bundle`magnus::r_string::RString::to_bytes (1 samples, 0.01%)</title><rect x="63.0009%" y="677" width="0.0146%" height="15" fill="rgb(230,227,24)" fg:x="4308" fg:w="1"/><text x="63.2509%" y="687.50"></text></g><g><title>itsi_server.bundle`magnus::r_string::_&lt;impl magnus::api::Ruby&gt;::str_new (1 samples, 0.01%)</title><rect x="63.0155%" y="677" width="0.0146%" height="15" fill="rgb(228,80,19)" fg:x="4309" fg:w="1"/><text x="63.2655%" y="687.50"></text></g><g><title>itsi_server.bundle`magnus::typed_data::_&lt;impl magnus::try_convert::TryConvert for &amp;T&gt;::try_convert (9 samples, 0.13%)</title><rect x="63.0301%" y="677" width="0.1316%" height="15" fill="rgb(247,229,0)" fg:x="4310" fg:w="9"/><text x="63.2801%" y="687.50"></text></g><g><title>libruby.3.4.dylib`basic_obj_respond_to (2 samples, 0.03%)</title><rect x="63.1617%" y="677" width="0.0292%" height="15" fill="rgb(237,194,15)" fg:x="4319" fg:w="2"/><text x="63.4117%" y="687.50"></text></g><g><title>libruby.3.4.dylib`call_cfunc_0 (1 samples, 0.01%)</title><rect x="63.1910%" y="677" width="0.0146%" height="15" fill="rgb(219,203,20)" fg:x="4321" fg:w="1"/><text x="63.4410%" y="687.50"></text></g><g><title>libruby.3.4.dylib`rb_gc_writebarrier (3 samples, 0.04%)</title><rect x="63.2202%" y="661" width="0.0439%" height="15" fill="rgb(234,128,8)" fg:x="4323" fg:w="3"/><text x="63.4702%" y="671.50"></text></g><g><title>libruby.3.4.dylib`rb_hash_bulk_insert (1 samples, 0.01%)</title><rect x="63.2641%" y="661" width="0.0146%" height="15" fill="rgb(248,202,8)" fg:x="4326" fg:w="1"/><text x="63.5141%" y="671.50"></text></g><g><title>libruby.3.4.dylib`any_hash (1 samples, 0.01%)</title><rect x="63.3226%" y="629" width="0.0146%" height="15" fill="rgb(206,104,37)" fg:x="4330" fg:w="1"/><text x="63.5726%" y="639.50"></text></g><g><title>libruby.3.4.dylib`rb_str_hash (1 samples, 0.01%)</title><rect x="63.3226%" y="613" width="0.0146%" height="15" fill="rgb(223,8,27)" fg:x="4330" fg:w="1"/><text x="63.5726%" y="623.50"></text></g><g><title>libruby.3.4.dylib`rb_st_init_existing_table_with_size (1 samples, 0.01%)</title><rect x="63.3372%" y="629" width="0.0146%" height="15" fill="rgb(216,217,28)" fg:x="4331" fg:w="1"/><text x="63.5872%" y="639.50"></text></g><g><title>libruby.3.4.dylib`ruby_xmalloc (1 samples, 0.01%)</title><rect x="63.3372%" y="613" width="0.0146%" height="15" fill="rgb(249,199,1)" fg:x="4331" fg:w="1"/><text x="63.5872%" y="623.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (1 samples, 0.01%)</title><rect x="63.3372%" y="597" width="0.0146%" height="15" fill="rgb(240,85,17)" fg:x="4331" fg:w="1"/><text x="63.5872%" y="607.50"></text></g><g><title>libruby.3.4.dylib`ar_force_convert_table (6 samples, 0.09%)</title><rect x="63.2934%" y="645" width="0.0877%" height="15" fill="rgb(206,108,45)" fg:x="4328" fg:w="6"/><text x="63.5434%" y="655.50"></text></g><g><title>libruby.3.4.dylib`rebuild_table_if_necessary (2 samples, 0.03%)</title><rect x="63.3519%" y="629" width="0.0292%" height="15" fill="rgb(245,210,41)" fg:x="4332" fg:w="2"/><text x="63.6019%" y="639.50"></text></g><g><title>libruby.3.4.dylib`objspace_malloc_increase_body (6 samples, 0.09%)</title><rect x="63.4396%" y="597" width="0.0877%" height="15" fill="rgb(206,13,37)" fg:x="4338" fg:w="6"/><text x="63.6896%" y="607.50"></text></g><g><title>libsystem_malloc.dylib`szone_size (3 samples, 0.04%)</title><rect x="63.5566%" y="581" width="0.0439%" height="15" fill="rgb(250,61,18)" fg:x="4346" fg:w="3"/><text x="63.8066%" y="591.50"></text></g><g><title>libsystem_malloc.dylib`tiny_size (3 samples, 0.04%)</title><rect x="63.5566%" y="565" width="0.0439%" height="15" fill="rgb(235,172,48)" fg:x="4346" fg:w="3"/><text x="63.8066%" y="575.50"></text></g><g><title>libsystem_malloc.dylib`malloc_size (6 samples, 0.09%)</title><rect x="63.5273%" y="597" width="0.0877%" height="15" fill="rgb(249,201,17)" fg:x="4344" fg:w="6"/><text x="63.7773%" y="607.50"></text></g><g><title>libsystem_malloc.dylib`tiny_size (1 samples, 0.01%)</title><rect x="63.6005%" y="581" width="0.0146%" height="15" fill="rgb(219,208,6)" fg:x="4349" fg:w="1"/><text x="63.8505%" y="591.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate_outlined (1 samples, 0.01%)</title><rect x="63.6151%" y="597" width="0.0146%" height="15" fill="rgb(248,31,23)" fg:x="4350" fg:w="1"/><text x="63.8651%" y="607.50"></text></g><g><title>libsystem_kernel.dylib`__ulock_wait2 (1 samples, 0.01%)</title><rect x="63.6882%" y="565" width="0.0146%" height="15" fill="rgb(245,15,42)" fg:x="4355" fg:w="1"/><text x="63.9382%" y="575.50"></text></g><g><title>libsystem_kernel.dylib`__ulock_wake (1 samples, 0.01%)</title><rect x="63.7028%" y="565" width="0.0146%" height="15" fill="rgb(222,217,39)" fg:x="4356" fg:w="1"/><text x="63.9528%" y="575.50"></text></g><g><title>libsystem_malloc.dylib`set_tiny_meta_header_in_use (2 samples, 0.03%)</title><rect x="63.7175%" y="565" width="0.0292%" height="15" fill="rgb(210,219,27)" fg:x="4357" fg:w="2"/><text x="63.9675%" y="575.50"></text></g><g><title>libsystem_malloc.dylib`_tiny_check_and_zero_inline_meta_from_freelist (1 samples, 0.01%)</title><rect x="63.8052%" y="549" width="0.0146%" height="15" fill="rgb(252,166,36)" fg:x="4363" fg:w="1"/><text x="64.0552%" y="559.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (14 samples, 0.20%)</title><rect x="63.6297%" y="597" width="0.2047%" height="15" fill="rgb(245,132,34)" fg:x="4351" fg:w="14"/><text x="63.8797%" y="607.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (14 samples, 0.20%)</title><rect x="63.6297%" y="581" width="0.2047%" height="15" fill="rgb(236,54,3)" fg:x="4351" fg:w="14"/><text x="63.8797%" y="591.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (6 samples, 0.09%)</title><rect x="63.7467%" y="565" width="0.0877%" height="15" fill="rgb(241,173,43)" fg:x="4359" fg:w="6"/><text x="63.9967%" y="575.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_add_ptr (1 samples, 0.01%)</title><rect x="63.8198%" y="549" width="0.0146%" height="15" fill="rgb(215,190,9)" fg:x="4364" fg:w="1"/><text x="64.0698%" y="559.50"></text></g><g><title>libruby.3.4.dylib`rb_gc_impl_malloc (30 samples, 0.44%)</title><rect x="63.4104%" y="613" width="0.4387%" height="15" fill="rgb(242,101,16)" fg:x="4336" fg:w="30"/><text x="63.6604%" y="623.50"></text></g><g><title>libsystem_malloc.dylib`szone_size (1 samples, 0.01%)</title><rect x="63.8345%" y="597" width="0.0146%" height="15" fill="rgb(223,190,21)" fg:x="4365" fg:w="1"/><text x="64.0845%" y="607.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (1 samples, 0.01%)</title><rect x="63.8491%" y="613" width="0.0146%" height="15" fill="rgb(215,228,25)" fg:x="4366" fg:w="1"/><text x="64.0991%" y="623.50"></text></g><g><title>libsystem_malloc.dylib`malloc (1 samples, 0.01%)</title><rect x="63.8637%" y="613" width="0.0146%" height="15" fill="rgb(225,36,22)" fg:x="4367" fg:w="1"/><text x="64.1137%" y="623.50"></text></g><g><title>libsystem_malloc.dylib`malloc_size (2 samples, 0.03%)</title><rect x="63.8783%" y="613" width="0.0292%" height="15" fill="rgb(251,106,46)" fg:x="4368" fg:w="2"/><text x="64.1283%" y="623.50"></text></g><g><title>libruby.3.4.dylib`rb_st_init_existing_table_with_size (38 samples, 0.56%)</title><rect x="63.3811%" y="645" width="0.5557%" height="15" fill="rgb(208,90,1)" fg:x="4334" fg:w="38"/><text x="63.6311%" y="655.50"></text></g><g><title>libruby.3.4.dylib`ruby_xmalloc (36 samples, 0.53%)</title><rect x="63.4104%" y="629" width="0.5265%" height="15" fill="rgb(243,10,4)" fg:x="4336" fg:w="36"/><text x="63.6604%" y="639.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (2 samples, 0.03%)</title><rect x="63.9076%" y="613" width="0.0292%" height="15" fill="rgb(212,137,27)" fg:x="4370" fg:w="2"/><text x="64.1576%" y="623.50"></text></g><g><title>libsystem_malloc.dylib`DYLD-STUB$$_platform_bzero (4 samples, 0.06%)</title><rect x="64.0099%" y="629" width="0.0585%" height="15" fill="rgb(231,220,49)" fg:x="4377" fg:w="4"/><text x="64.2599%" y="639.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (4 samples, 0.06%)</title><rect x="64.0684%" y="629" width="0.0585%" height="15" fill="rgb(237,96,20)" fg:x="4381" fg:w="4"/><text x="64.3184%" y="639.50"></text></g><g><title>libsystem_malloc.dylib`malloc_size (1 samples, 0.01%)</title><rect x="64.1269%" y="629" width="0.0146%" height="15" fill="rgb(239,229,30)" fg:x="4385" fg:w="1"/><text x="64.3769%" y="639.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_size (3 samples, 0.04%)</title><rect x="64.1416%" y="629" width="0.0439%" height="15" fill="rgb(219,65,33)" fg:x="4386" fg:w="3"/><text x="64.3916%" y="639.50"></text></g><g><title>libsystem_platform.dylib`__bzero (1 samples, 0.01%)</title><rect x="64.1854%" y="629" width="0.0146%" height="15" fill="rgb(243,134,7)" fg:x="4389" fg:w="1"/><text x="64.4354%" y="639.50"></text></g><g><title>libruby.3.4.dylib`ruby_xfree (19 samples, 0.28%)</title><rect x="63.9368%" y="645" width="0.2779%" height="15" fill="rgb(216,177,54)" fg:x="4372" fg:w="19"/><text x="64.1868%" y="655.50"></text></g><g><title>libsystem_platform.dylib`_platform_memset (1 samples, 0.01%)</title><rect x="64.2001%" y="629" width="0.0146%" height="15" fill="rgb(211,160,20)" fg:x="4390" fg:w="1"/><text x="64.4501%" y="639.50"></text></g><g><title>libsystem_malloc.dylib`malloc_size (2 samples, 0.03%)</title><rect x="64.2147%" y="613" width="0.0292%" height="15" fill="rgb(239,85,39)" fg:x="4391" fg:w="2"/><text x="64.4647%" y="623.50"></text></g><g><title>libruby.3.4.dylib`rb_gc_impl_malloc (4 samples, 0.06%)</title><rect x="64.2147%" y="629" width="0.0585%" height="15" fill="rgb(232,125,22)" fg:x="4391" fg:w="4"/><text x="64.4647%" y="639.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_size (2 samples, 0.03%)</title><rect x="64.2439%" y="613" width="0.0292%" height="15" fill="rgb(244,57,34)" fg:x="4393" fg:w="2"/><text x="64.4939%" y="623.50"></text></g><g><title>libruby.3.4.dylib`ruby_xmalloc (5 samples, 0.07%)</title><rect x="64.2147%" y="645" width="0.0731%" height="15" fill="rgb(214,203,32)" fg:x="4391" fg:w="5"/><text x="64.4647%" y="655.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (1 samples, 0.01%)</title><rect x="64.2732%" y="629" width="0.0146%" height="15" fill="rgb(207,58,43)" fg:x="4395" fg:w="1"/><text x="64.5232%" y="639.50"></text></g><g><title>libsystem_malloc.dylib`_free (3 samples, 0.04%)</title><rect x="64.2878%" y="645" width="0.0439%" height="15" fill="rgb(215,193,15)" fg:x="4396" fg:w="3"/><text x="64.5378%" y="655.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (1 samples, 0.01%)</title><rect x="64.3317%" y="645" width="0.0146%" height="15" fill="rgb(232,15,44)" fg:x="4399" fg:w="1"/><text x="64.5817%" y="655.50"></text></g><g><title>libruby.3.4.dylib`rb_hash_bulk_insert_into_st_table (74 samples, 1.08%)</title><rect x="63.2787%" y="661" width="1.0822%" height="15" fill="rgb(212,3,48)" fg:x="4327" fg:w="74"/><text x="63.5287%" y="671.50"></text></g><g><title>libsystem_malloc.dylib`malloc_size (1 samples, 0.01%)</title><rect x="64.3463%" y="645" width="0.0146%" height="15" fill="rgb(218,128,7)" fg:x="4400" fg:w="1"/><text x="64.5963%" y="655.50"></text></g><g><title>libruby.3.4.dylib`any_hash (1 samples, 0.01%)</title><rect x="64.6827%" y="645" width="0.0146%" height="15" fill="rgb(226,216,39)" fg:x="4423" fg:w="1"/><text x="64.9327%" y="655.50"></text></g><g><title>libruby.3.4.dylib`rb_gc_writebarrier (5 samples, 0.07%)</title><rect x="64.6973%" y="645" width="0.0731%" height="15" fill="rgb(243,47,51)" fg:x="4424" fg:w="5"/><text x="64.9473%" y="655.50"></text></g><g><title>libruby.3.4.dylib`rb_obj_class (7 samples, 0.10%)</title><rect x="64.7704%" y="645" width="0.1024%" height="15" fill="rgb(241,183,40)" fg:x="4429" fg:w="7"/><text x="65.0204%" y="655.50"></text></g><g><title>libruby.3.4.dylib`objspace_malloc_increase_body (1 samples, 0.01%)</title><rect x="64.8874%" y="629" width="0.0146%" height="15" fill="rgb(231,217,32)" fg:x="4437" fg:w="1"/><text x="65.1374%" y="639.50"></text></g><g><title>libruby.3.4.dylib`rb_gc_impl_malloc (1 samples, 0.01%)</title><rect x="64.9020%" y="629" width="0.0146%" height="15" fill="rgb(229,61,38)" fg:x="4438" fg:w="1"/><text x="65.1520%" y="639.50"></text></g><g><title>libsystem_malloc.dylib`malloc_size (1 samples, 0.01%)</title><rect x="64.9020%" y="613" width="0.0146%" height="15" fill="rgb(225,210,5)" fg:x="4438" fg:w="1"/><text x="65.1520%" y="623.50"></text></g><g><title>libruby.3.4.dylib`ruby_xrealloc (4 samples, 0.06%)</title><rect x="64.8728%" y="645" width="0.0585%" height="15" fill="rgb(231,79,45)" fg:x="4436" fg:w="4"/><text x="65.1228%" y="655.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (1 samples, 0.01%)</title><rect x="64.9166%" y="629" width="0.0146%" height="15" fill="rgb(224,100,7)" fg:x="4439" fg:w="1"/><text x="65.1666%" y="639.50"></text></g><g><title>libruby.3.4.dylib`any_hash (15 samples, 0.22%)</title><rect x="65.2969%" y="629" width="0.2194%" height="15" fill="rgb(241,198,18)" fg:x="4465" fg:w="15"/><text x="65.5469%" y="639.50"></text></g><g><title>libruby.3.4.dylib`rb_str_hash (2 samples, 0.03%)</title><rect x="65.4870%" y="613" width="0.0292%" height="15" fill="rgb(252,97,53)" fg:x="4478" fg:w="2"/><text x="65.7370%" y="623.50"></text></g><g><title>libruby.3.4.dylib`rb_gc_writebarrier (6 samples, 0.09%)</title><rect x="65.5162%" y="629" width="0.0877%" height="15" fill="rgb(220,88,7)" fg:x="4480" fg:w="6"/><text x="65.7662%" y="639.50"></text></g><g><title>libruby.3.4.dylib`st_insert_generic (86 samples, 1.26%)</title><rect x="64.3609%" y="661" width="1.2577%" height="15" fill="rgb(213,176,14)" fg:x="4401" fg:w="86"/><text x="64.6109%" y="671.50"></text></g><g><title>libruby.3.4.dylib`st_insert_single (47 samples, 0.69%)</title><rect x="64.9313%" y="645" width="0.6873%" height="15" fill="rgb(246,73,7)" fg:x="4440" fg:w="47"/><text x="65.1813%" y="655.50"></text></g><g><title>libruby.3.4.dylib`rb_str_hash (1 samples, 0.01%)</title><rect x="65.6040%" y="629" width="0.0146%" height="15" fill="rgb(245,64,36)" fg:x="4486" fg:w="1"/><text x="65.8540%" y="639.50"></text></g><g><title>libruby.3.4.dylib`st_insert_single (1 samples, 0.01%)</title><rect x="65.6186%" y="661" width="0.0146%" height="15" fill="rgb(245,80,10)" fg:x="4487" fg:w="1"/><text x="65.8686%" y="671.50"></text></g><g><title>libruby.3.4.dylib`m_core_hash_merge_ptr (167 samples, 2.44%)</title><rect x="63.2056%" y="677" width="2.4422%" height="15" fill="rgb(232,107,50)" fg:x="4322" fg:w="167"/><text x="63.4556%" y="687.50">li..</text></g><g><title>libsystem_platform.dylib`_platform_memmove (1 samples, 0.01%)</title><rect x="65.6332%" y="661" width="0.0146%" height="15" fill="rgb(253,3,0)" fg:x="4488" fg:w="1"/><text x="65.8832%" y="671.50"></text></g><g><title>libdyld.dylib`tlv_get_addr (2 samples, 0.03%)</title><rect x="65.6771%" y="661" width="0.0292%" height="15" fill="rgb(212,99,53)" fg:x="4491" fg:w="2"/><text x="65.9271%" y="671.50"></text></g><g><title>libruby.3.4.dylib`callable_method_entry_or_negative (5 samples, 0.07%)</title><rect x="65.7502%" y="629" width="0.0731%" height="15" fill="rgb(249,111,54)" fg:x="4496" fg:w="5"/><text x="66.0002%" y="639.50"></text></g><g><title>libruby.3.4.dylib`callable_method_entry_refinements (7 samples, 0.10%)</title><rect x="65.7356%" y="645" width="0.1024%" height="15" fill="rgb(249,55,30)" fg:x="4495" fg:w="7"/><text x="65.9856%" y="655.50"></text></g><g><title>libruby.3.4.dylib`rb_id_table_lookup (1 samples, 0.01%)</title><rect x="65.8233%" y="629" width="0.0146%" height="15" fill="rgb(237,47,42)" fg:x="4501" fg:w="1"/><text x="66.0733%" y="639.50"></text></g><g><title>libruby.3.4.dylib`basic_obj_respond_to (10 samples, 0.15%)</title><rect x="65.7063%" y="661" width="0.1462%" height="15" fill="rgb(211,20,18)" fg:x="4493" fg:w="10"/><text x="65.9563%" y="671.50"></text></g><g><title>libruby.3.4.dylib`rb_id_table_lookup (1 samples, 0.01%)</title><rect x="65.8380%" y="645" width="0.0146%" height="15" fill="rgb(231,203,46)" fg:x="4502" fg:w="1"/><text x="66.0880%" y="655.50"></text></g><g><title>libruby.3.4.dylib`callable_method_entry_refinements (1 samples, 0.01%)</title><rect x="65.8526%" y="661" width="0.0146%" height="15" fill="rgb(237,142,3)" fg:x="4503" fg:w="1"/><text x="66.1026%" y="671.50"></text></g><g><title>libruby.3.4.dylib`obj_respond_to (16 samples, 0.23%)</title><rect x="65.6479%" y="677" width="0.2340%" height="15" fill="rgb(241,107,1)" fg:x="4489" fg:w="16"/><text x="65.8979%" y="687.50"></text></g><g><title>libruby.3.4.dylib`rb_current_ec (1 samples, 0.01%)</title><rect x="65.8672%" y="661" width="0.0146%" height="15" fill="rgb(229,83,13)" fg:x="4504" fg:w="1"/><text x="66.1172%" y="671.50"></text></g><g><title>libruby.3.4.dylib`proc_new (2 samples, 0.03%)</title><rect x="65.8818%" y="677" width="0.0292%" height="15" fill="rgb(241,91,40)" fg:x="4505" fg:w="2"/><text x="66.1318%" y="687.50"></text></g><g><title>libruby.3.4.dylib`rb_current_ec (2 samples, 0.03%)</title><rect x="65.8818%" y="661" width="0.0292%" height="15" fill="rgb(225,3,45)" fg:x="4505" fg:w="2"/><text x="66.1318%" y="671.50"></text></g><g><title>libruby.3.4.dylib`rb_block_given_p (1 samples, 0.01%)</title><rect x="65.9111%" y="661" width="0.0146%" height="15" fill="rgb(244,223,14)" fg:x="4507" fg:w="1"/><text x="66.1611%" y="671.50"></text></g><g><title>libruby.3.4.dylib`rb_current_ec (1 samples, 0.01%)</title><rect x="65.9111%" y="645" width="0.0146%" height="15" fill="rgb(224,124,37)" fg:x="4507" fg:w="1"/><text x="66.1611%" y="655.50"></text></g><g><title>libdyld.dylib`tlv_get_addr (1 samples, 0.01%)</title><rect x="65.9403%" y="645" width="0.0146%" height="15" fill="rgb(251,171,30)" fg:x="4509" fg:w="1"/><text x="66.1903%" y="655.50"></text></g><g><title>libruby.3.4.dylib`DYLD-STUB$$memcpy (1 samples, 0.01%)</title><rect x="65.9550%" y="645" width="0.0146%" height="15" fill="rgb(236,46,54)" fg:x="4510" fg:w="1"/><text x="66.2050%" y="655.50"></text></g><g><title>libruby.3.4.dylib`DYLD-STUB$$_setjmp (1 samples, 0.01%)</title><rect x="65.9696%" y="629" width="0.0146%" height="15" fill="rgb(245,213,5)" fg:x="4511" fg:w="1"/><text x="66.2196%" y="639.50"></text></g><g><title>libruby.3.4.dylib`rb_vm_exec (14 samples, 0.20%)</title><rect x="65.9842%" y="629" width="0.2047%" height="15" fill="rgb(230,144,27)" fg:x="4512" fg:w="14"/><text x="66.2342%" y="639.50"></text></g><g><title>libruby.3.4.dylib`vm_exec_core (13 samples, 0.19%)</title><rect x="65.9988%" y="613" width="0.1901%" height="15" fill="rgb(220,86,6)" fg:x="4513" fg:w="13"/><text x="66.2488%" y="623.50"></text></g><g><title>libruby.3.4.dylib`invoke_block_from_c_bh (16 samples, 0.23%)</title><rect x="65.9696%" y="645" width="0.2340%" height="15" fill="rgb(240,20,13)" fg:x="4511" fg:w="16"/><text x="66.2196%" y="655.50"></text></g><g><title>libsystem_platform.dylib`_setjmp (1 samples, 0.01%)</title><rect x="66.1889%" y="629" width="0.0146%" height="15" fill="rgb(217,89,34)" fg:x="4526" fg:w="1"/><text x="66.4389%" y="639.50"></text></g><g><title>libruby.3.4.dylib`rb_vm_exec (1 samples, 0.01%)</title><rect x="66.2036%" y="645" width="0.0146%" height="15" fill="rgb(229,13,5)" fg:x="4527" fg:w="1"/><text x="66.4536%" y="655.50"></text></g><g><title>libruby.3.4.dylib`rb_ary_each (23 samples, 0.34%)</title><rect x="65.9111%" y="677" width="0.3364%" height="15" fill="rgb(244,67,35)" fg:x="4507" fg:w="23"/><text x="66.1611%" y="687.50"></text></g><g><title>libruby.3.4.dylib`rb_yield (22 samples, 0.32%)</title><rect x="65.9257%" y="661" width="0.3217%" height="15" fill="rgb(221,40,2)" fg:x="4508" fg:w="22"/><text x="66.1757%" y="671.50"></text></g><g><title>libruby.3.4.dylib`vm_callee_setup_block_arg (2 samples, 0.03%)</title><rect x="66.2182%" y="645" width="0.0292%" height="15" fill="rgb(237,157,21)" fg:x="4528" fg:w="2"/><text x="66.4682%" y="655.50"></text></g><g><title>libruby.3.4.dylib`rb_block_given_p (1 samples, 0.01%)</title><rect x="66.2474%" y="677" width="0.0146%" height="15" fill="rgb(222,94,11)" fg:x="4530" fg:w="1"/><text x="66.4974%" y="687.50"></text></g><g><title>libruby.3.4.dylib`rb_check_id (1 samples, 0.01%)</title><rect x="66.2621%" y="677" width="0.0146%" height="15" fill="rgb(249,113,6)" fg:x="4531" fg:w="1"/><text x="66.5121%" y="687.50"></text></g><g><title>libruby.3.4.dylib`class_call_alloc_func (1 samples, 0.01%)</title><rect x="66.2767%" y="661" width="0.0146%" height="15" fill="rgb(238,137,36)" fg:x="4532" fg:w="1"/><text x="66.5267%" y="671.50"></text></g><g><title>libruby.3.4.dylib`newobj_of (1 samples, 0.01%)</title><rect x="66.2767%" y="645" width="0.0146%" height="15" fill="rgb(210,102,26)" fg:x="4532" fg:w="1"/><text x="66.5267%" y="655.50"></text></g><g><title>libruby.3.4.dylib`rb_call_super_kw (1 samples, 0.01%)</title><rect x="66.3059%" y="629" width="0.0146%" height="15" fill="rgb(218,30,30)" fg:x="4534" fg:w="1"/><text x="66.5559%" y="639.50"></text></g><g><title>libruby.3.4.dylib`rb_gc_writebarrier (1 samples, 0.01%)</title><rect x="66.3206%" y="629" width="0.0146%" height="15" fill="rgb(214,67,26)" fg:x="4535" fg:w="1"/><text x="66.5706%" y="639.50"></text></g><g><title>libruby.3.4.dylib`rb_io_extract_modeenc (2 samples, 0.03%)</title><rect x="66.3352%" y="629" width="0.0292%" height="15" fill="rgb(251,9,53)" fg:x="4536" fg:w="2"/><text x="66.5852%" y="639.50"></text></g><g><title>libruby.3.4.dylib`rb_string_value (1 samples, 0.01%)</title><rect x="66.3644%" y="629" width="0.0146%" height="15" fill="rgb(228,204,25)" fg:x="4538" fg:w="1"/><text x="66.6144%" y="639.50"></text></g><g><title>libruby.3.4.dylib`rb_vm_call_kw (1 samples, 0.01%)</title><rect x="66.3791%" y="629" width="0.0146%" height="15" fill="rgb(207,153,8)" fg:x="4539" fg:w="1"/><text x="66.6291%" y="639.50"></text></g><g><title>stringio.bundle`DYLD-STUB$$rb_string_value (1 samples, 0.01%)</title><rect x="66.3937%" y="629" width="0.0146%" height="15" fill="rgb(242,9,16)" fg:x="4540" fg:w="1"/><text x="66.6437%" y="639.50"></text></g><g><title>stringio.bundle`DYLD-STUB$$ruby_xmalloc (1 samples, 0.01%)</title><rect x="66.4083%" y="629" width="0.0146%" height="15" fill="rgb(217,211,10)" fg:x="4541" fg:w="1"/><text x="66.6583%" y="639.50"></text></g><g><title>libruby.3.4.dylib`rb_ascii8bit_encoding (1 samples, 0.01%)</title><rect x="66.4814%" y="613" width="0.0146%" height="15" fill="rgb(219,228,52)" fg:x="4546" fg:w="1"/><text x="66.7314%" y="623.50"></text></g><g><title>libruby.3.4.dylib`rb_enc_get (1 samples, 0.01%)</title><rect x="66.4961%" y="613" width="0.0146%" height="15" fill="rgb(231,92,29)" fg:x="4547" fg:w="1"/><text x="66.7461%" y="623.50"></text></g><g><title>libruby.3.4.dylib`rb_io_extract_modeenc (6 samples, 0.09%)</title><rect x="66.5107%" y="613" width="0.0877%" height="15" fill="rgb(232,8,23)" fg:x="4548" fg:w="6"/><text x="66.7607%" y="623.50"></text></g><g><title>libruby.3.4.dylib`rb_default_external_encoding (4 samples, 0.06%)</title><rect x="66.5399%" y="597" width="0.0585%" height="15" fill="rgb(216,211,34)" fg:x="4550" fg:w="4"/><text x="66.7899%" y="607.50"></text></g><g><title>stringio.bundle`strio_init (13 samples, 0.19%)</title><rect x="66.4229%" y="629" width="0.1901%" height="15" fill="rgb(236,151,0)" fg:x="4542" fg:w="13"/><text x="66.6729%" y="639.50"></text></g><g><title>libruby.3.4.dylib`rb_keyword_given_p (1 samples, 0.01%)</title><rect x="66.5984%" y="613" width="0.0146%" height="15" fill="rgb(209,168,3)" fg:x="4554" fg:w="1"/><text x="66.8484%" y="623.50"></text></g><g><title>libdyld.dylib`tlv_get_addr (1 samples, 0.01%)</title><rect x="66.5984%" y="597" width="0.0146%" height="15" fill="rgb(208,129,28)" fg:x="4554" fg:w="1"/><text x="66.8484%" y="607.50"></text></g><g><title>libruby.3.4.dylib`callable_method_entry_or_negative (1 samples, 0.01%)</title><rect x="66.6130%" y="613" width="0.0146%" height="15" fill="rgb(229,78,22)" fg:x="4555" fg:w="1"/><text x="66.8630%" y="623.50"></text></g><g><title>libruby.3.4.dylib`rb_call_super_kw (2 samples, 0.03%)</title><rect x="66.6277%" y="613" width="0.0292%" height="15" fill="rgb(228,187,13)" fg:x="4556" fg:w="2"/><text x="66.8777%" y="623.50"></text></g><g><title>libruby.3.4.dylib`rb_vm_call_kw (4 samples, 0.06%)</title><rect x="66.6569%" y="613" width="0.0585%" height="15" fill="rgb(240,119,24)" fg:x="4558" fg:w="4"/><text x="66.9069%" y="623.50"></text></g><g><title>libruby.3.4.dylib`rb_obj_dummy0 (2 samples, 0.03%)</title><rect x="66.6862%" y="597" width="0.0292%" height="15" fill="rgb(209,194,42)" fg:x="4560" fg:w="2"/><text x="66.9362%" y="607.50"></text></g><g><title>libsystem_malloc.dylib`malloc_size (1 samples, 0.01%)</title><rect x="66.7447%" y="581" width="0.0146%" height="15" fill="rgb(247,200,46)" fg:x="4564" fg:w="1"/><text x="66.9947%" y="591.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate_outlined (1 samples, 0.01%)</title><rect x="66.7593%" y="581" width="0.0146%" height="15" fill="rgb(218,76,16)" fg:x="4565" fg:w="1"/><text x="67.0093%" y="591.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_find_block_and_allocate (1 samples, 0.01%)</title><rect x="66.7593%" y="565" width="0.0146%" height="15" fill="rgb(225,21,48)" fg:x="4565" fg:w="1"/><text x="67.0093%" y="575.50"></text></g><g><title>libruby.3.4.dylib`rb_gc_impl_malloc (5 samples, 0.07%)</title><rect x="66.7154%" y="597" width="0.0731%" height="15" fill="rgb(239,223,50)" fg:x="4562" fg:w="5"/><text x="66.9654%" y="607.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_size (1 samples, 0.01%)</title><rect x="66.7739%" y="581" width="0.0146%" height="15" fill="rgb(244,45,21)" fg:x="4566" fg:w="1"/><text x="67.0239%" y="591.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (3 samples, 0.04%)</title><rect x="66.7885%" y="597" width="0.0439%" height="15" fill="rgb(232,33,43)" fg:x="4567" fg:w="3"/><text x="67.0385%" y="607.50"></text></g><g><title>libruby.3.4.dylib`rb_call0 (39 samples, 0.57%)</title><rect x="66.2913%" y="661" width="0.5703%" height="15" fill="rgb(209,8,3)" fg:x="4533" fg:w="39"/><text x="66.5413%" y="671.50"></text></g><g><title>libruby.3.4.dylib`vm_call0_body (38 samples, 0.56%)</title><rect x="66.3059%" y="645" width="0.5557%" height="15" fill="rgb(214,25,53)" fg:x="4534" fg:w="38"/><text x="66.5559%" y="655.50"></text></g><g><title>stringio.bundle`strio_initialize (17 samples, 0.25%)</title><rect x="66.6130%" y="629" width="0.2486%" height="15" fill="rgb(254,186,54)" fg:x="4555" fg:w="17"/><text x="66.8630%" y="639.50"></text></g><g><title>libruby.3.4.dylib`ruby_xmalloc (10 samples, 0.15%)</title><rect x="66.7154%" y="613" width="0.1462%" height="15" fill="rgb(208,174,49)" fg:x="4562" fg:w="10"/><text x="66.9654%" y="623.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (2 samples, 0.03%)</title><rect x="66.8324%" y="597" width="0.0292%" height="15" fill="rgb(233,191,51)" fg:x="4570" fg:w="2"/><text x="67.0824%" y="607.50"></text></g><g><title>libruby.3.4.dylib`rb_class_new_instance_kw (41 samples, 0.60%)</title><rect x="66.2767%" y="677" width="0.5996%" height="15" fill="rgb(222,134,10)" fg:x="4532" fg:w="41"/><text x="66.5267%" y="687.50"></text></g><g><title>libruby.3.4.dylib`rb_class_alloc (1 samples, 0.01%)</title><rect x="66.8617%" y="661" width="0.0146%" height="15" fill="rgb(230,226,20)" fg:x="4572" fg:w="1"/><text x="67.1117%" y="671.50"></text></g><g><title>libruby.3.4.dylib`rb_hash_bulk_insert_into_st_table (1 samples, 0.01%)</title><rect x="66.8763%" y="677" width="0.0146%" height="15" fill="rgb(251,111,25)" fg:x="4573" fg:w="1"/><text x="67.1263%" y="687.50"></text></g><g><title>libruby.3.4.dylib`rb_block_given_p (1 samples, 0.01%)</title><rect x="66.9202%" y="661" width="0.0146%" height="15" fill="rgb(224,40,46)" fg:x="4576" fg:w="1"/><text x="67.1702%" y="671.50"></text></g><g><title>libdyld.dylib`tlv_get_addr (1 samples, 0.01%)</title><rect x="66.9202%" y="645" width="0.0146%" height="15" fill="rgb(236,108,47)" fg:x="4576" fg:w="1"/><text x="67.1702%" y="655.50"></text></g><g><title>libruby.3.4.dylib`rb_hash_delete_m (6 samples, 0.09%)</title><rect x="66.8909%" y="677" width="0.0877%" height="15" fill="rgb(234,93,0)" fg:x="4574" fg:w="6"/><text x="67.1409%" y="687.50"></text></g><g><title>libruby.3.4.dylib`rb_hash_stlike_delete (3 samples, 0.04%)</title><rect x="66.9348%" y="661" width="0.0439%" height="15" fill="rgb(224,213,32)" fg:x="4577" fg:w="3"/><text x="67.1848%" y="671.50"></text></g><g><title>libruby.3.4.dylib`any_hash (2 samples, 0.03%)</title><rect x="66.9494%" y="645" width="0.0292%" height="15" fill="rgb(251,11,48)" fg:x="4578" fg:w="2"/><text x="67.1994%" y="655.50"></text></g><g><title>libruby.3.4.dylib`rb_block_given_p (2 samples, 0.03%)</title><rect x="66.9786%" y="661" width="0.0292%" height="15" fill="rgb(236,173,5)" fg:x="4580" fg:w="2"/><text x="67.2286%" y="671.50"></text></g><g><title>libdyld.dylib`tlv_get_addr (2 samples, 0.03%)</title><rect x="66.9786%" y="645" width="0.0292%" height="15" fill="rgb(230,95,12)" fg:x="4580" fg:w="2"/><text x="67.2286%" y="655.50"></text></g><g><title>libruby.3.4.dylib`rb_block_pair_yield_optimizable (3 samples, 0.04%)</title><rect x="67.0079%" y="661" width="0.0439%" height="15" fill="rgb(232,209,1)" fg:x="4582" fg:w="3"/><text x="67.2579%" y="671.50"></text></g><g><title>libdyld.dylib`tlv_get_addr (1 samples, 0.01%)</title><rect x="67.0371%" y="645" width="0.0146%" height="15" fill="rgb(232,6,1)" fg:x="4584" fg:w="1"/><text x="67.2871%" y="655.50"></text></g><g><title>libruby.3.4.dylib`hash_foreach_call (1 samples, 0.01%)</title><rect x="67.0664%" y="645" width="0.0146%" height="15" fill="rgb(210,224,50)" fg:x="4586" fg:w="1"/><text x="67.3164%" y="655.50"></text></g><g><title>libruby.3.4.dylib`hash_foreach_ensure (1 samples, 0.01%)</title><rect x="67.0810%" y="645" width="0.0146%" height="15" fill="rgb(228,127,35)" fg:x="4587" fg:w="1"/><text x="67.3310%" y="655.50"></text></g><g><title>libruby.3.4.dylib`CALLER_SETUP_ARG (1 samples, 0.01%)</title><rect x="67.1980%" y="565" width="0.0146%" height="15" fill="rgb(245,102,45)" fg:x="4595" fg:w="1"/><text x="67.4480%" y="575.50"></text></g><g><title>libruby.3.4.dylib`rb_vm_opt_getconstant_path (1 samples, 0.01%)</title><rect x="67.2711%" y="549" width="0.0146%" height="15" fill="rgb(214,1,49)" fg:x="4600" fg:w="1"/><text x="67.5211%" y="559.50"></text></g><g><title>libruby.3.4.dylib`vm_call_cfunc_with_frame_ (6 samples, 0.09%)</title><rect x="67.2858%" y="549" width="0.0877%" height="15" fill="rgb(226,163,40)" fg:x="4601" fg:w="6"/><text x="67.5358%" y="559.50"></text></g><g><title>libruby.3.4.dylib`ractor_safe_call_cfunc_1 (1 samples, 0.01%)</title><rect x="67.4759%" y="533" width="0.0146%" height="15" fill="rgb(239,212,28)" fg:x="4614" fg:w="1"/><text x="67.7259%" y="543.50"></text></g><g><title>itsi_server.bundle`&lt;http::header::name::HeaderName as core::str::traits::FromStr&gt;::from_str (1 samples, 0.01%)</title><rect x="67.5929%" y="501" width="0.0146%" height="15" fill="rgb(220,20,13)" fg:x="4622" fg:w="1"/><text x="67.8429%" y="511.50"></text></g><g><title>itsi_server.bundle`&lt;magnus::r_string::RString as magnus::try_convert::TryConvert&gt;::try_convert (1 samples, 0.01%)</title><rect x="67.6075%" y="501" width="0.0146%" height="15" fill="rgb(210,164,35)" fg:x="4623" fg:w="1"/><text x="67.8575%" y="511.50"></text></g><g><title>itsi_server.bundle`DYLD-STUB$$rb_enc_get_index (1 samples, 0.01%)</title><rect x="67.6221%" y="501" width="0.0146%" height="15" fill="rgb(248,109,41)" fg:x="4624" fg:w="1"/><text x="67.8721%" y="511.50"></text></g><g><title>itsi_server.bundle`DYLD-STUB$$rb_protect (1 samples, 0.01%)</title><rect x="67.6367%" y="501" width="0.0146%" height="15" fill="rgb(238,23,50)" fg:x="4625" fg:w="1"/><text x="67.8867%" y="511.50"></text></g><g><title>itsi_server.bundle`__rdl_alloc (2 samples, 0.03%)</title><rect x="67.6514%" y="501" width="0.0292%" height="15" fill="rgb(211,48,49)" fg:x="4626" fg:w="2"/><text x="67.9014%" y="511.50"></text></g><g><title>itsi_server.bundle`http::header::name::HeaderName::from_bytes (2 samples, 0.03%)</title><rect x="67.7976%" y="469" width="0.0292%" height="15" fill="rgb(223,36,21)" fg:x="4636" fg:w="2"/><text x="68.0476%" y="479.50"></text></g><g><title>itsi_server.bundle`&lt;http::header::name::HeaderName as core::str::traits::FromStr&gt;::from_str (6 samples, 0.09%)</title><rect x="67.7976%" y="485" width="0.0877%" height="15" fill="rgb(207,123,46)" fg:x="4636" fg:w="6"/><text x="68.0476%" y="495.50"></text></g><g><title>itsi_server.bundle`http::header::name::StandardHeader::from_bytes (4 samples, 0.06%)</title><rect x="67.8268%" y="469" width="0.0585%" height="15" fill="rgb(240,218,32)" fg:x="4638" fg:w="4"/><text x="68.0768%" y="479.50"></text></g><g><title>itsi_server.bundle`__rdl_dealloc (2 samples, 0.03%)</title><rect x="67.8853%" y="485" width="0.0292%" height="15" fill="rgb(252,5,43)" fg:x="4642" fg:w="2"/><text x="68.1353%" y="495.50"></text></g><g><title>itsi_server.bundle`bytes::bytes::Bytes::copy_from_slice (1 samples, 0.01%)</title><rect x="67.9146%" y="485" width="0.0146%" height="15" fill="rgb(252,84,19)" fg:x="4644" fg:w="1"/><text x="68.1646%" y="495.50"></text></g><g><title>itsi_server.bundle`http::header::map::HeaderMap&lt;T&gt;::try_insert_entry (5 samples, 0.07%)</title><rect x="67.9292%" y="485" width="0.0731%" height="15" fill="rgb(243,152,39)" fg:x="4645" fg:w="5"/><text x="68.1792%" y="495.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate_outlined (2 samples, 0.03%)</title><rect x="68.0316%" y="469" width="0.0292%" height="15" fill="rgb(234,160,15)" fg:x="4652" fg:w="2"/><text x="68.2816%" y="479.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_find_block_and_allocate (2 samples, 0.03%)</title><rect x="68.0316%" y="453" width="0.0292%" height="15" fill="rgb(237,34,20)" fg:x="4652" fg:w="2"/><text x="68.2816%" y="463.50"></text></g><g><title>libsystem_malloc.dylib`rack_get_thread_index (2 samples, 0.03%)</title><rect x="68.0755%" y="453" width="0.0292%" height="15" fill="rgb(229,97,13)" fg:x="4655" fg:w="2"/><text x="68.3255%" y="463.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (1 samples, 0.01%)</title><rect x="68.1047%" y="453" width="0.0146%" height="15" fill="rgb(234,71,50)" fg:x="4657" fg:w="1"/><text x="68.3547%" y="463.50"></text></g><g><title>libsystem_kernel.dylib`__ulock_wait2 (1 samples, 0.01%)</title><rect x="68.1486%" y="437" width="0.0146%" height="15" fill="rgb(253,155,4)" fg:x="4660" fg:w="1"/><text x="68.3986%" y="447.50"></text></g><g><title>libsystem_malloc.dylib`set_tiny_meta_header_in_use (4 samples, 0.06%)</title><rect x="68.1632%" y="437" width="0.0585%" height="15" fill="rgb(222,185,37)" fg:x="4661" fg:w="4"/><text x="68.4132%" y="447.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (18 samples, 0.26%)</title><rect x="68.0608%" y="469" width="0.2632%" height="15" fill="rgb(251,177,13)" fg:x="4654" fg:w="18"/><text x="68.3108%" y="479.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (14 samples, 0.20%)</title><rect x="68.1193%" y="453" width="0.2047%" height="15" fill="rgb(250,179,40)" fg:x="4658" fg:w="14"/><text x="68.3693%" y="463.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (7 samples, 0.10%)</title><rect x="68.2217%" y="437" width="0.1024%" height="15" fill="rgb(242,44,2)" fg:x="4665" fg:w="7"/><text x="68.4717%" y="447.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_add_ptr (1 samples, 0.01%)</title><rect x="68.3094%" y="421" width="0.0146%" height="15" fill="rgb(216,177,13)" fg:x="4671" fg:w="1"/><text x="68.5594%" y="431.50"></text></g><g><title>itsi_server.bundle`http::header::map::HeaderMap&lt;T&gt;::try_reserve_one (23 samples, 0.34%)</title><rect x="68.0023%" y="485" width="0.3364%" height="15" fill="rgb(216,106,43)" fg:x="4650" fg:w="23"/><text x="68.2523%" y="495.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (1 samples, 0.01%)</title><rect x="68.3241%" y="469" width="0.0146%" height="15" fill="rgb(216,183,2)" fg:x="4672" fg:w="1"/><text x="68.5741%" y="479.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (9 samples, 0.13%)</title><rect x="68.3387%" y="485" width="0.1316%" height="15" fill="rgb(249,75,3)" fg:x="4673" fg:w="9"/><text x="68.5887%" y="495.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (2 samples, 0.03%)</title><rect x="68.4703%" y="485" width="0.0292%" height="15" fill="rgb(219,67,39)" fg:x="4682" fg:w="2"/><text x="68.7203%" y="495.50"></text></g><g><title>itsi_server.bundle`itsi_server::response::itsi_response::ItsiResponse::add_header (57 samples, 0.83%)</title><rect x="67.6806%" y="501" width="0.8336%" height="15" fill="rgb(253,228,2)" fg:x="4628" fg:w="57"/><text x="67.9306%" y="511.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (1 samples, 0.01%)</title><rect x="68.4996%" y="485" width="0.0146%" height="15" fill="rgb(235,138,27)" fg:x="4684" fg:w="1"/><text x="68.7496%" y="495.50"></text></g><g><title>itsi_server.bundle`core::str::converts::from_utf8 (2 samples, 0.03%)</title><rect x="68.5581%" y="485" width="0.0292%" height="15" fill="rgb(236,97,51)" fg:x="4688" fg:w="2"/><text x="68.8081%" y="495.50"></text></g><g><title>itsi_server.bundle`magnus::r_string::RString::to_string (6 samples, 0.09%)</title><rect x="68.5142%" y="501" width="0.0877%" height="15" fill="rgb(240,80,30)" fg:x="4685" fg:w="6"/><text x="68.7642%" y="511.50"></text></g><g><title>libruby.3.4.dylib`rb_enc_get_index (1 samples, 0.01%)</title><rect x="68.5873%" y="485" width="0.0146%" height="15" fill="rgb(230,178,19)" fg:x="4690" fg:w="1"/><text x="68.8373%" y="495.50"></text></g><g><title>itsi_server.bundle`magnus::typed_data::_&lt;impl magnus::try_convert::TryConvert for &amp;T&gt;::try_convert (5 samples, 0.07%)</title><rect x="68.6019%" y="501" width="0.0731%" height="15" fill="rgb(210,190,27)" fg:x="4691" fg:w="5"/><text x="68.8519%" y="511.50"></text></g><g><title>libruby.3.4.dylib`rb_protect (4 samples, 0.06%)</title><rect x="68.6166%" y="485" width="0.0585%" height="15" fill="rgb(222,107,31)" fg:x="4692" fg:w="4"/><text x="68.8666%" y="495.50"></text></g><g><title>itsi_server.bundle`magnus::error::protect::call (1 samples, 0.01%)</title><rect x="68.6604%" y="469" width="0.0146%" height="15" fill="rgb(216,127,34)" fg:x="4695" fg:w="1"/><text x="68.9104%" y="479.50"></text></g><g><title>libruby.3.4.dylib`rb_check_typeddata (1 samples, 0.01%)</title><rect x="68.6604%" y="453" width="0.0146%" height="15" fill="rgb(234,116,52)" fg:x="4695" fg:w="1"/><text x="68.9104%" y="463.50"></text></g><g><title>libruby.3.4.dylib`rb_utf8_encindex (2 samples, 0.03%)</title><rect x="68.6751%" y="501" width="0.0292%" height="15" fill="rgb(222,124,15)" fg:x="4696" fg:w="2"/><text x="68.9251%" y="511.50"></text></g><g><title>libsystem_malloc.dylib`_free (2 samples, 0.03%)</title><rect x="68.7043%" y="501" width="0.0292%" height="15" fill="rgb(231,179,28)" fg:x="4698" fg:w="2"/><text x="68.9543%" y="511.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (3 samples, 0.04%)</title><rect x="68.7335%" y="501" width="0.0439%" height="15" fill="rgb(226,93,45)" fg:x="4700" fg:w="3"/><text x="68.9835%" y="511.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (1 samples, 0.01%)</title><rect x="68.7774%" y="501" width="0.0146%" height="15" fill="rgb(215,8,51)" fg:x="4703" fg:w="1"/><text x="69.0274%" y="511.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (2 samples, 0.03%)</title><rect x="68.7920%" y="501" width="0.0292%" height="15" fill="rgb(223,106,5)" fg:x="4704" fg:w="2"/><text x="69.0420%" y="511.50"></text></g><g><title>itsi_server.bundle`itsi_server::init::anon (87 samples, 1.27%)</title><rect x="67.5636%" y="517" width="1.2723%" height="15" fill="rgb(250,191,5)" fg:x="4620" fg:w="87"/><text x="67.8136%" y="527.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (1 samples, 0.01%)</title><rect x="68.8213%" y="501" width="0.0146%" height="15" fill="rgb(242,132,44)" fg:x="4706" fg:w="1"/><text x="69.0713%" y="511.50"></text></g><g><title>itsi_server.bundle`magnus::r_string::RString::to_string (1 samples, 0.01%)</title><rect x="68.8359%" y="517" width="0.0146%" height="15" fill="rgb(251,152,29)" fg:x="4707" fg:w="1"/><text x="69.0859%" y="527.50"></text></g><g><title>libruby.3.4.dylib`rb_vm_exec (113 samples, 1.65%)</title><rect x="67.2126%" y="565" width="1.6525%" height="15" fill="rgb(218,179,5)" fg:x="4596" fg:w="113"/><text x="67.4626%" y="575.50"></text></g><g><title>libruby.3.4.dylib`vm_exec_core (102 samples, 1.49%)</title><rect x="67.3735%" y="549" width="1.4917%" height="15" fill="rgb(227,67,19)" fg:x="4607" fg:w="102"/><text x="67.6235%" y="559.50"></text></g><g><title>libruby.3.4.dylib`vm_call_cfunc_with_frame_ (94 samples, 1.37%)</title><rect x="67.4905%" y="533" width="1.3747%" height="15" fill="rgb(233,119,31)" fg:x="4615" fg:w="94"/><text x="67.7405%" y="543.50"></text></g><g><title>libruby.3.4.dylib`rb_obj_is_kind_of (1 samples, 0.01%)</title><rect x="68.8505%" y="517" width="0.0146%" height="15" fill="rgb(241,120,22)" fg:x="4708" fg:w="1"/><text x="69.1005%" y="527.50"></text></g><g><title>libruby.3.4.dylib`invoke_block_from_c_bh (118 samples, 1.73%)</title><rect x="67.1541%" y="581" width="1.7257%" height="15" fill="rgb(224,102,30)" fg:x="4592" fg:w="118"/><text x="67.4041%" y="591.50"></text></g><g><title>libruby.3.4.dylib`vm_callee_setup_block_arg (1 samples, 0.01%)</title><rect x="68.8652%" y="565" width="0.0146%" height="15" fill="rgb(210,164,37)" fg:x="4709" fg:w="1"/><text x="69.1152%" y="575.50"></text></g><g><title>libruby.3.4.dylib`each_pair_i_fast (119 samples, 1.74%)</title><rect x="67.1541%" y="613" width="1.7403%" height="15" fill="rgb(226,191,16)" fg:x="4592" fg:w="119"/><text x="67.4041%" y="623.50"></text></g><g><title>libruby.3.4.dylib`rb_yield_values2 (119 samples, 1.74%)</title><rect x="67.1541%" y="597" width="1.7403%" height="15" fill="rgb(214,40,45)" fg:x="4592" fg:w="119"/><text x="67.4041%" y="607.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (1 samples, 0.01%)</title><rect x="68.8798%" y="581" width="0.0146%" height="15" fill="rgb(244,29,26)" fg:x="4710" fg:w="1"/><text x="69.1298%" y="591.50"></text></g><g><title>libruby.3.4.dylib`rb_ensure (124 samples, 1.81%)</title><rect x="67.0956%" y="645" width="1.8134%" height="15" fill="rgb(216,16,5)" fg:x="4588" fg:w="124"/><text x="67.3456%" y="655.50">l..</text></g><g><title>libruby.3.4.dylib`hash_foreach_call (122 samples, 1.78%)</title><rect x="67.1249%" y="629" width="1.7841%" height="15" fill="rgb(249,76,35)" fg:x="4590" fg:w="122"/><text x="67.3749%" y="639.50">l..</text></g><g><title>libruby.3.4.dylib`rb_yield_values2 (1 samples, 0.01%)</title><rect x="68.8944%" y="613" width="0.0146%" height="15" fill="rgb(207,11,44)" fg:x="4711" fg:w="1"/><text x="69.1444%" y="623.50"></text></g><g><title>libruby.3.4.dylib`rb_hash_each_pair (133 samples, 1.95%)</title><rect x="66.9786%" y="677" width="1.9450%" height="15" fill="rgb(228,190,49)" fg:x="4580" fg:w="133"/><text x="67.2286%" y="687.50">l..</text></g><g><title>libruby.3.4.dylib`rb_hash_foreach (128 samples, 1.87%)</title><rect x="67.0518%" y="661" width="1.8719%" height="15" fill="rgb(214,173,12)" fg:x="4585" fg:w="128"/><text x="67.3018%" y="671.50">l..</text></g><g><title>libsystem_platform.dylib`_setjmp (1 samples, 0.01%)</title><rect x="68.9090%" y="645" width="0.0146%" height="15" fill="rgb(218,26,35)" fg:x="4712" fg:w="1"/><text x="69.1590%" y="655.50"></text></g><g><title>libdyld.dylib`tlv_get_addr (2 samples, 0.03%)</title><rect x="68.9237%" y="645" width="0.0292%" height="15" fill="rgb(220,200,19)" fg:x="4713" fg:w="2"/><text x="69.1737%" y="655.50"></text></g><g><title>libruby.3.4.dylib`objspace_malloc_increase_body (1 samples, 0.01%)</title><rect x="68.9822%" y="581" width="0.0146%" height="15" fill="rgb(239,95,49)" fg:x="4717" fg:w="1"/><text x="69.2322%" y="591.50"></text></g><g><title>libsystem_malloc.dylib`malloc_size (5 samples, 0.07%)</title><rect x="68.9968%" y="581" width="0.0731%" height="15" fill="rgb(235,85,53)" fg:x="4718" fg:w="5"/><text x="69.2468%" y="591.50"></text></g><g><title>libsystem_malloc.dylib`szone_size (3 samples, 0.04%)</title><rect x="69.0260%" y="565" width="0.0439%" height="15" fill="rgb(233,133,31)" fg:x="4720" fg:w="3"/><text x="69.2760%" y="575.50"></text></g><g><title>libsystem_malloc.dylib`tiny_size (3 samples, 0.04%)</title><rect x="69.0260%" y="549" width="0.0439%" height="15" fill="rgb(218,25,20)" fg:x="4720" fg:w="3"/><text x="69.2760%" y="559.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_size (1 samples, 0.01%)</title><rect x="69.0699%" y="581" width="0.0146%" height="15" fill="rgb(252,210,38)" fg:x="4723" fg:w="1"/><text x="69.3199%" y="591.50"></text></g><g><title>libsystem_malloc.dylib`set_tiny_meta_header_in_use (4 samples, 0.06%)</title><rect x="69.1138%" y="549" width="0.0585%" height="15" fill="rgb(242,134,21)" fg:x="4726" fg:w="4"/><text x="69.3638%" y="559.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (16 samples, 0.23%)</title><rect x="69.0845%" y="565" width="0.2340%" height="15" fill="rgb(213,28,48)" fg:x="4724" fg:w="16"/><text x="69.3345%" y="575.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (10 samples, 0.15%)</title><rect x="69.1723%" y="549" width="0.1462%" height="15" fill="rgb(250,196,2)" fg:x="4730" fg:w="10"/><text x="69.4223%" y="559.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_add_ptr (1 samples, 0.01%)</title><rect x="69.3039%" y="533" width="0.0146%" height="15" fill="rgb(227,5,17)" fg:x="4739" fg:w="1"/><text x="69.5539%" y="543.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (17 samples, 0.25%)</title><rect x="69.0845%" y="581" width="0.2486%" height="15" fill="rgb(221,226,24)" fg:x="4724" fg:w="17"/><text x="69.3345%" y="591.50"></text></g><g><title>libsystem_platform.dylib`_os_unfair_lock_unlock_slow (1 samples, 0.01%)</title><rect x="69.3185%" y="565" width="0.0146%" height="15" fill="rgb(211,5,48)" fg:x="4740" fg:w="1"/><text x="69.5685%" y="575.50"></text></g><g><title>libruby.3.4.dylib`rb_gc_impl_malloc (26 samples, 0.38%)</title><rect x="68.9675%" y="597" width="0.3802%" height="15" fill="rgb(219,150,6)" fg:x="4716" fg:w="26"/><text x="69.2175%" y="607.50"></text></g><g><title>libsystem_malloc.dylib`szone_size (1 samples, 0.01%)</title><rect x="69.3331%" y="581" width="0.0146%" height="15" fill="rgb(251,46,16)" fg:x="4741" fg:w="1"/><text x="69.5831%" y="591.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (1 samples, 0.01%)</title><rect x="69.3478%" y="597" width="0.0146%" height="15" fill="rgb(220,204,40)" fg:x="4742" fg:w="1"/><text x="69.5978%" y="607.50"></text></g><g><title>libsystem_malloc.dylib`malloc_size (1 samples, 0.01%)</title><rect x="69.3624%" y="597" width="0.0146%" height="15" fill="rgb(211,85,2)" fg:x="4743" fg:w="1"/><text x="69.6124%" y="607.50"></text></g><g><title>libruby.3.4.dylib`rb_st_replace (31 samples, 0.45%)</title><rect x="68.9675%" y="629" width="0.4533%" height="15" fill="rgb(229,17,7)" fg:x="4716" fg:w="31"/><text x="69.2175%" y="639.50"></text></g><g><title>libruby.3.4.dylib`ruby_xmalloc (31 samples, 0.45%)</title><rect x="68.9675%" y="613" width="0.4533%" height="15" fill="rgb(239,72,28)" fg:x="4716" fg:w="31"/><text x="69.2175%" y="623.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (3 samples, 0.04%)</title><rect x="69.3770%" y="597" width="0.0439%" height="15" fill="rgb(230,47,54)" fg:x="4744" fg:w="3"/><text x="69.6270%" y="607.50"></text></g><g><title>libruby.3.4.dylib`hash_copy (40 samples, 0.58%)</title><rect x="68.9529%" y="645" width="0.5850%" height="15" fill="rgb(214,50,8)" fg:x="4715" fg:w="40"/><text x="69.2029%" y="655.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (8 samples, 0.12%)</title><rect x="69.4209%" y="629" width="0.1170%" height="15" fill="rgb(216,198,43)" fg:x="4747" fg:w="8"/><text x="69.6709%" y="639.50"></text></g><g><title>libruby.3.4.dylib`newobj_of (1 samples, 0.01%)</title><rect x="69.5379%" y="645" width="0.0146%" height="15" fill="rgb(234,20,35)" fg:x="4755" fg:w="1"/><text x="69.7879%" y="655.50"></text></g><g><title>libruby.3.4.dylib`newobj_cache_miss (1 samples, 0.01%)</title><rect x="69.5379%" y="629" width="0.0146%" height="15" fill="rgb(254,45,19)" fg:x="4755" fg:w="1"/><text x="69.7879%" y="639.50"></text></g><g><title>libruby.3.4.dylib`vm_lock_enter (1 samples, 0.01%)</title><rect x="69.5379%" y="613" width="0.0146%" height="15" fill="rgb(219,14,44)" fg:x="4755" fg:w="1"/><text x="69.7879%" y="623.50"></text></g><g><title>libruby.3.4.dylib`DYLD-STUB$$pthread_mutex_lock (1 samples, 0.01%)</title><rect x="69.5379%" y="597" width="0.0146%" height="15" fill="rgb(217,220,26)" fg:x="4755" fg:w="1"/><text x="69.7879%" y="607.50"></text></g><g><title>libruby.3.4.dylib`rb_hash_merge (44 samples, 0.64%)</title><rect x="68.9237%" y="677" width="0.6435%" height="15" fill="rgb(213,158,28)" fg:x="4713" fg:w="44"/><text x="69.1737%" y="687.50"></text></g><g><title>libruby.3.4.dylib`rb_hash_dup (44 samples, 0.64%)</title><rect x="68.9237%" y="661" width="0.6435%" height="15" fill="rgb(252,51,52)" fg:x="4713" fg:w="44"/><text x="69.1737%" y="671.50"></text></g><g><title>libruby.3.4.dylib`rb_gc_writebarrier_remember (1 samples, 0.01%)</title><rect x="69.5525%" y="645" width="0.0146%" height="15" fill="rgb(246,89,16)" fg:x="4756" fg:w="1"/><text x="69.8025%" y="655.50"></text></g><g><title>libruby.3.4.dylib`rb_block_given_p (4 samples, 0.06%)</title><rect x="69.5964%" y="661" width="0.0585%" height="15" fill="rgb(216,158,49)" fg:x="4759" fg:w="4"/><text x="69.8464%" y="671.50"></text></g><g><title>libruby.3.4.dylib`ar_equal (1 samples, 0.01%)</title><rect x="69.7719%" y="613" width="0.0146%" height="15" fill="rgb(236,107,19)" fg:x="4771" fg:w="1"/><text x="70.0219%" y="623.50"></text></g><g><title>libruby.3.4.dylib`rb_any_cmp (1 samples, 0.01%)</title><rect x="69.7719%" y="597" width="0.0146%" height="15" fill="rgb(228,185,30)" fg:x="4771" fg:w="1"/><text x="70.0219%" y="607.50"></text></g><g><title>libruby.3.4.dylib`rb_st_update (1 samples, 0.01%)</title><rect x="69.8011%" y="581" width="0.0146%" height="15" fill="rgb(246,134,8)" fg:x="4773" fg:w="1"/><text x="70.0511%" y="591.50"></text></g><g><title>libruby.3.4.dylib`rb_gc_writebarrier (1 samples, 0.01%)</title><rect x="69.8157%" y="565" width="0.0146%" height="15" fill="rgb(214,143,50)" fg:x="4774" fg:w="1"/><text x="70.0657%" y="575.50"></text></g><g><title>libruby.3.4.dylib`any_hash (1 samples, 0.01%)</title><rect x="69.9035%" y="549" width="0.0146%" height="15" fill="rgb(228,75,8)" fg:x="4780" fg:w="1"/><text x="70.1535%" y="559.50"></text></g><g><title>libruby.3.4.dylib`rb_hash_aset (11 samples, 0.16%)</title><rect x="69.7865%" y="597" width="0.1609%" height="15" fill="rgb(207,175,4)" fg:x="4772" fg:w="11"/><text x="70.0365%" y="607.50"></text></g><g><title>libruby.3.4.dylib`tbl_update (9 samples, 0.13%)</title><rect x="69.8157%" y="581" width="0.1316%" height="15" fill="rgb(205,108,24)" fg:x="4774" fg:w="9"/><text x="70.0657%" y="591.50"></text></g><g><title>libruby.3.4.dylib`rb_st_update (8 samples, 0.12%)</title><rect x="69.8304%" y="565" width="0.1170%" height="15" fill="rgb(244,120,49)" fg:x="4775" fg:w="8"/><text x="70.0804%" y="575.50"></text></g><g><title>libruby.3.4.dylib`tbl_update_modify (2 samples, 0.03%)</title><rect x="69.9181%" y="549" width="0.0292%" height="15" fill="rgb(223,47,38)" fg:x="4781" fg:w="2"/><text x="70.1681%" y="559.50"></text></g><g><title>libruby.3.4.dylib`rb_ensure (20 samples, 0.29%)</title><rect x="69.6695%" y="645" width="0.2925%" height="15" fill="rgb(229,179,11)" fg:x="4764" fg:w="20"/><text x="69.9195%" y="655.50"></text></g><g><title>libruby.3.4.dylib`hash_foreach_call (16 samples, 0.23%)</title><rect x="69.7280%" y="629" width="0.2340%" height="15" fill="rgb(231,122,1)" fg:x="4768" fg:w="16"/><text x="69.9780%" y="639.50"></text></g><g><title>libruby.3.4.dylib`rb_hash_update_i (12 samples, 0.18%)</title><rect x="69.7865%" y="613" width="0.1755%" height="15" fill="rgb(245,119,9)" fg:x="4772" fg:w="12"/><text x="70.0365%" y="623.50"></text></g><g><title>libruby.3.4.dylib`rb_obj_class (1 samples, 0.01%)</title><rect x="69.9474%" y="597" width="0.0146%" height="15" fill="rgb(241,163,25)" fg:x="4783" fg:w="1"/><text x="70.1974%" y="607.50"></text></g><g><title>libruby.3.4.dylib`rb_hash_update (28 samples, 0.41%)</title><rect x="69.5671%" y="677" width="0.4095%" height="15" fill="rgb(217,214,3)" fg:x="4757" fg:w="28"/><text x="69.8171%" y="687.50"></text></g><g><title>libruby.3.4.dylib`rb_hash_foreach (22 samples, 0.32%)</title><rect x="69.6549%" y="661" width="0.3217%" height="15" fill="rgb(240,86,28)" fg:x="4763" fg:w="22"/><text x="69.9049%" y="671.50"></text></g><g><title>libsystem_platform.dylib`_setjmp (1 samples, 0.01%)</title><rect x="69.9620%" y="645" width="0.0146%" height="15" fill="rgb(215,47,9)" fg:x="4784" fg:w="1"/><text x="70.2120%" y="655.50"></text></g><g><title>libruby.3.4.dylib`rb_enc_raw_set (1 samples, 0.01%)</title><rect x="70.0205%" y="661" width="0.0146%" height="15" fill="rgb(252,25,45)" fg:x="4788" fg:w="1"/><text x="70.2705%" y="671.50"></text></g><g><title>libruby.3.4.dylib`rb_int2str (6 samples, 0.09%)</title><rect x="69.9766%" y="677" width="0.0877%" height="15" fill="rgb(251,164,9)" fg:x="4785" fg:w="6"/><text x="70.2266%" y="687.50"></text></g><g><title>libruby.3.4.dylib`str_enc_new (2 samples, 0.03%)</title><rect x="70.0351%" y="661" width="0.0292%" height="15" fill="rgb(233,194,0)" fg:x="4789" fg:w="2"/><text x="70.2851%" y="671.50"></text></g><g><title>libruby.3.4.dylib`rb_keyword_given_p (1 samples, 0.01%)</title><rect x="70.0643%" y="677" width="0.0146%" height="15" fill="rgb(249,111,24)" fg:x="4791" fg:w="1"/><text x="70.3143%" y="687.50"></text></g><g><title>libruby.3.4.dylib`rb_utf8_str_new (3 samples, 0.04%)</title><rect x="70.0790%" y="677" width="0.0439%" height="15" fill="rgb(250,223,3)" fg:x="4792" fg:w="3"/><text x="70.3290%" y="687.50"></text></g><g><title>libruby.3.4.dylib`DYLD-STUB$$calloc (1 samples, 0.01%)</title><rect x="70.1521%" y="645" width="0.0146%" height="15" fill="rgb(236,178,37)" fg:x="4797" fg:w="1"/><text x="70.4021%" y="655.50"></text></g><g><title>libruby.3.4.dylib`newobj_of (3 samples, 0.04%)</title><rect x="70.1667%" y="645" width="0.0439%" height="15" fill="rgb(241,158,50)" fg:x="4798" fg:w="3"/><text x="70.4167%" y="655.50"></text></g><g><title>libruby.3.4.dylib`rb_get_alloc_func (1 samples, 0.01%)</title><rect x="70.2106%" y="645" width="0.0146%" height="15" fill="rgb(213,121,41)" fg:x="4801" fg:w="1"/><text x="70.4606%" y="655.50"></text></g><g><title>libruby.3.4.dylib`objspace_malloc_increase_body (1 samples, 0.01%)</title><rect x="70.2398%" y="629" width="0.0146%" height="15" fill="rgb(240,92,3)" fg:x="4803" fg:w="1"/><text x="70.4898%" y="639.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_calloc (2 samples, 0.03%)</title><rect x="70.2545%" y="629" width="0.0292%" height="15" fill="rgb(205,123,3)" fg:x="4804" fg:w="2"/><text x="70.5045%" y="639.50"></text></g><g><title>libruby.3.4.dylib`ruby_xcalloc (5 samples, 0.07%)</title><rect x="70.2252%" y="645" width="0.0731%" height="15" fill="rgb(205,97,47)" fg:x="4802" fg:w="5"/><text x="70.4752%" y="655.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_size (1 samples, 0.01%)</title><rect x="70.2837%" y="629" width="0.0146%" height="15" fill="rgb(247,152,14)" fg:x="4806" fg:w="1"/><text x="70.5337%" y="639.50"></text></g><g><title>libruby.3.4.dylib`typed_data_alloc (1 samples, 0.01%)</title><rect x="70.2983%" y="645" width="0.0146%" height="15" fill="rgb(248,195,53)" fg:x="4807" fg:w="1"/><text x="70.5483%" y="655.50"></text></g><g><title>libruby.3.4.dylib`rb_get_alloc_func (1 samples, 0.01%)</title><rect x="70.2983%" y="629" width="0.0146%" height="15" fill="rgb(226,201,16)" fg:x="4807" fg:w="1"/><text x="70.5483%" y="639.50"></text></g><g><title>libruby.3.4.dylib`rb_data_typed_object_zalloc (12 samples, 0.18%)</title><rect x="70.1521%" y="661" width="0.1755%" height="15" fill="rgb(205,98,0)" fg:x="4797" fg:w="12"/><text x="70.4021%" y="671.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_calloc (1 samples, 0.01%)</title><rect x="70.3130%" y="645" width="0.0146%" height="15" fill="rgb(214,191,48)" fg:x="4808" fg:w="1"/><text x="70.5630%" y="655.50"></text></g><g><title>libruby.3.4.dylib`rb_gc_writebarrier (1 samples, 0.01%)</title><rect x="70.3276%" y="661" width="0.0146%" height="15" fill="rgb(237,112,39)" fg:x="4809" fg:w="1"/><text x="70.5776%" y="671.50"></text></g><g><title>libruby.3.4.dylib`rb_wb_protected_newobj_of (1 samples, 0.01%)</title><rect x="70.3422%" y="661" width="0.0146%" height="15" fill="rgb(247,203,27)" fg:x="4810" fg:w="1"/><text x="70.5922%" y="671.50"></text></g><g><title>libruby.3.4.dylib`newobj_of (2 samples, 0.03%)</title><rect x="70.3568%" y="645" width="0.0292%" height="15" fill="rgb(235,124,28)" fg:x="4811" fg:w="2"/><text x="70.6068%" y="655.50"></text></g><g><title>libruby.3.4.dylib`rb_imemo_new (1 samples, 0.01%)</title><rect x="70.3861%" y="645" width="0.0146%" height="15" fill="rgb(208,207,46)" fg:x="4813" fg:w="1"/><text x="70.6361%" y="655.50"></text></g><g><title>libruby.3.4.dylib`rb_current_ec (1 samples, 0.01%)</title><rect x="70.3861%" y="629" width="0.0146%" height="15" fill="rgb(234,176,4)" fg:x="4813" fg:w="1"/><text x="70.6361%" y="639.50"></text></g><g><title>libsystem_malloc.dylib`malloc_size (1 samples, 0.01%)</title><rect x="70.4153%" y="613" width="0.0146%" height="15" fill="rgb(230,133,28)" fg:x="4815" fg:w="1"/><text x="70.6653%" y="623.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate_outlined (1 samples, 0.01%)</title><rect x="70.4300%" y="613" width="0.0146%" height="15" fill="rgb(211,137,40)" fg:x="4816" fg:w="1"/><text x="70.6800%" y="623.50"></text></g><g><title>libruby.3.4.dylib`rb_gc_impl_malloc (3 samples, 0.04%)</title><rect x="70.4153%" y="629" width="0.0439%" height="15" fill="rgb(254,35,13)" fg:x="4815" fg:w="3"/><text x="70.6653%" y="639.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_size (1 samples, 0.01%)</title><rect x="70.4446%" y="613" width="0.0146%" height="15" fill="rgb(225,49,51)" fg:x="4817" fg:w="1"/><text x="70.6946%" y="623.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (3 samples, 0.04%)</title><rect x="70.4592%" y="629" width="0.0439%" height="15" fill="rgb(251,10,15)" fg:x="4818" fg:w="3"/><text x="70.7092%" y="639.50"></text></g><g><title>libruby.3.4.dylib`vm_make_env_each (11 samples, 0.16%)</title><rect x="70.3568%" y="661" width="0.1609%" height="15" fill="rgb(228,207,15)" fg:x="4811" fg:w="11"/><text x="70.6068%" y="671.50"></text></g><g><title>libruby.3.4.dylib`ruby_xmalloc2 (8 samples, 0.12%)</title><rect x="70.4007%" y="645" width="0.1170%" height="15" fill="rgb(241,99,19)" fg:x="4814" fg:w="8"/><text x="70.6507%" y="655.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (1 samples, 0.01%)</title><rect x="70.5031%" y="629" width="0.0146%" height="15" fill="rgb(207,104,49)" fg:x="4821" fg:w="1"/><text x="70.7531%" y="639.50"></text></g><g><title>libruby.3.4.dylib`rb_vm_make_proc_lambda (28 samples, 0.41%)</title><rect x="70.1228%" y="677" width="0.4095%" height="15" fill="rgb(234,99,18)" fg:x="4795" fg:w="28"/><text x="70.3728%" y="687.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (1 samples, 0.01%)</title><rect x="70.5177%" y="661" width="0.0146%" height="15" fill="rgb(213,191,49)" fg:x="4822" fg:w="1"/><text x="70.7677%" y="671.50"></text></g><g><title>libruby.3.4.dylib`rb_yield (1 samples, 0.01%)</title><rect x="70.5323%" y="677" width="0.0146%" height="15" fill="rgb(210,226,19)" fg:x="4823" fg:w="1"/><text x="70.7823%" y="687.50"></text></g><g><title>libruby.3.4.dylib`str_enc_new (2 samples, 0.03%)</title><rect x="70.5469%" y="677" width="0.0292%" height="15" fill="rgb(229,97,18)" fg:x="4824" fg:w="2"/><text x="70.7969%" y="687.50"></text></g><g><title>libsystem_malloc.dylib`_free (3 samples, 0.04%)</title><rect x="70.5762%" y="677" width="0.0439%" height="15" fill="rgb(211,167,15)" fg:x="4826" fg:w="3"/><text x="70.8262%" y="687.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (1 samples, 0.01%)</title><rect x="70.6201%" y="677" width="0.0146%" height="15" fill="rgb(210,169,34)" fg:x="4829" fg:w="1"/><text x="70.8701%" y="687.50"></text></g><g><title>libruby.3.4.dylib`vm_call_cfunc_with_frame_ (1,524 samples, 22.29%)</title><rect x="48.3621%" y="693" width="22.2872%" height="15" fill="rgb(241,121,31)" fg:x="3307" fg:w="1524"/><text x="48.6121%" y="703.50">libruby.3.4.dylib`vm_call_cfunc_wit..</text></g><g><title>stringio.bundle`DYLD-STUB$$rb_block_given_p (1 samples, 0.01%)</title><rect x="70.6347%" y="677" width="0.0146%" height="15" fill="rgb(232,40,11)" fg:x="4830" fg:w="1"/><text x="70.8847%" y="687.50"></text></g><g><title>libruby.3.4.dylib`vm_call_iseq_setup_normal_0start (2 samples, 0.03%)</title><rect x="70.6493%" y="693" width="0.0292%" height="15" fill="rgb(205,86,26)" fg:x="4831" fg:w="2"/><text x="70.8993%" y="703.50"></text></g><g><title>libruby.3.4.dylib`vm_call_iseq_setup_normal_0start_0params_3locals (1 samples, 0.01%)</title><rect x="70.6786%" y="693" width="0.0146%" height="15" fill="rgb(231,126,28)" fg:x="4833" fg:w="1"/><text x="70.9286%" y="703.50"></text></g><g><title>libruby.3.4.dylib`vm_call_iseq_setup_normal_0start_1params_1locals (2 samples, 0.03%)</title><rect x="70.6932%" y="693" width="0.0292%" height="15" fill="rgb(219,221,18)" fg:x="4834" fg:w="2"/><text x="70.9432%" y="703.50"></text></g><g><title>libruby.3.4.dylib`vm_call_iseq_setup_normal_0start_2params_2locals (1 samples, 0.01%)</title><rect x="70.7224%" y="693" width="0.0146%" height="15" fill="rgb(211,40,0)" fg:x="4836" fg:w="1"/><text x="70.9724%" y="703.50"></text></g><g><title>libruby.3.4.dylib`vm_call_ivar (2 samples, 0.03%)</title><rect x="70.7371%" y="693" width="0.0292%" height="15" fill="rgb(239,85,43)" fg:x="4837" fg:w="2"/><text x="70.9871%" y="703.50"></text></g><g><title>libruby.3.4.dylib`vm_callee_setup_block_arg (1 samples, 0.01%)</title><rect x="70.7663%" y="693" width="0.0146%" height="15" fill="rgb(231,55,21)" fg:x="4839" fg:w="1"/><text x="71.0163%" y="703.50"></text></g><g><title>libruby.3.4.dylib`vm_invoke_iseq_block (3 samples, 0.04%)</title><rect x="70.7809%" y="693" width="0.0439%" height="15" fill="rgb(225,184,43)" fg:x="4840" fg:w="3"/><text x="71.0309%" y="703.50"></text></g><g><title>libruby.3.4.dylib`vm_callee_setup_block_arg (3 samples, 0.04%)</title><rect x="70.7809%" y="677" width="0.0439%" height="15" fill="rgb(251,158,41)" fg:x="4840" fg:w="3"/><text x="71.0309%" y="687.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (2 samples, 0.03%)</title><rect x="70.8248%" y="693" width="0.0292%" height="15" fill="rgb(234,159,37)" fg:x="4843" fg:w="2"/><text x="71.0748%" y="703.50"></text></g><g><title>libsystem_platform.dylib`_platform_memset_pattern16 (4 samples, 0.06%)</title><rect x="70.8541%" y="693" width="0.0585%" height="15" fill="rgb(216,204,22)" fg:x="4845" fg:w="4"/><text x="71.1041%" y="703.50"></text></g><g><title>libruby.3.4.dylib`vm_exec_core (1,793 samples, 26.22%)</title><rect x="44.7061%" y="709" width="26.2211%" height="15" fill="rgb(214,17,3)" fg:x="3057" fg:w="1793"/><text x="44.9561%" y="719.50">libruby.3.4.dylib`vm_exec_core</text></g><g><title>stringio.bundle`DYLD-STUB$$rb_class_new_instance_kw (1 samples, 0.01%)</title><rect x="70.9125%" y="693" width="0.0146%" height="15" fill="rgb(212,111,17)" fg:x="4849" fg:w="1"/><text x="71.1625%" y="703.50"></text></g><g><title>libruby.3.4.dylib`vm_invoke_iseq_block (1 samples, 0.01%)</title><rect x="70.9272%" y="709" width="0.0146%" height="15" fill="rgb(221,157,24)" fg:x="4850" fg:w="1"/><text x="71.1772%" y="719.50"></text></g><g><title>libruby.3.4.dylib`rb_vm_exec (1,818 samples, 26.59%)</title><rect x="44.3843%" y="725" width="26.5867%" height="15" fill="rgb(252,16,13)" fg:x="3035" fg:w="1818"/><text x="44.6343%" y="735.50">libruby.3.4.dylib`rb_vm_exec</text></g><g><title>libruby.3.4.dylib`vm_invoke_proc_block (2 samples, 0.03%)</title><rect x="70.9418%" y="709" width="0.0292%" height="15" fill="rgb(221,62,2)" fg:x="4851" fg:w="2"/><text x="71.1918%" y="719.50"></text></g><g><title>libruby.3.4.dylib`vm_callee_setup_block_arg (2 samples, 0.03%)</title><rect x="70.9710%" y="725" width="0.0292%" height="15" fill="rgb(247,87,22)" fg:x="4853" fg:w="2"/><text x="71.2210%" y="735.50"></text></g><g><title>libruby.3.4.dylib`vm_invoke_proc (1,828 samples, 26.73%)</title><rect x="44.2820%" y="741" width="26.7330%" height="15" fill="rgb(215,73,9)" fg:x="3028" fg:w="1828"/><text x="44.5320%" y="751.50">libruby.3.4.dylib`vm_invoke_proc</text></g><g><title>libsystem_platform.dylib`_setjmp (1 samples, 0.01%)</title><rect x="71.0003%" y="725" width="0.0146%" height="15" fill="rgb(207,175,33)" fg:x="4855" fg:w="1"/><text x="71.2503%" y="735.50"></text></g><g><title>itsi_server.bundle`&lt;alloc::vec::drain::Drain&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.01%)</title><rect x="71.0149%" y="709" width="0.0146%" height="15" fill="rgb(243,129,54)" fg:x="4856" fg:w="1"/><text x="71.2649%" y="719.50"></text></g><g><title>itsi_server.bundle`&lt;magnus::value::LazyId as core::ops::deref::Deref&gt;::deref (1 samples, 0.01%)</title><rect x="71.0295%" y="709" width="0.0146%" height="15" fill="rgb(227,119,45)" fg:x="4857" fg:w="1"/><text x="71.2795%" y="719.50"></text></g><g><title>itsi_server.bundle`DYLD-STUB$$memcpy (1 samples, 0.01%)</title><rect x="71.0442%" y="709" width="0.0146%" height="15" fill="rgb(205,109,36)" fg:x="4858" fg:w="1"/><text x="71.2942%" y="719.50"></text></g><g><title>libsystem_malloc.dylib`_szone_free (1 samples, 0.01%)</title><rect x="71.4244%" y="485" width="0.0146%" height="15" fill="rgb(205,6,39)" fg:x="4884" fg:w="1"/><text x="71.6744%" y="495.50"></text></g><g><title>libsystem_malloc.dylib`small_free_list_add_ptr (1 samples, 0.01%)</title><rect x="71.4536%" y="469" width="0.0146%" height="15" fill="rgb(221,32,16)" fg:x="4886" fg:w="1"/><text x="71.7036%" y="479.50"></text></g><g><title>itsi_server.bundle`&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (5 samples, 0.07%)</title><rect x="71.4098%" y="517" width="0.0731%" height="15" fill="rgb(228,144,50)" fg:x="4883" fg:w="5"/><text x="71.6598%" y="527.50"></text></g><g><title>itsi_server.bundle`bytes::bytes_mut::shared_v_drop (5 samples, 0.07%)</title><rect x="71.4098%" y="501" width="0.0731%" height="15" fill="rgb(229,201,53)" fg:x="4883" fg:w="5"/><text x="71.6598%" y="511.50"></text></g><g><title>libsystem_malloc.dylib`free_small (3 samples, 0.04%)</title><rect x="71.4390%" y="485" width="0.0439%" height="15" fill="rgb(249,153,27)" fg:x="4885" fg:w="3"/><text x="71.6890%" y="495.50"></text></g><g><title>libsystem_malloc.dylib`small_free_list_remove_ptr_no_clear (1 samples, 0.01%)</title><rect x="71.4683%" y="469" width="0.0146%" height="15" fill="rgb(227,106,25)" fg:x="4887" fg:w="1"/><text x="71.7183%" y="479.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (1 samples, 0.01%)</title><rect x="71.4829%" y="517" width="0.0146%" height="15" fill="rgb(230,65,29)" fg:x="4888" fg:w="1"/><text x="71.7329%" y="527.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_madvise_block (1 samples, 0.01%)</title><rect x="71.4975%" y="517" width="0.0146%" height="15" fill="rgb(221,57,46)" fg:x="4889" fg:w="1"/><text x="71.7475%" y="527.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_madvise_block_locked (1 samples, 0.01%)</title><rect x="71.4975%" y="501" width="0.0146%" height="15" fill="rgb(229,161,17)" fg:x="4889" fg:w="1"/><text x="71.7475%" y="511.50"></text></g><g><title>libsystem_kernel.dylib`madvise (1 samples, 0.01%)</title><rect x="71.4975%" y="485" width="0.0146%" height="15" fill="rgb(222,213,11)" fg:x="4889" fg:w="1"/><text x="71.7475%" y="495.50"></text></g><g><title>libsystem_platform.dylib`__bzero (1 samples, 0.01%)</title><rect x="71.5121%" y="517" width="0.0146%" height="15" fill="rgb(235,35,13)" fg:x="4890" fg:w="1"/><text x="71.7621%" y="527.50"></text></g><g><title>itsi_server.bundle`alloc::sync::Arc&lt;T,A&gt;::drop_slow (9 samples, 0.13%)</title><rect x="71.4098%" y="565" width="0.1316%" height="15" fill="rgb(233,158,34)" fg:x="4883" fg:w="9"/><text x="71.6598%" y="575.50"></text></g><g><title>itsi_server.bundle`core::ptr::drop_in_place&lt;http::request::Parts&gt; (9 samples, 0.13%)</title><rect x="71.4098%" y="549" width="0.1316%" height="15" fill="rgb(215,151,48)" fg:x="4883" fg:w="9"/><text x="71.6598%" y="559.50"></text></g><g><title>itsi_server.bundle`core::ptr::drop_in_place&lt;http::header::map::HeaderMap&gt; (9 samples, 0.13%)</title><rect x="71.4098%" y="533" width="0.1316%" height="15" fill="rgb(229,84,14)" fg:x="4883" fg:w="9"/><text x="71.6598%" y="543.50"></text></g><g><title>libsystem_platform.dylib`_platform_memset (1 samples, 0.01%)</title><rect x="71.5268%" y="517" width="0.0146%" height="15" fill="rgb(229,68,14)" fg:x="4891" fg:w="1"/><text x="71.7768%" y="527.50"></text></g><g><title>itsi_server.bundle`core::ptr::drop_in_place&lt;http::header::map::HeaderMap&gt; (1 samples, 0.01%)</title><rect x="71.5414%" y="549" width="0.0146%" height="15" fill="rgb(243,106,26)" fg:x="4892" fg:w="1"/><text x="71.7914%" y="559.50"></text></g><g><title>itsi_server.bundle`core::ptr::drop_in_place&lt;http::request::Parts&gt; (3 samples, 0.04%)</title><rect x="71.5560%" y="549" width="0.0439%" height="15" fill="rgb(206,45,38)" fg:x="4893" fg:w="3"/><text x="71.8060%" y="559.50"></text></g><g><title>itsi_server.bundle`core::ptr::drop_in_place&lt;http::header::map::HeaderMap&gt; (3 samples, 0.04%)</title><rect x="71.5560%" y="533" width="0.0439%" height="15" fill="rgb(226,6,15)" fg:x="4893" fg:w="3"/><text x="71.8060%" y="543.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (3 samples, 0.04%)</title><rect x="71.5560%" y="517" width="0.0439%" height="15" fill="rgb(232,22,54)" fg:x="4893" fg:w="3"/><text x="71.8060%" y="527.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (2 samples, 0.03%)</title><rect x="71.5706%" y="501" width="0.0292%" height="15" fill="rgb(229,222,32)" fg:x="4894" fg:w="2"/><text x="71.8206%" y="511.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_add_ptr (1 samples, 0.01%)</title><rect x="71.5853%" y="485" width="0.0146%" height="15" fill="rgb(228,62,29)" fg:x="4895" fg:w="1"/><text x="71.8353%" y="495.50"></text></g><g><title>itsi_server.bundle`core::ptr::drop_in_place&lt;itsi_server::request::itsi_request::ItsiRequest&gt; (5 samples, 0.07%)</title><rect x="71.5414%" y="565" width="0.0731%" height="15" fill="rgb(251,103,34)" fg:x="4892" fg:w="5"/><text x="71.7914%" y="575.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (1 samples, 0.01%)</title><rect x="71.5999%" y="549" width="0.0146%" height="15" fill="rgb(233,12,30)" fg:x="4896" fg:w="1"/><text x="71.8499%" y="559.50"></text></g><g><title>libsystem_malloc.dylib`_free (2 samples, 0.03%)</title><rect x="71.6145%" y="565" width="0.0292%" height="15" fill="rgb(238,52,0)" fg:x="4897" fg:w="2"/><text x="71.8645%" y="575.50"></text></g><g><title>itsi_server.bundle`magnus::typed_data::DataTypeFunctions::extern_free (18 samples, 0.26%)</title><rect x="71.4098%" y="581" width="0.2632%" height="15" fill="rgb(223,98,5)" fg:x="4883" fg:w="18"/><text x="71.6598%" y="591.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (2 samples, 0.03%)</title><rect x="71.6438%" y="565" width="0.0292%" height="15" fill="rgb(228,75,37)" fg:x="4899" fg:w="2"/><text x="71.8938%" y="575.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (1 samples, 0.01%)</title><rect x="71.6584%" y="549" width="0.0146%" height="15" fill="rgb(205,115,49)" fg:x="4900" fg:w="1"/><text x="71.9084%" y="559.50"></text></g><g><title>libsystem_malloc.dylib`get_tiny_previous_free_msize (2 samples, 0.03%)</title><rect x="71.6876%" y="549" width="0.0292%" height="15" fill="rgb(250,154,43)" fg:x="4902" fg:w="2"/><text x="71.9376%" y="559.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (4 samples, 0.06%)</title><rect x="71.6876%" y="565" width="0.0585%" height="15" fill="rgb(226,43,29)" fg:x="4902" fg:w="4"/><text x="71.9376%" y="575.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (2 samples, 0.03%)</title><rect x="71.7169%" y="549" width="0.0292%" height="15" fill="rgb(249,228,39)" fg:x="4904" fg:w="2"/><text x="71.9669%" y="559.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_add_ptr (1 samples, 0.01%)</title><rect x="71.7315%" y="533" width="0.0146%" height="15" fill="rgb(216,79,43)" fg:x="4905" fg:w="1"/><text x="71.9815%" y="543.50"></text></g><g><title>libruby.3.4.dylib`ruby_xfree (6 samples, 0.09%)</title><rect x="71.6730%" y="581" width="0.0877%" height="15" fill="rgb(228,95,12)" fg:x="4901" fg:w="6"/><text x="71.9230%" y="591.50"></text></g><g><title>libsystem_platform.dylib`__bzero (1 samples, 0.01%)</title><rect x="71.7461%" y="565" width="0.0146%" height="15" fill="rgb(249,221,15)" fg:x="4906" fg:w="1"/><text x="71.9961%" y="575.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (1 samples, 0.01%)</title><rect x="71.7607%" y="581" width="0.0146%" height="15" fill="rgb(233,34,13)" fg:x="4907" fg:w="1"/><text x="72.0107%" y="591.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (2 samples, 0.03%)</title><rect x="71.7754%" y="581" width="0.0292%" height="15" fill="rgb(214,103,39)" fg:x="4908" fg:w="2"/><text x="72.0254%" y="591.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (2 samples, 0.03%)</title><rect x="71.7754%" y="565" width="0.0292%" height="15" fill="rgb(251,126,39)" fg:x="4908" fg:w="2"/><text x="72.0254%" y="575.50"></text></g><g><title>libsystem_malloc.dylib`malloc_size (1 samples, 0.01%)</title><rect x="71.8046%" y="581" width="0.0146%" height="15" fill="rgb(214,216,36)" fg:x="4910" fg:w="1"/><text x="72.0546%" y="591.50"></text></g><g><title>libruby.3.4.dylib`rb_gc_obj_free (30 samples, 0.44%)</title><rect x="71.3951%" y="597" width="0.4387%" height="15" fill="rgb(220,221,8)" fg:x="4882" fg:w="30"/><text x="71.6451%" y="607.50"></text></g><g><title>libsystem_platform.dylib`_platform_memset (1 samples, 0.01%)</title><rect x="71.8192%" y="581" width="0.0146%" height="15" fill="rgb(240,216,3)" fg:x="4911" fg:w="1"/><text x="72.0692%" y="591.50"></text></g><g><title>libruby.3.4.dylib`rb_gc_obj_free_vm_weak_references (1 samples, 0.01%)</title><rect x="71.8339%" y="597" width="0.0146%" height="15" fill="rgb(232,218,17)" fg:x="4912" fg:w="1"/><text x="72.0839%" y="607.50"></text></g><g><title>libruby.3.4.dylib`rb_str_free (1 samples, 0.01%)</title><rect x="71.8485%" y="597" width="0.0146%" height="15" fill="rgb(229,163,45)" fg:x="4913" fg:w="1"/><text x="72.0985%" y="607.50"></text></g><g><title>libruby.3.4.dylib`gc_sweep_plane (41 samples, 0.60%)</title><rect x="71.2782%" y="613" width="0.5996%" height="15" fill="rgb(231,110,42)" fg:x="4874" fg:w="41"/><text x="71.5282%" y="623.50"></text></g><g><title>libsystem_malloc.dylib`_free (1 samples, 0.01%)</title><rect x="71.8631%" y="597" width="0.0146%" height="15" fill="rgb(208,170,48)" fg:x="4914" fg:w="1"/><text x="72.1131%" y="607.50"></text></g><g><title>libruby.3.4.dylib`gc_continue (42 samples, 0.61%)</title><rect x="71.2782%" y="645" width="0.6142%" height="15" fill="rgb(239,116,25)" fg:x="4874" fg:w="42"/><text x="71.5282%" y="655.50"></text></g><g><title>libruby.3.4.dylib`gc_sweep_step (42 samples, 0.61%)</title><rect x="71.2782%" y="629" width="0.6142%" height="15" fill="rgb(219,200,50)" fg:x="4874" fg:w="42"/><text x="71.5282%" y="639.50"></text></g><g><title>libruby.3.4.dylib`rb_gc_obj_free_vm_weak_references (1 samples, 0.01%)</title><rect x="71.8777%" y="613" width="0.0146%" height="15" fill="rgb(245,200,0)" fg:x="4915" fg:w="1"/><text x="72.1277%" y="623.50"></text></g><g><title>libruby.3.4.dylib`each_location (1 samples, 0.01%)</title><rect x="71.9070%" y="565" width="0.0146%" height="15" fill="rgb(245,119,33)" fg:x="4917" fg:w="1"/><text x="72.1570%" y="575.50"></text></g><g><title>libruby.3.4.dylib`gc_mark_maybe_internal (1 samples, 0.01%)</title><rect x="71.9070%" y="549" width="0.0146%" height="15" fill="rgb(231,125,12)" fg:x="4917" fg:w="1"/><text x="72.1570%" y="559.50"></text></g><g><title>libsystem_c.dylib`bsearch (1 samples, 0.01%)</title><rect x="71.9070%" y="533" width="0.0146%" height="15" fill="rgb(216,96,41)" fg:x="4917" fg:w="1"/><text x="72.1570%" y="543.50"></text></g><g><title>libruby.3.4.dylib`gc_marks_rest (2 samples, 0.03%)</title><rect x="71.9070%" y="629" width="0.0292%" height="15" fill="rgb(248,43,45)" fg:x="4917" fg:w="2"/><text x="72.1570%" y="639.50"></text></g><g><title>libruby.3.4.dylib`cont_mark (2 samples, 0.03%)</title><rect x="71.9070%" y="613" width="0.0292%" height="15" fill="rgb(217,222,7)" fg:x="4917" fg:w="2"/><text x="72.1570%" y="623.50"></text></g><g><title>libruby.3.4.dylib`rb_execution_context_mark (2 samples, 0.03%)</title><rect x="71.9070%" y="597" width="0.0292%" height="15" fill="rgb(233,28,6)" fg:x="4917" fg:w="2"/><text x="72.1570%" y="607.50"></text></g><g><title>libruby.3.4.dylib`rb_gc_mark_machine_context (2 samples, 0.03%)</title><rect x="71.9070%" y="581" width="0.0292%" height="15" fill="rgb(231,218,15)" fg:x="4917" fg:w="2"/><text x="72.1570%" y="591.50"></text></g><g><title>libruby.3.4.dylib`gc_mark_maybe_internal (1 samples, 0.01%)</title><rect x="71.9216%" y="565" width="0.0146%" height="15" fill="rgb(226,171,48)" fg:x="4918" fg:w="1"/><text x="72.1716%" y="575.50"></text></g><g><title>libsystem_malloc.dylib`_szone_free (1 samples, 0.01%)</title><rect x="72.2141%" y="469" width="0.0146%" height="15" fill="rgb(235,201,9)" fg:x="4938" fg:w="1"/><text x="72.4641%" y="479.50"></text></g><g><title>itsi_server.bundle`&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.03%)</title><rect x="72.2141%" y="501" width="0.0292%" height="15" fill="rgb(217,80,15)" fg:x="4938" fg:w="2"/><text x="72.4641%" y="511.50"></text></g><g><title>itsi_server.bundle`bytes::bytes_mut::shared_v_drop (2 samples, 0.03%)</title><rect x="72.2141%" y="485" width="0.0292%" height="15" fill="rgb(219,152,8)" fg:x="4938" fg:w="2"/><text x="72.4641%" y="495.50"></text></g><g><title>libsystem_malloc.dylib`small_free_list_remove_ptr (1 samples, 0.01%)</title><rect x="72.2287%" y="469" width="0.0146%" height="15" fill="rgb(243,107,38)" fg:x="4939" fg:w="1"/><text x="72.4787%" y="479.50"></text></g><g><title>itsi_server.bundle`magnus::typed_data::DataTypeFunctions::extern_free (3 samples, 0.04%)</title><rect x="72.2141%" y="565" width="0.0439%" height="15" fill="rgb(231,17,5)" fg:x="4938" fg:w="3"/><text x="72.4641%" y="575.50"></text></g><g><title>itsi_server.bundle`alloc::sync::Arc&lt;T,A&gt;::drop_slow (3 samples, 0.04%)</title><rect x="72.2141%" y="549" width="0.0439%" height="15" fill="rgb(209,25,54)" fg:x="4938" fg:w="3"/><text x="72.4641%" y="559.50"></text></g><g><title>itsi_server.bundle`core::ptr::drop_in_place&lt;http::request::Parts&gt; (3 samples, 0.04%)</title><rect x="72.2141%" y="533" width="0.0439%" height="15" fill="rgb(219,0,2)" fg:x="4938" fg:w="3"/><text x="72.4641%" y="543.50"></text></g><g><title>itsi_server.bundle`core::ptr::drop_in_place&lt;http::header::map::HeaderMap&gt; (3 samples, 0.04%)</title><rect x="72.2141%" y="517" width="0.0439%" height="15" fill="rgb(246,9,5)" fg:x="4938" fg:w="3"/><text x="72.4641%" y="527.50"></text></g><g><title>libsystem_malloc.dylib`_free (1 samples, 0.01%)</title><rect x="72.2433%" y="501" width="0.0146%" height="15" fill="rgb(226,159,4)" fg:x="4940" fg:w="1"/><text x="72.4933%" y="511.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (2 samples, 0.03%)</title><rect x="72.2580%" y="533" width="0.0292%" height="15" fill="rgb(219,175,34)" fg:x="4941" fg:w="2"/><text x="72.5080%" y="543.50"></text></g><g><title>libsystem_malloc.dylib`malloc_size (1 samples, 0.01%)</title><rect x="72.2872%" y="533" width="0.0146%" height="15" fill="rgb(236,10,46)" fg:x="4943" fg:w="1"/><text x="72.5372%" y="543.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_size (3 samples, 0.04%)</title><rect x="72.3018%" y="533" width="0.0439%" height="15" fill="rgb(240,211,16)" fg:x="4944" fg:w="3"/><text x="72.5518%" y="543.50"></text></g><g><title>libruby.3.4.dylib`rb_hash_free (8 samples, 0.12%)</title><rect x="72.2580%" y="565" width="0.1170%" height="15" fill="rgb(205,3,43)" fg:x="4941" fg:w="8"/><text x="72.5080%" y="575.50"></text></g><g><title>libruby.3.4.dylib`ruby_xfree (8 samples, 0.12%)</title><rect x="72.2580%" y="549" width="0.1170%" height="15" fill="rgb(245,7,22)" fg:x="4941" fg:w="8"/><text x="72.5080%" y="559.50"></text></g><g><title>libsystem_platform.dylib`_platform_memset (2 samples, 0.03%)</title><rect x="72.3457%" y="533" width="0.0292%" height="15" fill="rgb(239,132,32)" fg:x="4947" fg:w="2"/><text x="72.5957%" y="543.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_add_ptr (3 samples, 0.04%)</title><rect x="72.4481%" y="517" width="0.0439%" height="15" fill="rgb(228,202,34)" fg:x="4954" fg:w="3"/><text x="72.6981%" y="527.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (8 samples, 0.12%)</title><rect x="72.3896%" y="549" width="0.1170%" height="15" fill="rgb(254,200,22)" fg:x="4950" fg:w="8"/><text x="72.6396%" y="559.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (7 samples, 0.10%)</title><rect x="72.4042%" y="533" width="0.1024%" height="15" fill="rgb(219,10,39)" fg:x="4951" fg:w="7"/><text x="72.6542%" y="543.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_reattach_region (1 samples, 0.01%)</title><rect x="72.4920%" y="517" width="0.0146%" height="15" fill="rgb(226,210,39)" fg:x="4957" fg:w="1"/><text x="72.7420%" y="527.50"></text></g><g><title>libruby.3.4.dylib`rb_gc_obj_free (26 samples, 0.38%)</title><rect x="72.1556%" y="581" width="0.3802%" height="15" fill="rgb(208,219,16)" fg:x="4934" fg:w="26"/><text x="72.4056%" y="591.50"></text></g><g><title>libruby.3.4.dylib`ruby_xfree (11 samples, 0.16%)</title><rect x="72.3750%" y="565" width="0.1609%" height="15" fill="rgb(216,158,51)" fg:x="4949" fg:w="11"/><text x="72.6250%" y="575.50"></text></g><g><title>libsystem_platform.dylib`_platform_memset (2 samples, 0.03%)</title><rect x="72.5066%" y="549" width="0.0292%" height="15" fill="rgb(233,14,44)" fg:x="4958" fg:w="2"/><text x="72.7566%" y="559.50"></text></g><g><title>libruby.3.4.dylib`rb_gc_obj_free_vm_weak_references (3 samples, 0.04%)</title><rect x="72.5358%" y="581" width="0.0439%" height="15" fill="rgb(237,97,39)" fg:x="4960" fg:w="3"/><text x="72.7858%" y="591.50"></text></g><g><title>libsystem_malloc.dylib`_free (1 samples, 0.01%)</title><rect x="72.5797%" y="581" width="0.0146%" height="15" fill="rgb(218,198,43)" fg:x="4963" fg:w="1"/><text x="72.8297%" y="591.50"></text></g><g><title>libruby.3.4.dylib`gc_sweep (46 samples, 0.67%)</title><rect x="71.9362%" y="629" width="0.6727%" height="15" fill="rgb(231,104,20)" fg:x="4919" fg:w="46"/><text x="72.1862%" y="639.50"></text></g><g><title>libruby.3.4.dylib`gc_sweep_step (46 samples, 0.67%)</title><rect x="71.9362%" y="613" width="0.6727%" height="15" fill="rgb(254,36,13)" fg:x="4919" fg:w="46"/><text x="72.1862%" y="623.50"></text></g><g><title>libruby.3.4.dylib`gc_sweep_plane (46 samples, 0.67%)</title><rect x="71.9362%" y="597" width="0.6727%" height="15" fill="rgb(248,14,50)" fg:x="4919" fg:w="46"/><text x="72.1862%" y="607.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (1 samples, 0.01%)</title><rect x="72.5943%" y="581" width="0.0146%" height="15" fill="rgb(217,107,29)" fg:x="4964" fg:w="1"/><text x="72.8443%" y="591.50"></text></g><g><title>libruby.3.4.dylib`rb_gc_mark_movable (1 samples, 0.01%)</title><rect x="72.6089%" y="629" width="0.0146%" height="15" fill="rgb(251,169,33)" fg:x="4965" fg:w="1"/><text x="72.8589%" y="639.50"></text></g><g><title>libruby.3.4.dylib`newobj_of (94 samples, 1.37%)</title><rect x="71.2635%" y="677" width="1.3747%" height="15" fill="rgb(217,108,32)" fg:x="4873" fg:w="94"/><text x="71.5135%" y="687.50"></text></g><g><title>libruby.3.4.dylib`newobj_cache_miss (93 samples, 1.36%)</title><rect x="71.2782%" y="661" width="1.3600%" height="15" fill="rgb(219,66,42)" fg:x="4874" fg:w="93"/><text x="71.5282%" y="671.50"></text></g><g><title>libruby.3.4.dylib`gc_start (51 samples, 0.75%)</title><rect x="71.8924%" y="645" width="0.7458%" height="15" fill="rgb(206,180,7)" fg:x="4916" fg:w="51"/><text x="72.1424%" y="655.50"></text></g><g><title>libsystem_kernel.dylib`sigprocmask (1 samples, 0.01%)</title><rect x="72.6236%" y="629" width="0.0146%" height="15" fill="rgb(208,226,31)" fg:x="4966" fg:w="1"/><text x="72.8736%" y="639.50"></text></g><g><title>libruby.3.4.dylib`typed_data_alloc (1 samples, 0.01%)</title><rect x="72.6382%" y="677" width="0.0146%" height="15" fill="rgb(218,26,49)" fg:x="4967" fg:w="1"/><text x="72.8882%" y="687.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (1 samples, 0.01%)</title><rect x="72.6528%" y="661" width="0.0146%" height="15" fill="rgb(233,197,48)" fg:x="4968" fg:w="1"/><text x="72.9028%" y="671.50"></text></g><g><title>libsystem_kernel.dylib`__ulock_wake (1 samples, 0.01%)</title><rect x="72.6967%" y="645" width="0.0146%" height="15" fill="rgb(252,181,51)" fg:x="4971" fg:w="1"/><text x="72.9467%" y="655.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (20 samples, 0.29%)</title><rect x="72.6528%" y="677" width="0.2925%" height="15" fill="rgb(253,90,19)" fg:x="4968" fg:w="20"/><text x="72.9028%" y="687.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (19 samples, 0.28%)</title><rect x="72.6674%" y="661" width="0.2779%" height="15" fill="rgb(215,171,30)" fg:x="4969" fg:w="19"/><text x="72.9174%" y="671.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (16 samples, 0.23%)</title><rect x="72.7113%" y="645" width="0.2340%" height="15" fill="rgb(214,222,9)" fg:x="4972" fg:w="16"/><text x="72.9613%" y="655.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_add_ptr (3 samples, 0.04%)</title><rect x="72.9014%" y="629" width="0.0439%" height="15" fill="rgb(223,3,22)" fg:x="4985" fg:w="3"/><text x="73.1514%" y="639.50"></text></g><g><title>itsi_server.bundle`&lt;(T0,T1) as magnus::into_value::ArgList&gt;::into_arg_list_with (120 samples, 1.75%)</title><rect x="71.2050%" y="693" width="1.7549%" height="15" fill="rgb(225,196,46)" fg:x="4869" fg:w="120"/><text x="71.4550%" y="703.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (1 samples, 0.01%)</title><rect x="72.9453%" y="677" width="0.0146%" height="15" fill="rgb(209,110,37)" fg:x="4988" fg:w="1"/><text x="73.1953%" y="687.50"></text></g><g><title>libsystem_kernel.dylib`__psynch_cvwait (3 samples, 0.04%)</title><rect x="72.9892%" y="677" width="0.0439%" height="15" fill="rgb(249,89,12)" fg:x="4991" fg:w="3"/><text x="73.2392%" y="687.50"></text></g><g><title>libsystem_kernel.dylib`swtch_pri (8 samples, 0.12%)</title><rect x="73.0331%" y="677" width="0.1170%" height="15" fill="rgb(226,27,33)" fg:x="4994" fg:w="8"/><text x="73.2831%" y="687.50"></text></g><g><title>itsi_server.bundle`parking_lot::raw_mutex::RawMutex::lock_slow (14 samples, 0.20%)</title><rect x="72.9599%" y="693" width="0.2047%" height="15" fill="rgb(213,82,22)" fg:x="4989" fg:w="14"/><text x="73.2099%" y="703.50"></text></g><g><title>libsystem_pthread.dylib`cthread_yield (1 samples, 0.01%)</title><rect x="73.1500%" y="677" width="0.0146%" height="15" fill="rgb(248,140,0)" fg:x="5002" fg:w="1"/><text x="73.4000%" y="687.50"></text></g><g><title>itsi_server.bundle`DYLD-STUB$$clock_gettime (1 samples, 0.01%)</title><rect x="73.1647%" y="677" width="0.0146%" height="15" fill="rgb(228,106,3)" fg:x="5003" fg:w="1"/><text x="73.4147%" y="687.50"></text></g><g><title>itsi_server.bundle`std::sys::pal::unix::time::Timespec::now (1 samples, 0.01%)</title><rect x="73.1793%" y="677" width="0.0146%" height="15" fill="rgb(209,23,37)" fg:x="5004" fg:w="1"/><text x="73.4293%" y="687.50"></text></g><g><title>libsystem_c.dylib`clock_gettime (1 samples, 0.01%)</title><rect x="73.1793%" y="661" width="0.0146%" height="15" fill="rgb(241,93,50)" fg:x="5004" fg:w="1"/><text x="73.4293%" y="671.50"></text></g><g><title>libsystem_kernel.dylib`mach_absolute_time (1 samples, 0.01%)</title><rect x="73.1793%" y="645" width="0.0146%" height="15" fill="rgb(253,46,43)" fg:x="5004" fg:w="1"/><text x="73.4293%" y="655.50"></text></g><g><title>itsi_server.bundle`parking_lot::raw_mutex::RawMutex::unlock_slow (17 samples, 0.25%)</title><rect x="73.1647%" y="693" width="0.2486%" height="15" fill="rgb(226,206,43)" fg:x="5003" fg:w="17"/><text x="73.4147%" y="703.50"></text></g><g><title>libsystem_kernel.dylib`__psynch_cvsignal (15 samples, 0.22%)</title><rect x="73.1939%" y="677" width="0.2194%" height="15" fill="rgb(217,54,7)" fg:x="5005" fg:w="15"/><text x="73.4439%" y="687.50"></text></g><g><title>itsi_server.bundle`std::thread::yield_now (1 samples, 0.01%)</title><rect x="73.4133%" y="693" width="0.0146%" height="15" fill="rgb(223,5,52)" fg:x="5020" fg:w="1"/><text x="73.6633%" y="703.50"></text></g><g><title>libruby.3.4.dylib`newobj_of (1 samples, 0.01%)</title><rect x="73.4279%" y="693" width="0.0146%" height="15" fill="rgb(206,52,46)" fg:x="5021" fg:w="1"/><text x="73.6779%" y="703.50"></text></g><g><title>libruby.3.4.dylib`rb_data_typed_object_wrap (1 samples, 0.01%)</title><rect x="73.4425%" y="693" width="0.0146%" height="15" fill="rgb(253,136,11)" fg:x="5022" fg:w="1"/><text x="73.6925%" y="703.50"></text></g><g><title>libruby.3.4.dylib`rb_funcallv_kw (2 samples, 0.03%)</title><rect x="73.4572%" y="693" width="0.0292%" height="15" fill="rgb(208,106,33)" fg:x="5023" fg:w="2"/><text x="73.7072%" y="703.50"></text></g><g><title>itsi_server.bundle`magnus::error::protect::call (6 samples, 0.09%)</title><rect x="73.5303%" y="677" width="0.0877%" height="15" fill="rgb(206,54,4)" fg:x="5028" fg:w="6"/><text x="73.7803%" y="687.50"></text></g><g><title>libruby.3.4.dylib`rb_fiber_scheduler_fiber (1 samples, 0.01%)</title><rect x="73.8959%" y="629" width="0.0146%" height="15" fill="rgb(213,3,15)" fg:x="5053" fg:w="1"/><text x="74.1459%" y="639.50"></text></g><g><title>libruby.3.4.dylib`rb_vm_opt_getconstant_path (3 samples, 0.04%)</title><rect x="73.9105%" y="629" width="0.0439%" height="15" fill="rgb(252,211,39)" fg:x="5054" fg:w="3"/><text x="74.1605%" y="639.50"></text></g><g><title>libruby.3.4.dylib`call_cfunc_m1 (1 samples, 0.01%)</title><rect x="74.0714%" y="597" width="0.0146%" height="15" fill="rgb(223,6,36)" fg:x="5065" fg:w="1"/><text x="74.3214%" y="607.50"></text></g><g><title>itsi_scheduler.bundle`&lt;magnus::value::LazyId as core::ops::deref::Deref&gt;::deref (1 samples, 0.01%)</title><rect x="74.2322%" y="565" width="0.0146%" height="15" fill="rgb(252,169,45)" fg:x="5076" fg:w="1"/><text x="74.4822%" y="575.50"></text></g><g><title>itsi_scheduler.bundle`DYLD-STUB$$rb_protect (2 samples, 0.03%)</title><rect x="74.2469%" y="565" width="0.0292%" height="15" fill="rgb(212,48,26)" fg:x="5077" fg:w="2"/><text x="74.4969%" y="575.50"></text></g><g><title>itsi_scheduler.bundle`hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.01%)</title><rect x="74.2761%" y="565" width="0.0146%" height="15" fill="rgb(251,102,48)" fg:x="5079" fg:w="1"/><text x="74.5261%" y="575.50"></text></g><g><title>itsi_scheduler.bundle`itsi_rb_helpers::heap_fiber::HeapFiber::inner (1 samples, 0.01%)</title><rect x="74.2907%" y="565" width="0.0146%" height="15" fill="rgb(243,208,16)" fg:x="5080" fg:w="1"/><text x="74.5407%" y="575.50"></text></g><g><title>itsi_scheduler.bundle`&lt;() as magnus::scan_args::private::ScanArgsRequired&gt;::from_slice (2 samples, 0.03%)</title><rect x="74.3785%" y="549" width="0.0292%" height="15" fill="rgb(219,96,24)" fg:x="5086" fg:w="2"/><text x="74.6285%" y="559.50"></text></g><g><title>libruby.3.4.dylib`rb_gc_impl_malloc (3 samples, 0.04%)</title><rect x="74.4223%" y="517" width="0.0439%" height="15" fill="rgb(219,33,29)" fg:x="5089" fg:w="3"/><text x="74.6723%" y="527.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_size (3 samples, 0.04%)</title><rect x="74.4223%" y="501" width="0.0439%" height="15" fill="rgb(223,176,5)" fg:x="5089" fg:w="3"/><text x="74.6723%" y="511.50"></text></g><g><title>libsystem_malloc.dylib`malloc_size (4 samples, 0.06%)</title><rect x="74.4662%" y="517" width="0.0585%" height="15" fill="rgb(228,140,14)" fg:x="5092" fg:w="4"/><text x="74.7162%" y="527.50"></text></g><g><title>itsi_scheduler.bundle`&lt;itsi_rb_helpers::heap_fiber::HeapFiber as core::convert::From&lt;magnus::fiber::Fiber&gt;&gt;::from (17 samples, 0.25%)</title><rect x="74.4077%" y="549" width="0.2486%" height="15" fill="rgb(217,179,31)" fg:x="5088" fg:w="17"/><text x="74.6577%" y="559.50"></text></g><g><title>libruby.3.4.dylib`rb_gc_register_address (16 samples, 0.23%)</title><rect x="74.4223%" y="533" width="0.2340%" height="15" fill="rgb(230,9,30)" fg:x="5089" fg:w="16"/><text x="74.6723%" y="543.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (9 samples, 0.13%)</title><rect x="74.5247%" y="517" width="0.1316%" height="15" fill="rgb(230,136,20)" fg:x="5096" fg:w="9"/><text x="74.7747%" y="527.50"></text></g><g><title>itsi_scheduler.bundle`&lt;magnus::block::Proc as magnus::scan_args::private::ScanArgsBlock&gt;::from_opt (2 samples, 0.03%)</title><rect x="74.6563%" y="549" width="0.0292%" height="15" fill="rgb(215,210,22)" fg:x="5105" fg:w="2"/><text x="74.9063%" y="559.50"></text></g><g><title>itsi_scheduler.bundle`&lt;magnus::block::Proc as magnus::try_convert::TryConvert&gt;::try_convert (1 samples, 0.01%)</title><rect x="74.6856%" y="549" width="0.0146%" height="15" fill="rgb(218,43,5)" fg:x="5107" fg:w="1"/><text x="74.9356%" y="559.50"></text></g><g><title>itsi_scheduler.bundle`DYLD-STUB$$free (1 samples, 0.01%)</title><rect x="74.7002%" y="549" width="0.0146%" height="15" fill="rgb(216,11,5)" fg:x="5108" fg:w="1"/><text x="74.9502%" y="559.50"></text></g><g><title>itsi_scheduler.bundle`DYLD-STUB$$malloc (1 samples, 0.01%)</title><rect x="74.7148%" y="549" width="0.0146%" height="15" fill="rgb(209,82,29)" fg:x="5109" fg:w="1"/><text x="74.9648%" y="559.50"></text></g><g><title>itsi_scheduler.bundle`DYLD-STUB$$rb_funcall_with_block_kw (2 samples, 0.03%)</title><rect x="74.7295%" y="549" width="0.0292%" height="15" fill="rgb(244,115,12)" fg:x="5110" fg:w="2"/><text x="74.9795%" y="559.50"></text></g><g><title>itsi_scheduler.bundle`DYLD-STUB$$rb_gc_register_address (1 samples, 0.01%)</title><rect x="74.7587%" y="549" width="0.0146%" height="15" fill="rgb(222,82,18)" fg:x="5112" fg:w="1"/><text x="75.0087%" y="559.50"></text></g><g><title>itsi_scheduler.bundle`DYLD-STUB$$rb_gc_unregister_address (1 samples, 0.01%)</title><rect x="74.7733%" y="549" width="0.0146%" height="15" fill="rgb(249,227,8)" fg:x="5113" fg:w="1"/><text x="75.0233%" y="559.50"></text></g><g><title>itsi_scheduler.bundle`__rdl_alloc (1 samples, 0.01%)</title><rect x="74.7879%" y="549" width="0.0146%" height="15" fill="rgb(253,141,45)" fg:x="5114" fg:w="1"/><text x="75.0379%" y="559.50"></text></g><g><title>itsi_scheduler.bundle`__rdl_dealloc (2 samples, 0.03%)</title><rect x="74.8026%" y="549" width="0.0292%" height="15" fill="rgb(234,184,4)" fg:x="5115" fg:w="2"/><text x="75.0526%" y="559.50"></text></g><g><title>itsi_scheduler.bundle`__rust_dealloc (2 samples, 0.03%)</title><rect x="74.8318%" y="549" width="0.0292%" height="15" fill="rgb(218,194,23)" fg:x="5117" fg:w="2"/><text x="75.0818%" y="559.50"></text></g><g><title>itsi_scheduler.bundle`core::hash::BuildHasher::hash_one (1 samples, 0.01%)</title><rect x="74.8611%" y="549" width="0.0146%" height="15" fill="rgb(235,66,41)" fg:x="5119" fg:w="1"/><text x="75.1111%" y="559.50"></text></g><g><title>itsi_scheduler.bundle`&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::write (2 samples, 0.03%)</title><rect x="74.8903%" y="533" width="0.0292%" height="15" fill="rgb(245,217,1)" fg:x="5121" fg:w="2"/><text x="75.1403%" y="543.50"></text></g><g><title>itsi_scheduler.bundle`hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (6 samples, 0.09%)</title><rect x="74.8757%" y="549" width="0.0877%" height="15" fill="rgb(229,91,1)" fg:x="5120" fg:w="6"/><text x="75.1257%" y="559.50"></text></g><g><title>itsi_scheduler.bundle`core::hash::BuildHasher::hash_one (3 samples, 0.04%)</title><rect x="74.9196%" y="533" width="0.0439%" height="15" fill="rgb(207,101,30)" fg:x="5123" fg:w="3"/><text x="75.1696%" y="543.50"></text></g><g><title>libruby.3.4.dylib`rb_gc_unregister_address (2 samples, 0.03%)</title><rect x="74.9634%" y="533" width="0.0292%" height="15" fill="rgb(223,82,49)" fg:x="5126" fg:w="2"/><text x="75.2134%" y="543.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (2 samples, 0.03%)</title><rect x="74.9634%" y="517" width="0.0292%" height="15" fill="rgb(218,167,17)" fg:x="5126" fg:w="2"/><text x="75.2134%" y="527.50"></text></g><g><title>libsystem_malloc.dylib`_free (1 samples, 0.01%)</title><rect x="74.9927%" y="533" width="0.0146%" height="15" fill="rgb(208,103,14)" fg:x="5128" fg:w="1"/><text x="75.2427%" y="543.50"></text></g><g><title>itsi_scheduler.bundle`itsi_rb_helpers::heap_fiber::HeapFiber::inner (10 samples, 0.15%)</title><rect x="74.9634%" y="549" width="0.1462%" height="15" fill="rgb(238,20,8)" fg:x="5126" fg:w="10"/><text x="75.2134%" y="559.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (7 samples, 0.10%)</title><rect x="75.0073%" y="533" width="0.1024%" height="15" fill="rgb(218,80,54)" fg:x="5129" fg:w="7"/><text x="75.2573%" y="543.50"></text></g><g><title>itsi_scheduler.bundle`&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::write (2 samples, 0.03%)</title><rect x="75.1974%" y="533" width="0.0292%" height="15" fill="rgb(240,144,17)" fg:x="5142" fg:w="2"/><text x="75.4474%" y="543.50"></text></g><g><title>itsi_scheduler.bundle`DYLD-STUB$$rb_fiber_alive_p (1 samples, 0.01%)</title><rect x="75.2267%" y="533" width="0.0146%" height="15" fill="rgb(245,27,50)" fg:x="5144" fg:w="1"/><text x="75.4767%" y="543.50"></text></g><g><title>itsi_scheduler.bundle`DYLD-STUB$$rb_fiber_resume_kw (1 samples, 0.01%)</title><rect x="75.2413%" y="533" width="0.0146%" height="15" fill="rgb(251,51,7)" fg:x="5145" fg:w="1"/><text x="75.4913%" y="543.50"></text></g><g><title>itsi_scheduler.bundle`core::hash::BuildHasher::hash_one (2 samples, 0.03%)</title><rect x="75.2559%" y="533" width="0.0292%" height="15" fill="rgb(245,217,29)" fg:x="5146" fg:w="2"/><text x="75.5059%" y="543.50"></text></g><g><title>itsi_scheduler.bundle`magnus::fiber::Fiber::is_alive (1 samples, 0.01%)</title><rect x="75.2852%" y="533" width="0.0146%" height="15" fill="rgb(221,176,29)" fg:x="5148" fg:w="1"/><text x="75.5352%" y="543.50"></text></g><g><title>libruby.3.4.dylib`rb_fiber_alive_p (1 samples, 0.01%)</title><rect x="75.2852%" y="517" width="0.0146%" height="15" fill="rgb(212,180,24)" fg:x="5148" fg:w="1"/><text x="75.5352%" y="527.50"></text></g><g><title>libruby.3.4.dylib`rb_check_typeddata (1 samples, 0.01%)</title><rect x="75.2852%" y="501" width="0.0146%" height="15" fill="rgb(254,24,2)" fg:x="5148" fg:w="1"/><text x="75.5352%" y="511.50"></text></g><g><title>libruby.3.4.dylib`rb_current_ec (1 samples, 0.01%)</title><rect x="75.2998%" y="533" width="0.0146%" height="15" fill="rgb(230,100,2)" fg:x="5149" fg:w="1"/><text x="75.5498%" y="543.50"></text></g><g><title>libruby.3.4.dylib`rb_fiber_resume_kw (1 samples, 0.01%)</title><rect x="75.3144%" y="533" width="0.0146%" height="15" fill="rgb(219,142,25)" fg:x="5150" fg:w="1"/><text x="75.5644%" y="543.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (4 samples, 0.06%)</title><rect x="75.3437%" y="517" width="0.0585%" height="15" fill="rgb(240,73,43)" fg:x="5152" fg:w="4"/><text x="75.5937%" y="527.50"></text></g><g><title>libruby.3.4.dylib`rb_gc_unregister_address (7 samples, 0.10%)</title><rect x="75.3290%" y="533" width="0.1024%" height="15" fill="rgb(214,114,15)" fg:x="5151" fg:w="7"/><text x="75.5790%" y="543.50"></text></g><g><title>libsystem_malloc.dylib`malloc_size (2 samples, 0.03%)</title><rect x="75.4022%" y="517" width="0.0292%" height="15" fill="rgb(207,130,4)" fg:x="5156" fg:w="2"/><text x="75.6522%" y="527.50"></text></g><g><title>itsi_scheduler.bundle`magnus::error::protect::call (1 samples, 0.01%)</title><rect x="75.4607%" y="517" width="0.0146%" height="15" fill="rgb(221,25,40)" fg:x="5160" fg:w="1"/><text x="75.7107%" y="527.50"></text></g><g><title>libdyld.dylib`tlv_get_addr (1 samples, 0.01%)</title><rect x="75.4753%" y="517" width="0.0146%" height="15" fill="rgb(241,184,7)" fg:x="5161" fg:w="1"/><text x="75.7253%" y="527.50"></text></g><g><title>libruby.3.4.dylib`fiber_stack_release (1 samples, 0.01%)</title><rect x="75.4899%" y="517" width="0.0146%" height="15" fill="rgb(235,159,4)" fg:x="5162" fg:w="1"/><text x="75.7399%" y="527.50"></text></g><g><title>libdyld.dylib`tlv_get_addr (1 samples, 0.01%)</title><rect x="78.9851%" y="501" width="0.0146%" height="15" fill="rgb(214,87,48)" fg:x="5401" fg:w="1"/><text x="79.2351%" y="511.50"></text></g><g><title>libruby.3.4.dylib`coroutine_transfer (5 samples, 0.07%)</title><rect x="78.9997%" y="501" width="0.0731%" height="15" fill="rgb(246,198,24)" fg:x="5402" fg:w="5"/><text x="79.2497%" y="511.50"></text></g><g><title>libruby.3.4.dylib`fiber_setcontext (1 samples, 0.01%)</title><rect x="79.0728%" y="501" width="0.0146%" height="15" fill="rgb(209,66,40)" fg:x="5407" fg:w="1"/><text x="79.3228%" y="511.50"></text></g><g><title>libruby.3.4.dylib`rb_current_ec_set (1 samples, 0.01%)</title><rect x="79.0728%" y="485" width="0.0146%" height="15" fill="rgb(233,147,39)" fg:x="5407" fg:w="1"/><text x="79.3228%" y="495.50"></text></g><g><title>libruby.3.4.dylib`rb_ec_initialize_vm_stack (182 samples, 2.66%)</title><rect x="79.0875%" y="501" width="2.6616%" height="15" fill="rgb(231,145,52)" fg:x="5408" fg:w="182"/><text x="79.3375%" y="511.50">li..</text></g><g><title>libruby.3.4.dylib`rb_threadptr_execute_interrupts (2 samples, 0.03%)</title><rect x="81.7490%" y="501" width="0.0292%" height="15" fill="rgb(206,20,26)" fg:x="5590" fg:w="2"/><text x="81.9990%" y="511.50"></text></g><g><title>libruby.3.4.dylib`fiber_switch (865 samples, 12.65%)</title><rect x="75.5045%" y="517" width="12.6499%" height="15" fill="rgb(238,220,4)" fg:x="5163" fg:w="865"/><text x="75.7545%" y="527.50">libruby.3.4.dylib`f..</text></g><g><title>libsystem_kernel.dylib`madvise (436 samples, 6.38%)</title><rect x="81.7783%" y="501" width="6.3761%" height="15" fill="rgb(252,195,42)" fg:x="5592" fg:w="436"/><text x="82.0283%" y="511.50">libsyste..</text></g><g><title>libruby.3.4.dylib`rb_protect (872 samples, 12.75%)</title><rect x="75.4314%" y="533" width="12.7523%" height="15" fill="rgb(209,10,6)" fg:x="5158" fg:w="872"/><text x="75.6814%" y="543.50">libruby.3.4.dylib`r..</text></g><g><title>libruby.3.4.dylib`rb_fiber_resume_kw (2 samples, 0.03%)</title><rect x="88.1544%" y="517" width="0.0292%" height="15" fill="rgb(229,3,52)" fg:x="6028" fg:w="2"/><text x="88.4044%" y="527.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (2 samples, 0.03%)</title><rect x="88.1837%" y="533" width="0.0292%" height="15" fill="rgb(253,49,37)" fg:x="6030" fg:w="2"/><text x="88.4337%" y="543.50"></text></g><g><title>itsi_scheduler.bundle`itsi_scheduler::itsi_scheduler::ItsiScheduler::resume (897 samples, 13.12%)</title><rect x="75.1097%" y="549" width="13.1179%" height="15" fill="rgb(240,103,49)" fg:x="5136" fg:w="897"/><text x="75.3597%" y="559.50">itsi_scheduler.bundl..</text></g><g><title>libsystem_malloc.dylib`malloc_size (1 samples, 0.01%)</title><rect x="88.2129%" y="533" width="0.0146%" height="15" fill="rgb(250,182,30)" fg:x="6032" fg:w="1"/><text x="88.4629%" y="543.50"></text></g><g><title>itsi_scheduler.bundle`magnus::scan_args::ScannedArgs::required (1 samples, 0.01%)</title><rect x="88.2276%" y="549" width="0.0146%" height="15" fill="rgb(248,8,30)" fg:x="6033" fg:w="1"/><text x="88.4776%" y="559.50"></text></g><g><title>itsi_scheduler.bundle`magnus::scan_args::ScannedArgs::splat (1 samples, 0.01%)</title><rect x="88.2422%" y="549" width="0.0146%" height="15" fill="rgb(237,120,30)" fg:x="6034" fg:w="1"/><text x="88.4922%" y="559.50"></text></g><g><title>itsi_scheduler.bundle`magnus::scan_args::ScannedArgs::trailing (1 samples, 0.01%)</title><rect x="88.2568%" y="549" width="0.0146%" height="15" fill="rgb(221,146,34)" fg:x="6035" fg:w="1"/><text x="88.5068%" y="559.50"></text></g><g><title>itsi_scheduler.bundle`&lt;&amp;str as alloc::ffi::c_str::CString::new::SpecNewImpl&gt;::spec_new_impl (2 samples, 0.03%)</title><rect x="88.3299%" y="533" width="0.0292%" height="15" fill="rgb(242,55,13)" fg:x="6040" fg:w="2"/><text x="88.5799%" y="543.50"></text></g><g><title>itsi_scheduler.bundle`&lt;magnus::block::Proc as magnus::try_convert::TryConvert&gt;::try_convert (1 samples, 0.01%)</title><rect x="88.3592%" y="533" width="0.0146%" height="15" fill="rgb(242,112,31)" fg:x="6042" fg:w="1"/><text x="88.6092%" y="543.50"></text></g><g><title>libruby.3.4.dylib`rb_obj_is_proc (1 samples, 0.01%)</title><rect x="88.3592%" y="517" width="0.0146%" height="15" fill="rgb(249,192,27)" fg:x="6042" fg:w="1"/><text x="88.6092%" y="527.50"></text></g><g><title>itsi_scheduler.bundle`magnus::scan_args::ScannedArgs::optional (1 samples, 0.01%)</title><rect x="88.3738%" y="533" width="0.0146%" height="15" fill="rgb(208,204,44)" fg:x="6043" fg:w="1"/><text x="88.6238%" y="543.50"></text></g><g><title>itsi_scheduler.bundle`magnus::scan_args::ScannedArgs::trailing (2 samples, 0.03%)</title><rect x="88.3884%" y="533" width="0.0292%" height="15" fill="rgb(208,93,54)" fg:x="6044" fg:w="2"/><text x="88.6384%" y="543.50"></text></g><g><title>itsi_scheduler.bundle`&lt;&amp;str as alloc::ffi::c_str::CString::new::SpecNewImpl&gt;::spec_new_impl (1 samples, 0.01%)</title><rect x="88.4615%" y="517" width="0.0146%" height="15" fill="rgb(242,1,31)" fg:x="6049" fg:w="1"/><text x="88.7115%" y="527.50"></text></g><g><title>itsi_scheduler.bundle`DYLD-STUB$$malloc (1 samples, 0.01%)</title><rect x="88.5200%" y="469" width="0.0146%" height="15" fill="rgb(241,83,25)" fg:x="6053" fg:w="1"/><text x="88.7700%" y="479.50"></text></g><g><title>itsi_scheduler.bundle`&lt;alloc::string::String as core::fmt::Write&gt;::write_str (3 samples, 0.04%)</title><rect x="88.5054%" y="501" width="0.0439%" height="15" fill="rgb(205,169,50)" fg:x="6052" fg:w="3"/><text x="88.7554%" y="511.50"></text></g><g><title>itsi_scheduler.bundle`alloc::raw_vec::RawVecInner&lt;A&gt;::reserve::do_reserve_and_handle (2 samples, 0.03%)</title><rect x="88.5200%" y="485" width="0.0292%" height="15" fill="rgb(239,186,37)" fg:x="6053" fg:w="2"/><text x="88.7700%" y="495.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (1 samples, 0.01%)</title><rect x="88.5347%" y="469" width="0.0146%" height="15" fill="rgb(205,221,10)" fg:x="6054" fg:w="1"/><text x="88.7847%" y="479.50"></text></g><g><title>itsi_scheduler.bundle`alloc::raw_vec::RawVecInner&lt;A&gt;::reserve::do_reserve_and_handle (3 samples, 0.04%)</title><rect x="88.5493%" y="501" width="0.0439%" height="15" fill="rgb(218,196,15)" fg:x="6055" fg:w="3"/><text x="88.7993%" y="511.50"></text></g><g><title>itsi_scheduler.bundle`&lt;magnus::scan_args::ArgSpec as core::fmt::Display&gt;::fmt (9 samples, 0.13%)</title><rect x="88.4762%" y="517" width="0.1316%" height="15" fill="rgb(218,196,35)" fg:x="6050" fg:w="9"/><text x="88.7262%" y="527.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (1 samples, 0.01%)</title><rect x="88.5932%" y="501" width="0.0146%" height="15" fill="rgb(233,63,24)" fg:x="6058" fg:w="1"/><text x="88.8432%" y="511.50"></text></g><g><title>itsi_scheduler.bundle`DYLD-STUB$$malloc (1 samples, 0.01%)</title><rect x="88.6078%" y="517" width="0.0146%" height="15" fill="rgb(225,8,4)" fg:x="6059" fg:w="1"/><text x="88.8578%" y="527.50"></text></g><g><title>libruby.3.4.dylib`proc_new (1 samples, 0.01%)</title><rect x="88.6370%" y="469" width="0.0146%" height="15" fill="rgb(234,105,35)" fg:x="6061" fg:w="1"/><text x="88.8870%" y="479.50"></text></g><g><title>libruby.3.4.dylib`rb_block_given_p (1 samples, 0.01%)</title><rect x="88.6517%" y="469" width="0.0146%" height="15" fill="rgb(236,21,32)" fg:x="6062" fg:w="1"/><text x="88.9017%" y="479.50"></text></g><g><title>libruby.3.4.dylib`rb_vm_frame_block_handler (1 samples, 0.01%)</title><rect x="88.7833%" y="453" width="0.0146%" height="15" fill="rgb(228,109,6)" fg:x="6071" fg:w="1"/><text x="89.0333%" y="463.50"></text></g><g><title>libruby.3.4.dylib`DYLD-STUB$$calloc (1 samples, 0.01%)</title><rect x="88.8125%" y="421" width="0.0146%" height="15" fill="rgb(229,215,31)" fg:x="6073" fg:w="1"/><text x="89.0625%" y="431.50"></text></g><g><title>itsi_server.bundle`alloc::sync::Arc&lt;T,A&gt;::drop_slow (1 samples, 0.01%)</title><rect x="88.8856%" y="309" width="0.0146%" height="15" fill="rgb(221,52,54)" fg:x="6078" fg:w="1"/><text x="89.1356%" y="319.50"></text></g><g><title>itsi_server.bundle`core::ptr::drop_in_place&lt;http::request::Parts&gt; (1 samples, 0.01%)</title><rect x="88.8856%" y="293" width="0.0146%" height="15" fill="rgb(252,129,43)" fg:x="6078" fg:w="1"/><text x="89.1356%" y="303.50"></text></g><g><title>itsi_server.bundle`core::ptr::drop_in_place&lt;http::header::map::HeaderMap&gt; (1 samples, 0.01%)</title><rect x="88.8856%" y="277" width="0.0146%" height="15" fill="rgb(248,183,27)" fg:x="6078" fg:w="1"/><text x="89.1356%" y="287.50"></text></g><g><title>itsi_server.bundle`&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.01%)</title><rect x="88.8856%" y="261" width="0.0146%" height="15" fill="rgb(250,0,22)" fg:x="6078" fg:w="1"/><text x="89.1356%" y="271.50"></text></g><g><title>itsi_server.bundle`bytes::bytes_mut::shared_v_drop (1 samples, 0.01%)</title><rect x="88.8856%" y="245" width="0.0146%" height="15" fill="rgb(213,166,10)" fg:x="6078" fg:w="1"/><text x="89.1356%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`free_small (1 samples, 0.01%)</title><rect x="88.8856%" y="229" width="0.0146%" height="15" fill="rgb(207,163,36)" fg:x="6078" fg:w="1"/><text x="89.1356%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (1 samples, 0.01%)</title><rect x="88.9003%" y="261" width="0.0146%" height="15" fill="rgb(208,122,22)" fg:x="6079" fg:w="1"/><text x="89.1503%" y="271.50"></text></g><g><title>itsi_server.bundle`core::ptr::drop_in_place&lt;http::header::map::HeaderMap&gt; (2 samples, 0.03%)</title><rect x="88.9003%" y="277" width="0.0292%" height="15" fill="rgb(207,104,49)" fg:x="6079" fg:w="2"/><text x="89.1503%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (1 samples, 0.01%)</title><rect x="88.9149%" y="261" width="0.0146%" height="15" fill="rgb(248,211,50)" fg:x="6080" fg:w="1"/><text x="89.1649%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (1 samples, 0.01%)</title><rect x="88.9149%" y="245" width="0.0146%" height="15" fill="rgb(217,13,45)" fg:x="6080" fg:w="1"/><text x="89.1649%" y="255.50"></text></g><g><title>itsi_server.bundle`core::ptr::drop_in_place&lt;http::request::Parts&gt; (3 samples, 0.04%)</title><rect x="88.9003%" y="293" width="0.0439%" height="15" fill="rgb(211,216,49)" fg:x="6079" fg:w="3"/><text x="89.1503%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`_free (1 samples, 0.01%)</title><rect x="88.9295%" y="277" width="0.0146%" height="15" fill="rgb(221,58,53)" fg:x="6081" fg:w="1"/><text x="89.1795%" y="287.50"></text></g><g><title>itsi_server.bundle`core::ptr::drop_in_place&lt;itsi_server::request::itsi_request::ItsiRequest&gt; (4 samples, 0.06%)</title><rect x="88.9003%" y="309" width="0.0585%" height="15" fill="rgb(220,112,41)" fg:x="6079" fg:w="4"/><text x="89.1503%" y="319.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (1 samples, 0.01%)</title><rect x="88.9441%" y="293" width="0.0146%" height="15" fill="rgb(236,38,28)" fg:x="6082" fg:w="1"/><text x="89.1941%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`_free (1 samples, 0.01%)</title><rect x="88.9588%" y="309" width="0.0146%" height="15" fill="rgb(227,195,22)" fg:x="6083" fg:w="1"/><text x="89.2088%" y="319.50"></text></g><g><title>itsi_server.bundle`magnus::typed_data::DataTypeFunctions::extern_free (7 samples, 0.10%)</title><rect x="88.8856%" y="325" width="0.1024%" height="15" fill="rgb(214,55,33)" fg:x="6078" fg:w="7"/><text x="89.1356%" y="335.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (1 samples, 0.01%)</title><rect x="88.9734%" y="309" width="0.0146%" height="15" fill="rgb(248,80,13)" fg:x="6084" fg:w="1"/><text x="89.2234%" y="319.50"></text></g><g><title>libsystem_kernel.dylib`__ulock_wait2 (1 samples, 0.01%)</title><rect x="88.9734%" y="293" width="0.0146%" height="15" fill="rgb(238,52,6)" fg:x="6084" fg:w="1"/><text x="89.2234%" y="303.50"></text></g><g><title>libruby.3.4.dylib`cont_free (1 samples, 0.01%)</title><rect x="88.9880%" y="325" width="0.0146%" height="15" fill="rgb(224,198,47)" fg:x="6085" fg:w="1"/><text x="89.2380%" y="335.50"></text></g><g><title>libruby.3.4.dylib`rb_native_mutex_unlock (1 samples, 0.01%)</title><rect x="88.9880%" y="309" width="0.0146%" height="15" fill="rgb(233,171,20)" fg:x="6085" fg:w="1"/><text x="89.2380%" y="319.50"></text></g><g><title>libsystem_pthread.dylib`pthread_mutex_unlock (1 samples, 0.01%)</title><rect x="88.9880%" y="293" width="0.0146%" height="15" fill="rgb(241,30,25)" fg:x="6085" fg:w="1"/><text x="89.2380%" y="303.50"></text></g><g><title>libsystem_kernel.dylib`__ulock_wake (1 samples, 0.01%)</title><rect x="89.0026%" y="309" width="0.0146%" height="15" fill="rgb(207,171,38)" fg:x="6086" fg:w="1"/><text x="89.2526%" y="319.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (2 samples, 0.03%)</title><rect x="89.0173%" y="309" width="0.0292%" height="15" fill="rgb(234,70,1)" fg:x="6087" fg:w="2"/><text x="89.2673%" y="319.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (1 samples, 0.01%)</title><rect x="89.0319%" y="293" width="0.0146%" height="15" fill="rgb(232,178,18)" fg:x="6088" fg:w="1"/><text x="89.2819%" y="303.50"></text></g><g><title>libruby.3.4.dylib`ruby_xfree (4 samples, 0.06%)</title><rect x="89.0026%" y="325" width="0.0585%" height="15" fill="rgb(241,78,40)" fg:x="6086" fg:w="4"/><text x="89.2526%" y="335.50"></text></g><g><title>libsystem_platform.dylib`_platform_memset (1 samples, 0.01%)</title><rect x="89.0465%" y="309" width="0.0146%" height="15" fill="rgb(222,35,25)" fg:x="6089" fg:w="1"/><text x="89.2965%" y="319.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (1 samples, 0.01%)</title><rect x="89.0611%" y="325" width="0.0146%" height="15" fill="rgb(207,92,16)" fg:x="6090" fg:w="1"/><text x="89.3111%" y="335.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (1 samples, 0.01%)</title><rect x="89.0758%" y="325" width="0.0146%" height="15" fill="rgb(216,59,51)" fg:x="6091" fg:w="1"/><text x="89.3258%" y="335.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (1 samples, 0.01%)</title><rect x="89.0758%" y="309" width="0.0146%" height="15" fill="rgb(213,80,28)" fg:x="6091" fg:w="1"/><text x="89.3258%" y="319.50"></text></g><g><title>libruby.3.4.dylib`rb_gc_obj_free (16 samples, 0.23%)</title><rect x="88.8856%" y="341" width="0.2340%" height="15" fill="rgb(220,93,7)" fg:x="6078" fg:w="16"/><text x="89.1356%" y="351.50"></text></g><g><title>libsystem_malloc.dylib`malloc_size (2 samples, 0.03%)</title><rect x="89.0904%" y="325" width="0.0292%" height="15" fill="rgb(225,24,44)" fg:x="6092" fg:w="2"/><text x="89.3404%" y="335.50"></text></g><g><title>libruby.3.4.dylib`rb_gc_obj_free_vm_weak_references (1 samples, 0.01%)</title><rect x="89.1196%" y="341" width="0.0146%" height="15" fill="rgb(243,74,40)" fg:x="6094" fg:w="1"/><text x="89.3696%" y="351.50"></text></g><g><title>libruby.3.4.dylib`gc_sweep_plane (20 samples, 0.29%)</title><rect x="88.8564%" y="357" width="0.2925%" height="15" fill="rgb(228,39,7)" fg:x="6076" fg:w="20"/><text x="89.1064%" y="367.50"></text></g><g><title>libsystem_malloc.dylib`_free (1 samples, 0.01%)</title><rect x="89.1342%" y="341" width="0.0146%" height="15" fill="rgb(227,79,8)" fg:x="6095" fg:w="1"/><text x="89.3842%" y="351.50"></text></g><g><title>libruby.3.4.dylib`rb_gc_obj_free (1 samples, 0.01%)</title><rect x="89.1489%" y="357" width="0.0146%" height="15" fill="rgb(236,58,11)" fg:x="6096" fg:w="1"/><text x="89.3989%" y="367.50"></text></g><g><title>libruby.3.4.dylib`newobj_of (24 samples, 0.35%)</title><rect x="88.8271%" y="421" width="0.3510%" height="15" fill="rgb(249,63,35)" fg:x="6074" fg:w="24"/><text x="89.0771%" y="431.50"></text></g><g><title>libruby.3.4.dylib`newobj_cache_miss (22 samples, 0.32%)</title><rect x="88.8564%" y="405" width="0.3217%" height="15" fill="rgb(252,114,16)" fg:x="6076" fg:w="22"/><text x="89.1064%" y="415.50"></text></g><g><title>libruby.3.4.dylib`gc_continue (22 samples, 0.32%)</title><rect x="88.8564%" y="389" width="0.3217%" height="15" fill="rgb(254,151,24)" fg:x="6076" fg:w="22"/><text x="89.1064%" y="399.50"></text></g><g><title>libruby.3.4.dylib`gc_sweep_step (22 samples, 0.32%)</title><rect x="88.8564%" y="373" width="0.3217%" height="15" fill="rgb(253,54,39)" fg:x="6076" fg:w="22"/><text x="89.1064%" y="383.50"></text></g><g><title>libruby.3.4.dylib`rb_gc_obj_free_vm_weak_references (1 samples, 0.01%)</title><rect x="89.1635%" y="357" width="0.0146%" height="15" fill="rgb(243,25,45)" fg:x="6097" fg:w="1"/><text x="89.4135%" y="367.50"></text></g><g><title>libsystem_malloc.dylib`malloc_size (1 samples, 0.01%)</title><rect x="89.1781%" y="405" width="0.0146%" height="15" fill="rgb(234,134,9)" fg:x="6098" fg:w="1"/><text x="89.4281%" y="415.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate_outlined (1 samples, 0.01%)</title><rect x="89.1927%" y="405" width="0.0146%" height="15" fill="rgb(227,166,31)" fg:x="6099" fg:w="1"/><text x="89.4427%" y="415.50"></text></g><g><title>libruby.3.4.dylib`ruby_xcalloc (6 samples, 0.09%)</title><rect x="89.1781%" y="421" width="0.0877%" height="15" fill="rgb(245,143,41)" fg:x="6098" fg:w="6"/><text x="89.4281%" y="431.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_calloc (4 samples, 0.06%)</title><rect x="89.2074%" y="405" width="0.0585%" height="15" fill="rgb(238,181,32)" fg:x="6100" fg:w="4"/><text x="89.4574%" y="415.50"></text></g><g><title>libruby.3.4.dylib`typed_data_alloc (1 samples, 0.01%)</title><rect x="89.2659%" y="421" width="0.0146%" height="15" fill="rgb(224,113,18)" fg:x="6104" fg:w="1"/><text x="89.5159%" y="431.50"></text></g><g><title>libruby.3.4.dylib`rb_data_typed_object_zalloc (33 samples, 0.48%)</title><rect x="88.8125%" y="437" width="0.4826%" height="15" fill="rgb(240,229,28)" fg:x="6073" fg:w="33"/><text x="89.0625%" y="447.50"></text></g><g><title>libsystem_malloc.dylib`calloc (1 samples, 0.01%)</title><rect x="89.2805%" y="421" width="0.0146%" height="15" fill="rgb(250,185,3)" fg:x="6105" fg:w="1"/><text x="89.5305%" y="431.50"></text></g><g><title>libruby.3.4.dylib`rb_gc_writebarrier (3 samples, 0.04%)</title><rect x="89.2951%" y="437" width="0.0439%" height="15" fill="rgb(212,59,25)" fg:x="6106" fg:w="3"/><text x="89.5451%" y="447.50"></text></g><g><title>libruby.3.4.dylib`rb_imemo_new (2 samples, 0.03%)</title><rect x="89.3390%" y="437" width="0.0292%" height="15" fill="rgb(221,87,20)" fg:x="6109" fg:w="2"/><text x="89.5890%" y="447.50"></text></g><g><title>libruby.3.4.dylib`rb_yjit_invalidate_ep_is_bp (1 samples, 0.01%)</title><rect x="89.3682%" y="437" width="0.0146%" height="15" fill="rgb(213,74,28)" fg:x="6111" fg:w="1"/><text x="89.6182%" y="447.50"></text></g><g><title>libruby.3.4.dylib`ruby_xcalloc (1 samples, 0.01%)</title><rect x="89.3829%" y="437" width="0.0146%" height="15" fill="rgb(224,132,34)" fg:x="6112" fg:w="1"/><text x="89.6329%" y="447.50"></text></g><g><title>libruby.3.4.dylib`ruby_xmalloc2 (1 samples, 0.01%)</title><rect x="89.3975%" y="437" width="0.0146%" height="15" fill="rgb(222,101,24)" fg:x="6113" fg:w="1"/><text x="89.6475%" y="447.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (1 samples, 0.01%)</title><rect x="89.5291%" y="229" width="0.0146%" height="15" fill="rgb(254,142,4)" fg:x="6122" fg:w="1"/><text x="89.7791%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`small_free_list_add_ptr (1 samples, 0.01%)</title><rect x="89.5437%" y="213" width="0.0146%" height="15" fill="rgb(230,229,49)" fg:x="6123" fg:w="1"/><text x="89.7937%" y="223.50"></text></g><g><title>itsi_server.bundle`&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (3 samples, 0.04%)</title><rect x="89.5291%" y="261" width="0.0439%" height="15" fill="rgb(238,70,47)" fg:x="6122" fg:w="3"/><text x="89.7791%" y="271.50"></text></g><g><title>itsi_server.bundle`bytes::bytes_mut::shared_v_drop (3 samples, 0.04%)</title><rect x="89.5291%" y="245" width="0.0439%" height="15" fill="rgb(231,160,17)" fg:x="6122" fg:w="3"/><text x="89.7791%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`free_small (2 samples, 0.03%)</title><rect x="89.5437%" y="229" width="0.0292%" height="15" fill="rgb(218,68,53)" fg:x="6123" fg:w="2"/><text x="89.7937%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`small_free_list_remove_ptr_no_clear (1 samples, 0.01%)</title><rect x="89.5584%" y="213" width="0.0146%" height="15" fill="rgb(236,111,10)" fg:x="6124" fg:w="1"/><text x="89.8084%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`DYLD-STUB$$_platform_bzero (1 samples, 0.01%)</title><rect x="89.5730%" y="261" width="0.0146%" height="15" fill="rgb(224,34,41)" fg:x="6125" fg:w="1"/><text x="89.8230%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (1 samples, 0.01%)</title><rect x="89.5876%" y="261" width="0.0146%" height="15" fill="rgb(241,118,19)" fg:x="6126" fg:w="1"/><text x="89.8376%" y="271.50"></text></g><g><title>libsystem_platform.dylib`__bzero (1 samples, 0.01%)</title><rect x="89.6022%" y="261" width="0.0146%" height="15" fill="rgb(238,129,25)" fg:x="6127" fg:w="1"/><text x="89.8522%" y="271.50"></text></g><g><title>itsi_server.bundle`alloc::sync::Arc&lt;T,A&gt;::drop_slow (9 samples, 0.13%)</title><rect x="89.5291%" y="309" width="0.1316%" height="15" fill="rgb(238,22,31)" fg:x="6122" fg:w="9"/><text x="89.7791%" y="319.50"></text></g><g><title>itsi_server.bundle`core::ptr::drop_in_place&lt;http::request::Parts&gt; (9 samples, 0.13%)</title><rect x="89.5291%" y="293" width="0.1316%" height="15" fill="rgb(222,174,48)" fg:x="6122" fg:w="9"/><text x="89.7791%" y="303.50"></text></g><g><title>itsi_server.bundle`core::ptr::drop_in_place&lt;http::header::map::HeaderMap&gt; (9 samples, 0.13%)</title><rect x="89.5291%" y="277" width="0.1316%" height="15" fill="rgb(206,152,40)" fg:x="6122" fg:w="9"/><text x="89.7791%" y="287.50"></text></g><g><title>libsystem_platform.dylib`_platform_memset (3 samples, 0.04%)</title><rect x="89.6168%" y="261" width="0.0439%" height="15" fill="rgb(218,99,54)" fg:x="6128" fg:w="3"/><text x="89.8668%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (3 samples, 0.04%)</title><rect x="89.6753%" y="261" width="0.0439%" height="15" fill="rgb(220,174,26)" fg:x="6132" fg:w="3"/><text x="89.9253%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (1 samples, 0.01%)</title><rect x="89.7046%" y="245" width="0.0146%" height="15" fill="rgb(245,116,9)" fg:x="6134" fg:w="1"/><text x="89.9546%" y="255.50"></text></g><g><title>itsi_server.bundle`core::ptr::drop_in_place&lt;http::header::map::HeaderMap&gt; (5 samples, 0.07%)</title><rect x="89.6607%" y="277" width="0.0731%" height="15" fill="rgb(209,72,35)" fg:x="6131" fg:w="5"/><text x="89.9107%" y="287.50"></text></g><g><title>libsystem_platform.dylib`_platform_memset (1 samples, 0.01%)</title><rect x="89.7192%" y="261" width="0.0146%" height="15" fill="rgb(226,126,21)" fg:x="6135" fg:w="1"/><text x="89.9692%" y="271.50"></text></g><g><title>itsi_server.bundle`core::ptr::drop_in_place&lt;itsi_server::request::itsi_request::ItsiRequest&gt; (6 samples, 0.09%)</title><rect x="89.6607%" y="309" width="0.0877%" height="15" fill="rgb(227,192,1)" fg:x="6131" fg:w="6"/><text x="89.9107%" y="319.50"></text></g><g><title>itsi_server.bundle`core::ptr::drop_in_place&lt;http::request::Parts&gt; (6 samples, 0.09%)</title><rect x="89.6607%" y="293" width="0.0877%" height="15" fill="rgb(237,180,29)" fg:x="6131" fg:w="6"/><text x="89.9107%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`_free (1 samples, 0.01%)</title><rect x="89.7338%" y="277" width="0.0146%" height="15" fill="rgb(230,197,35)" fg:x="6136" fg:w="1"/><text x="89.9838%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (3 samples, 0.04%)</title><rect x="89.7485%" y="309" width="0.0439%" height="15" fill="rgb(246,193,31)" fg:x="6137" fg:w="3"/><text x="89.9985%" y="319.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (1 samples, 0.01%)</title><rect x="89.7777%" y="293" width="0.0146%" height="15" fill="rgb(241,36,4)" fg:x="6139" fg:w="1"/><text x="90.0277%" y="303.50"></text></g><g><title>itsi_server.bundle`magnus::typed_data::DataTypeFunctions::extern_free (20 samples, 0.29%)</title><rect x="89.5291%" y="325" width="0.2925%" height="15" fill="rgb(241,130,17)" fg:x="6122" fg:w="20"/><text x="89.7791%" y="335.50"></text></g><g><title>libsystem_platform.dylib`_platform_memset (2 samples, 0.03%)</title><rect x="89.7923%" y="309" width="0.0292%" height="15" fill="rgb(206,137,32)" fg:x="6140" fg:w="2"/><text x="90.0423%" y="319.50"></text></g><g><title>libruby.3.4.dylib`cont_free (2 samples, 0.03%)</title><rect x="89.8216%" y="325" width="0.0292%" height="15" fill="rgb(237,228,51)" fg:x="6142" fg:w="2"/><text x="90.0716%" y="335.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (2 samples, 0.03%)</title><rect x="89.8216%" y="309" width="0.0292%" height="15" fill="rgb(243,6,42)" fg:x="6142" fg:w="2"/><text x="90.0716%" y="319.50"></text></g><g><title>libruby.3.4.dylib`rb_imemo_free (1 samples, 0.01%)</title><rect x="89.8508%" y="325" width="0.0146%" height="15" fill="rgb(251,74,28)" fg:x="6144" fg:w="1"/><text x="90.1008%" y="335.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (1 samples, 0.01%)</title><rect x="89.8655%" y="309" width="0.0146%" height="15" fill="rgb(218,20,49)" fg:x="6145" fg:w="1"/><text x="90.1155%" y="319.50"></text></g><g><title>libsystem_malloc.dylib`get_tiny_previous_free_msize (2 samples, 0.03%)</title><rect x="89.9240%" y="293" width="0.0292%" height="15" fill="rgb(238,28,14)" fg:x="6149" fg:w="2"/><text x="90.1740%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (7 samples, 0.10%)</title><rect x="89.8801%" y="309" width="0.1024%" height="15" fill="rgb(229,40,46)" fg:x="6146" fg:w="7"/><text x="90.1301%" y="319.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (2 samples, 0.03%)</title><rect x="89.9532%" y="293" width="0.0292%" height="15" fill="rgb(244,195,20)" fg:x="6151" fg:w="2"/><text x="90.2032%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_remove_ptr (1 samples, 0.01%)</title><rect x="89.9678%" y="277" width="0.0146%" height="15" fill="rgb(253,56,35)" fg:x="6152" fg:w="1"/><text x="90.2178%" y="287.50"></text></g><g><title>libruby.3.4.dylib`ruby_xfree (9 samples, 0.13%)</title><rect x="89.8655%" y="325" width="0.1316%" height="15" fill="rgb(210,149,44)" fg:x="6145" fg:w="9"/><text x="90.1155%" y="335.50"></text></g><g><title>libsystem_malloc.dylib`szone_size (1 samples, 0.01%)</title><rect x="89.9825%" y="309" width="0.0146%" height="15" fill="rgb(240,135,12)" fg:x="6153" fg:w="1"/><text x="90.2325%" y="319.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (2 samples, 0.03%)</title><rect x="89.9971%" y="325" width="0.0292%" height="15" fill="rgb(251,24,50)" fg:x="6154" fg:w="2"/><text x="90.2471%" y="335.50"></text></g><g><title>libruby.3.4.dylib`rb_gc_obj_free (40 samples, 0.58%)</title><rect x="89.4852%" y="341" width="0.5850%" height="15" fill="rgb(243,200,47)" fg:x="6119" fg:w="40"/><text x="89.7352%" y="351.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (3 samples, 0.04%)</title><rect x="90.0263%" y="325" width="0.0439%" height="15" fill="rgb(224,166,26)" fg:x="6156" fg:w="3"/><text x="90.2763%" y="335.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (3 samples, 0.04%)</title><rect x="90.0263%" y="309" width="0.0439%" height="15" fill="rgb(233,0,47)" fg:x="6156" fg:w="3"/><text x="90.2763%" y="319.50"></text></g><g><title>libruby.3.4.dylib`rb_gc_obj_free_vm_weak_references (3 samples, 0.04%)</title><rect x="90.0702%" y="341" width="0.0439%" height="15" fill="rgb(253,80,5)" fg:x="6159" fg:w="3"/><text x="90.3202%" y="351.50"></text></g><g><title>libruby.3.4.dylib`gc_sweep_plane (47 samples, 0.69%)</title><rect x="89.4414%" y="357" width="0.6873%" height="15" fill="rgb(214,133,25)" fg:x="6116" fg:w="47"/><text x="89.6914%" y="367.50"></text></g><g><title>libruby.3.4.dylib`ruby_xfree (1 samples, 0.01%)</title><rect x="90.1141%" y="341" width="0.0146%" height="15" fill="rgb(209,27,14)" fg:x="6162" fg:w="1"/><text x="90.3641%" y="351.50"></text></g><g><title>libruby.3.4.dylib`gc_continue (48 samples, 0.70%)</title><rect x="89.4414%" y="389" width="0.7020%" height="15" fill="rgb(219,102,51)" fg:x="6116" fg:w="48"/><text x="89.6914%" y="399.50"></text></g><g><title>libruby.3.4.dylib`gc_sweep_step (48 samples, 0.70%)</title><rect x="89.4414%" y="373" width="0.7020%" height="15" fill="rgb(237,18,16)" fg:x="6116" fg:w="48"/><text x="89.6914%" y="383.50"></text></g><g><title>libruby.3.4.dylib`rb_gc_obj_free_vm_weak_references (1 samples, 0.01%)</title><rect x="90.1287%" y="357" width="0.0146%" height="15" fill="rgb(241,85,17)" fg:x="6163" fg:w="1"/><text x="90.3787%" y="367.50"></text></g><g><title>libruby.3.4.dylib`newobj_of (50 samples, 0.73%)</title><rect x="89.4267%" y="421" width="0.7312%" height="15" fill="rgb(236,90,42)" fg:x="6115" fg:w="50"/><text x="89.6767%" y="431.50"></text></g><g><title>libruby.3.4.dylib`newobj_cache_miss (49 samples, 0.72%)</title><rect x="89.4414%" y="405" width="0.7166%" height="15" fill="rgb(249,57,21)" fg:x="6116" fg:w="49"/><text x="89.6914%" y="415.50"></text></g><g><title>libruby.3.4.dylib`rb_native_mutex_unlock (1 samples, 0.01%)</title><rect x="90.1433%" y="389" width="0.0146%" height="15" fill="rgb(243,12,36)" fg:x="6164" fg:w="1"/><text x="90.3933%" y="399.50"></text></g><g><title>libsystem_pthread.dylib`pthread_mutex_unlock (1 samples, 0.01%)</title><rect x="90.1433%" y="373" width="0.0146%" height="15" fill="rgb(253,128,47)" fg:x="6164" fg:w="1"/><text x="90.3933%" y="383.50"></text></g><g><title>libruby.3.4.dylib`rb_gc_impl_malloc (2 samples, 0.03%)</title><rect x="90.1579%" y="421" width="0.0292%" height="15" fill="rgb(207,33,20)" fg:x="6165" fg:w="2"/><text x="90.4079%" y="431.50"></text></g><g><title>libruby.3.4.dylib`rb_gc_impl_malloc (3 samples, 0.04%)</title><rect x="90.2164%" y="405" width="0.0439%" height="15" fill="rgb(233,215,35)" fg:x="6169" fg:w="3"/><text x="90.4664%" y="415.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_size (2 samples, 0.03%)</title><rect x="90.2311%" y="389" width="0.0292%" height="15" fill="rgb(249,188,52)" fg:x="6170" fg:w="2"/><text x="90.4811%" y="399.50"></text></g><g><title>libruby.3.4.dylib`vm_make_env_each (59 samples, 0.86%)</title><rect x="89.4121%" y="437" width="0.8628%" height="15" fill="rgb(225,12,32)" fg:x="6114" fg:w="59"/><text x="89.6621%" y="447.50"></text></g><g><title>libruby.3.4.dylib`ruby_xmalloc2 (6 samples, 0.09%)</title><rect x="90.1872%" y="421" width="0.0877%" height="15" fill="rgb(247,98,14)" fg:x="6167" fg:w="6"/><text x="90.4372%" y="431.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (1 samples, 0.01%)</title><rect x="90.2603%" y="405" width="0.0146%" height="15" fill="rgb(247,219,48)" fg:x="6172" fg:w="1"/><text x="90.5103%" y="415.50"></text></g><g><title>itsi_scheduler.bundle`magnus::error::protect::call (114 samples, 1.67%)</title><rect x="88.6370%" y="501" width="1.6672%" height="15" fill="rgb(253,60,48)" fg:x="6061" fg:w="114"/><text x="88.8870%" y="511.50"></text></g><g><title>libruby.3.4.dylib`rb_scan_args (114 samples, 1.67%)</title><rect x="88.6370%" y="485" width="1.6672%" height="15" fill="rgb(245,15,52)" fg:x="6061" fg:w="114"/><text x="88.8870%" y="495.50"></text></g><g><title>libruby.3.4.dylib`rb_scan_args_assign (112 samples, 1.64%)</title><rect x="88.6663%" y="469" width="1.6379%" height="15" fill="rgb(220,133,28)" fg:x="6063" fg:w="112"/><text x="88.9163%" y="479.50"></text></g><g><title>libruby.3.4.dylib`rb_vm_make_proc_lambda (103 samples, 1.51%)</title><rect x="88.7979%" y="453" width="1.5063%" height="15" fill="rgb(217,180,4)" fg:x="6072" fg:w="103"/><text x="89.0479%" y="463.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (2 samples, 0.03%)</title><rect x="90.2749%" y="437" width="0.0292%" height="15" fill="rgb(251,24,1)" fg:x="6173" fg:w="2"/><text x="90.5249%" y="447.50"></text></g><g><title>libdyld.dylib`tlv_get_addr (1 samples, 0.01%)</title><rect x="90.3042%" y="501" width="0.0146%" height="15" fill="rgb(212,185,49)" fg:x="6175" fg:w="1"/><text x="90.5542%" y="511.50"></text></g><g><title>libruby.3.4.dylib`rb_protect (119 samples, 1.74%)</title><rect x="88.6224%" y="517" width="1.7403%" height="15" fill="rgb(215,175,22)" fg:x="6060" fg:w="119"/><text x="88.8724%" y="527.50"></text></g><g><title>libruby.3.4.dylib`rb_scan_args (3 samples, 0.04%)</title><rect x="90.3188%" y="501" width="0.0439%" height="15" fill="rgb(250,205,14)" fg:x="6176" fg:w="3"/><text x="90.5688%" y="511.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (1 samples, 0.01%)</title><rect x="90.3627%" y="517" width="0.0146%" height="15" fill="rgb(225,211,22)" fg:x="6179" fg:w="1"/><text x="90.6127%" y="527.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (4 samples, 0.06%)</title><rect x="90.3773%" y="517" width="0.0585%" height="15" fill="rgb(251,179,42)" fg:x="6180" fg:w="4"/><text x="90.6273%" y="527.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (1 samples, 0.01%)</title><rect x="90.4358%" y="517" width="0.0146%" height="15" fill="rgb(208,216,51)" fg:x="6184" fg:w="1"/><text x="90.6858%" y="527.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (1 samples, 0.01%)</title><rect x="90.4504%" y="517" width="0.0146%" height="15" fill="rgb(235,36,11)" fg:x="6185" fg:w="1"/><text x="90.7004%" y="527.50"></text></g><g><title>itsi_scheduler.bundle`magnus::scan_args::scan_args_untyped (142 samples, 2.08%)</title><rect x="88.4177%" y="533" width="2.0766%" height="15" fill="rgb(213,189,28)" fg:x="6046" fg:w="142"/><text x="88.6677%" y="543.50">i..</text></g><g><title>libsystem_platform.dylib`_setjmp (2 samples, 0.03%)</title><rect x="90.4650%" y="517" width="0.0292%" height="15" fill="rgb(227,203,42)" fg:x="6186" fg:w="2"/><text x="90.7150%" y="527.50"></text></g><g><title>libruby.3.4.dylib`rb_obj_is_proc (1 samples, 0.01%)</title><rect x="90.4943%" y="533" width="0.0146%" height="15" fill="rgb(244,72,36)" fg:x="6188" fg:w="1"/><text x="90.7443%" y="543.50"></text></g><g><title>libsystem_malloc.dylib`_free (3 samples, 0.04%)</title><rect x="90.5089%" y="533" width="0.0439%" height="15" fill="rgb(213,53,17)" fg:x="6189" fg:w="3"/><text x="90.7589%" y="543.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (1 samples, 0.01%)</title><rect x="90.5528%" y="533" width="0.0146%" height="15" fill="rgb(207,167,3)" fg:x="6192" fg:w="1"/><text x="90.8028%" y="543.50"></text></g><g><title>itsi_scheduler.bundle`magnus::scan_args::scan_args (159 samples, 2.33%)</title><rect x="88.2714%" y="549" width="2.3252%" height="15" fill="rgb(216,98,30)" fg:x="6036" fg:w="159"/><text x="88.5214%" y="559.50">i..</text></g><g><title>libsystem_malloc.dylib`free (2 samples, 0.03%)</title><rect x="90.5674%" y="533" width="0.0292%" height="15" fill="rgb(236,123,15)" fg:x="6193" fg:w="2"/><text x="90.8174%" y="543.50"></text></g><g><title>itsi_scheduler.bundle`magnus::scan_args::scan_args_untyped (3 samples, 0.04%)</title><rect x="90.5967%" y="549" width="0.0439%" height="15" fill="rgb(248,81,50)" fg:x="6195" fg:w="3"/><text x="90.8467%" y="559.50"></text></g><g><title>libruby.3.4.dylib`DYLD-STUB$$malloc_size (1 samples, 0.01%)</title><rect x="90.6698%" y="533" width="0.0146%" height="15" fill="rgb(214,120,4)" fg:x="6200" fg:w="1"/><text x="90.9198%" y="543.50"></text></g><g><title>libruby.3.4.dylib`rb_gc_impl_malloc (1 samples, 0.01%)</title><rect x="90.6844%" y="533" width="0.0146%" height="15" fill="rgb(208,179,34)" fg:x="6201" fg:w="1"/><text x="90.9344%" y="543.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_size (1 samples, 0.01%)</title><rect x="90.6844%" y="517" width="0.0146%" height="15" fill="rgb(227,140,7)" fg:x="6201" fg:w="1"/><text x="90.9344%" y="527.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (1 samples, 0.01%)</title><rect x="90.6990%" y="533" width="0.0146%" height="15" fill="rgb(214,22,6)" fg:x="6202" fg:w="1"/><text x="90.9490%" y="543.50"></text></g><g><title>libruby.3.4.dylib`rb_gc_register_address (6 samples, 0.09%)</title><rect x="90.6405%" y="549" width="0.0877%" height="15" fill="rgb(207,137,27)" fg:x="6198" fg:w="6"/><text x="90.8905%" y="559.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (1 samples, 0.01%)</title><rect x="90.7137%" y="533" width="0.0146%" height="15" fill="rgb(210,8,46)" fg:x="6203" fg:w="1"/><text x="90.9637%" y="543.50"></text></g><g><title>itsi_scheduler.bundle`magnus::error::protect::call (2 samples, 0.03%)</title><rect x="90.7722%" y="533" width="0.0292%" height="15" fill="rgb(240,16,54)" fg:x="6207" fg:w="2"/><text x="91.0222%" y="543.50"></text></g><g><title>libdyld.dylib`tlv_get_addr (1 samples, 0.01%)</title><rect x="90.8014%" y="533" width="0.0146%" height="15" fill="rgb(211,209,29)" fg:x="6209" fg:w="1"/><text x="91.0514%" y="543.50"></text></g><g><title>libruby.3.4.dylib`rb_class_new_instance_pass_kw (4 samples, 0.06%)</title><rect x="90.8453%" y="517" width="0.0585%" height="15" fill="rgb(226,228,24)" fg:x="6212" fg:w="4"/><text x="91.0953%" y="527.50"></text></g><g><title>libruby.3.4.dylib`class_call_alloc_func (2 samples, 0.03%)</title><rect x="90.9038%" y="501" width="0.0292%" height="15" fill="rgb(222,84,9)" fg:x="6216" fg:w="2"/><text x="91.1538%" y="511.50"></text></g><g><title>libruby.3.4.dylib`DYLD-STUB$$pthread_mutex_unlock (1 samples, 0.01%)</title><rect x="90.9623%" y="437" width="0.0146%" height="15" fill="rgb(234,203,30)" fg:x="6220" fg:w="1"/><text x="91.2123%" y="447.50"></text></g><g><title>libruby.3.4.dylib`rb_native_mutex_unlock (1 samples, 0.01%)</title><rect x="90.9769%" y="437" width="0.0146%" height="15" fill="rgb(238,109,14)" fg:x="6221" fg:w="1"/><text x="91.2269%" y="447.50"></text></g><g><title>libruby.3.4.dylib`newobj_slowpath_wb_unprotected (6 samples, 0.09%)</title><rect x="90.9623%" y="453" width="0.0877%" height="15" fill="rgb(233,206,34)" fg:x="6220" fg:w="6"/><text x="91.2123%" y="463.50"></text></g><g><title>libruby.3.4.dylib`vm_lock_enter (4 samples, 0.06%)</title><rect x="90.9915%" y="437" width="0.0585%" height="15" fill="rgb(220,167,47)" fg:x="6222" fg:w="4"/><text x="91.2415%" y="447.50"></text></g><g><title>libruby.3.4.dylib`rb_native_mutex_lock (3 samples, 0.04%)</title><rect x="91.0061%" y="421" width="0.0439%" height="15" fill="rgb(238,105,10)" fg:x="6223" fg:w="3"/><text x="91.2561%" y="431.50"></text></g><g><title>libsystem_pthread.dylib`pthread_mutex_lock (3 samples, 0.04%)</title><rect x="91.0061%" y="405" width="0.0439%" height="15" fill="rgb(213,227,17)" fg:x="6223" fg:w="3"/><text x="91.2561%" y="415.50"></text></g><g><title>libruby.3.4.dylib`newobj_of (8 samples, 0.12%)</title><rect x="90.9476%" y="469" width="0.1170%" height="15" fill="rgb(217,132,38)" fg:x="6219" fg:w="8"/><text x="91.1976%" y="479.50"></text></g><g><title>libruby.3.4.dylib`rb_vm_lock_enter_body_cr (1 samples, 0.01%)</title><rect x="91.0500%" y="453" width="0.0146%" height="15" fill="rgb(242,146,4)" fg:x="6226" fg:w="1"/><text x="91.3000%" y="463.50"></text></g><g><title>libruby.3.4.dylib`class_call_alloc_func (10 samples, 0.15%)</title><rect x="90.9330%" y="485" width="0.1462%" height="15" fill="rgb(212,61,9)" fg:x="6218" fg:w="10"/><text x="91.1830%" y="495.50"></text></g><g><title>libruby.3.4.dylib`typed_data_alloc (1 samples, 0.01%)</title><rect x="91.0646%" y="469" width="0.0146%" height="15" fill="rgb(247,126,22)" fg:x="6227" fg:w="1"/><text x="91.3146%" y="479.50"></text></g><g><title>libruby.3.4.dylib`newobj_of (2 samples, 0.03%)</title><rect x="91.0793%" y="485" width="0.0292%" height="15" fill="rgb(220,196,2)" fg:x="6228" fg:w="2"/><text x="91.3293%" y="495.50"></text></g><g><title>libruby.3.4.dylib`fiber_initialize (2 samples, 0.03%)</title><rect x="91.1524%" y="453" width="0.0292%" height="15" fill="rgb(208,46,4)" fg:x="6233" fg:w="2"/><text x="91.4024%" y="463.50"></text></g><g><title>libdyld.dylib`tlv_get_addr (2 samples, 0.03%)</title><rect x="91.1816%" y="421" width="0.0292%" height="15" fill="rgb(252,104,46)" fg:x="6235" fg:w="2"/><text x="91.4316%" y="431.50"></text></g><g><title>libruby.3.4.dylib`DYLD-STUB$$calloc (1 samples, 0.01%)</title><rect x="91.2109%" y="421" width="0.0146%" height="15" fill="rgb(237,152,48)" fg:x="6237" fg:w="1"/><text x="91.4609%" y="431.50"></text></g><g><title>libruby.3.4.dylib`rb_current_ec (1 samples, 0.01%)</title><rect x="91.2255%" y="421" width="0.0146%" height="15" fill="rgb(221,59,37)" fg:x="6238" fg:w="1"/><text x="91.4755%" y="431.50"></text></g><g><title>libruby.3.4.dylib`rb_native_mutex_lock (4 samples, 0.06%)</title><rect x="91.2401%" y="421" width="0.0585%" height="15" fill="rgb(209,202,51)" fg:x="6239" fg:w="4"/><text x="91.4901%" y="431.50"></text></g><g><title>libsystem_pthread.dylib`pthread_mutex_lock (1 samples, 0.01%)</title><rect x="91.2840%" y="405" width="0.0146%" height="15" fill="rgb(228,81,30)" fg:x="6242" fg:w="1"/><text x="91.5340%" y="415.50"></text></g><g><title>libruby.3.4.dylib`rb_native_mutex_unlock (6 samples, 0.09%)</title><rect x="91.2986%" y="421" width="0.0877%" height="15" fill="rgb(227,42,39)" fg:x="6243" fg:w="6"/><text x="91.5486%" y="431.50"></text></g><g><title>libsystem_pthread.dylib`pthread_mutex_unlock (2 samples, 0.03%)</title><rect x="91.3571%" y="405" width="0.0292%" height="15" fill="rgb(221,26,2)" fg:x="6247" fg:w="2"/><text x="91.6071%" y="415.50"></text></g><g><title>libsystem_malloc.dylib`malloc_size (3 samples, 0.04%)</title><rect x="91.4010%" y="405" width="0.0439%" height="15" fill="rgb(254,61,31)" fg:x="6250" fg:w="3"/><text x="91.6510%" y="415.50"></text></g><g><title>libsystem_malloc.dylib`szone_size (3 samples, 0.04%)</title><rect x="91.4010%" y="389" width="0.0439%" height="15" fill="rgb(222,173,38)" fg:x="6250" fg:w="3"/><text x="91.6510%" y="399.50"></text></g><g><title>libsystem_malloc.dylib`tiny_size (3 samples, 0.04%)</title><rect x="91.4010%" y="373" width="0.0439%" height="15" fill="rgb(218,50,12)" fg:x="6250" fg:w="3"/><text x="91.6510%" y="383.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_calloc (1 samples, 0.01%)</title><rect x="91.4449%" y="405" width="0.0146%" height="15" fill="rgb(223,88,40)" fg:x="6253" fg:w="1"/><text x="91.6949%" y="415.50"></text></g><g><title>libsystem_malloc.dylib`rack_get_thread_index (2 samples, 0.03%)</title><rect x="91.4887%" y="389" width="0.0292%" height="15" fill="rgb(237,54,19)" fg:x="6256" fg:w="2"/><text x="91.7387%" y="399.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (1 samples, 0.01%)</title><rect x="91.5180%" y="389" width="0.0146%" height="15" fill="rgb(251,129,25)" fg:x="6258" fg:w="1"/><text x="91.7680%" y="399.50"></text></g><g><title>libsystem_malloc.dylib`set_tiny_meta_header_in_use (2 samples, 0.03%)</title><rect x="91.5472%" y="373" width="0.0292%" height="15" fill="rgb(238,97,19)" fg:x="6260" fg:w="2"/><text x="91.7972%" y="383.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (12 samples, 0.18%)</title><rect x="91.4595%" y="405" width="0.1755%" height="15" fill="rgb(240,169,18)" fg:x="6254" fg:w="12"/><text x="91.7095%" y="415.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (7 samples, 0.10%)</title><rect x="91.5326%" y="389" width="0.1024%" height="15" fill="rgb(230,187,49)" fg:x="6259" fg:w="7"/><text x="91.7826%" y="399.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (4 samples, 0.06%)</title><rect x="91.5765%" y="373" width="0.0585%" height="15" fill="rgb(209,44,26)" fg:x="6262" fg:w="4"/><text x="91.8265%" y="383.50"></text></g><g><title>libruby.3.4.dylib`ruby_xcalloc (18 samples, 0.26%)</title><rect x="91.3864%" y="421" width="0.2632%" height="15" fill="rgb(244,0,6)" fg:x="6249" fg:w="18"/><text x="91.6364%" y="431.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (1 samples, 0.01%)</title><rect x="91.6350%" y="405" width="0.0146%" height="15" fill="rgb(248,18,21)" fg:x="6266" fg:w="1"/><text x="91.8850%" y="415.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_calloc (2 samples, 0.03%)</title><rect x="91.6496%" y="421" width="0.0292%" height="15" fill="rgb(245,180,19)" fg:x="6267" fg:w="2"/><text x="91.8996%" y="431.50"></text></g><g><title>libsystem_malloc.dylib`malloc_size (1 samples, 0.01%)</title><rect x="91.6789%" y="421" width="0.0146%" height="15" fill="rgb(252,118,36)" fg:x="6269" fg:w="1"/><text x="91.9289%" y="431.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate_outlined (1 samples, 0.01%)</title><rect x="91.6935%" y="421" width="0.0146%" height="15" fill="rgb(210,224,19)" fg:x="6270" fg:w="1"/><text x="91.9435%" y="431.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_find_block_and_allocate (1 samples, 0.01%)</title><rect x="91.6935%" y="405" width="0.0146%" height="15" fill="rgb(218,30,24)" fg:x="6270" fg:w="1"/><text x="91.9435%" y="415.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_calloc (1 samples, 0.01%)</title><rect x="91.7081%" y="421" width="0.0146%" height="15" fill="rgb(219,75,50)" fg:x="6271" fg:w="1"/><text x="91.9581%" y="431.50"></text></g><g><title>libruby.3.4.dylib`fiber_initialize (38 samples, 0.56%)</title><rect x="91.1816%" y="437" width="0.5557%" height="15" fill="rgb(234,72,50)" fg:x="6235" fg:w="38"/><text x="91.4316%" y="447.50"></text></g><g><title>libsystem_pthread.dylib`pthread_mutex_lock (1 samples, 0.01%)</title><rect x="91.7227%" y="421" width="0.0146%" height="15" fill="rgb(219,100,48)" fg:x="6272" fg:w="1"/><text x="91.9727%" y="431.50"></text></g><g><title>libruby.3.4.dylib`proc_new (4 samples, 0.06%)</title><rect x="91.7374%" y="437" width="0.0585%" height="15" fill="rgb(253,5,41)" fg:x="6273" fg:w="4"/><text x="91.9874%" y="447.50"></text></g><g><title>libdyld.dylib`tlv_get_addr (2 samples, 0.03%)</title><rect x="91.7666%" y="421" width="0.0292%" height="15" fill="rgb(247,181,11)" fg:x="6275" fg:w="2"/><text x="92.0166%" y="431.50"></text></g><g><title>libruby.3.4.dylib`rb_ec_clear_vm_stack (1 samples, 0.01%)</title><rect x="91.7958%" y="437" width="0.0146%" height="15" fill="rgb(222,223,25)" fg:x="6277" fg:w="1"/><text x="92.0458%" y="447.50"></text></g><g><title>libruby.3.4.dylib`rb_keyword_given_p (3 samples, 0.04%)</title><rect x="91.8105%" y="437" width="0.0439%" height="15" fill="rgb(214,198,28)" fg:x="6278" fg:w="3"/><text x="92.0605%" y="447.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_calloc (1 samples, 0.01%)</title><rect x="91.8543%" y="437" width="0.0146%" height="15" fill="rgb(230,46,43)" fg:x="6281" fg:w="1"/><text x="92.1043%" y="447.50"></text></g><g><title>libruby.3.4.dylib`rb_call0 (57 samples, 0.83%)</title><rect x="91.1085%" y="485" width="0.8336%" height="15" fill="rgb(233,65,53)" fg:x="6230" fg:w="57"/><text x="91.3585%" y="495.50"></text></g><g><title>libruby.3.4.dylib`vm_call0_body (55 samples, 0.80%)</title><rect x="91.1378%" y="469" width="0.8043%" height="15" fill="rgb(221,121,27)" fg:x="6232" fg:w="55"/><text x="91.3878%" y="479.50"></text></g><g><title>libruby.3.4.dylib`rb_fiber_initialize (52 samples, 0.76%)</title><rect x="91.1816%" y="453" width="0.7605%" height="15" fill="rgb(247,70,47)" fg:x="6235" fg:w="52"/><text x="91.4316%" y="463.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (5 samples, 0.07%)</title><rect x="91.8690%" y="437" width="0.0731%" height="15" fill="rgb(228,85,35)" fg:x="6282" fg:w="5"/><text x="92.1190%" y="447.50"></text></g><g><title>libruby.3.4.dylib`rb_class_alloc (1 samples, 0.01%)</title><rect x="91.9421%" y="485" width="0.0146%" height="15" fill="rgb(209,50,18)" fg:x="6287" fg:w="1"/><text x="92.1921%" y="495.50"></text></g><g><title>libruby.3.4.dylib`rb_get_alloc_func (1 samples, 0.01%)</title><rect x="91.9421%" y="469" width="0.0146%" height="15" fill="rgb(250,19,35)" fg:x="6287" fg:w="1"/><text x="92.1921%" y="479.50"></text></g><g><title>libruby.3.4.dylib`rb_protect (85 samples, 1.24%)</title><rect x="90.7283%" y="549" width="1.2431%" height="15" fill="rgb(253,107,29)" fg:x="6204" fg:w="85"/><text x="90.9783%" y="559.50"></text></g><g><title>libruby.3.4.dylib`rb_call0 (79 samples, 1.16%)</title><rect x="90.8160%" y="533" width="1.1553%" height="15" fill="rgb(252,179,29)" fg:x="6210" fg:w="79"/><text x="91.0660%" y="543.50"></text></g><g><title>libruby.3.4.dylib`vm_call0_body (73 samples, 1.07%)</title><rect x="90.9038%" y="517" width="1.0676%" height="15" fill="rgb(238,194,6)" fg:x="6216" fg:w="73"/><text x="91.1538%" y="527.50"></text></g><g><title>libruby.3.4.dylib`rb_class_new_instance_pass_kw (71 samples, 1.04%)</title><rect x="90.9330%" y="501" width="1.0383%" height="15" fill="rgb(238,164,29)" fg:x="6218" fg:w="71"/><text x="91.1830%" y="511.50"></text></g><g><title>libruby.3.4.dylib`rb_obj_call_init_kw (1 samples, 0.01%)</title><rect x="91.9567%" y="485" width="0.0146%" height="15" fill="rgb(224,25,9)" fg:x="6288" fg:w="1"/><text x="92.2067%" y="495.50"></text></g><g><title>libdyld.dylib`tlv_get_addr (1 samples, 0.01%)</title><rect x="91.9567%" y="469" width="0.0146%" height="15" fill="rgb(244,153,23)" fg:x="6288" fg:w="1"/><text x="92.2067%" y="479.50"></text></g><g><title>libsystem_malloc.dylib`_free (3 samples, 0.04%)</title><rect x="91.9713%" y="549" width="0.0439%" height="15" fill="rgb(212,203,14)" fg:x="6289" fg:w="3"/><text x="92.2213%" y="559.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (2 samples, 0.03%)</title><rect x="92.0152%" y="549" width="0.0292%" height="15" fill="rgb(220,164,20)" fg:x="6292" fg:w="2"/><text x="92.2652%" y="559.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (3 samples, 0.04%)</title><rect x="92.0445%" y="549" width="0.0439%" height="15" fill="rgb(222,203,48)" fg:x="6294" fg:w="3"/><text x="92.2945%" y="559.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (5 samples, 0.07%)</title><rect x="92.0883%" y="549" width="0.0731%" height="15" fill="rgb(215,159,22)" fg:x="6297" fg:w="5"/><text x="92.3383%" y="559.50"></text></g><g><title>itsi_scheduler.bundle`itsi_scheduler::itsi_scheduler::ItsiScheduler::fiber (1,223 samples, 17.89%)</title><rect x="74.3054%" y="565" width="17.8853%" height="15" fill="rgb(216,183,47)" fg:x="5081" fg:w="1223"/><text x="74.5554%" y="575.50">itsi_scheduler.bundle`itsi_s..</text></g><g><title>libsystem_platform.dylib`_setjmp (2 samples, 0.03%)</title><rect x="92.1615%" y="549" width="0.0292%" height="15" fill="rgb(229,195,25)" fg:x="6302" fg:w="2"/><text x="92.4115%" y="559.50"></text></g><g><title>libdyld.dylib`tlv_get_addr (1 samples, 0.01%)</title><rect x="92.2199%" y="533" width="0.0146%" height="15" fill="rgb(224,132,51)" fg:x="6306" fg:w="1"/><text x="92.4699%" y="543.50"></text></g><g><title>itsi_scheduler.bundle`magnus::typed_data::_&lt;impl magnus::try_convert::TryConvert for &amp;T&gt;::try_convert (5 samples, 0.07%)</title><rect x="92.1907%" y="565" width="0.0731%" height="15" fill="rgb(240,63,7)" fg:x="6304" fg:w="5"/><text x="92.4407%" y="575.50"></text></g><g><title>libruby.3.4.dylib`rb_protect (3 samples, 0.04%)</title><rect x="92.2199%" y="549" width="0.0439%" height="15" fill="rgb(249,182,41)" fg:x="6306" fg:w="3"/><text x="92.4699%" y="559.50"></text></g><g><title>libruby.3.4.dylib`rb_check_typeddata (2 samples, 0.03%)</title><rect x="92.2346%" y="533" width="0.0292%" height="15" fill="rgb(243,47,26)" fg:x="6307" fg:w="2"/><text x="92.4846%" y="543.50"></text></g><g><title>itsi_scheduler.bundle`itsi_scheduler::init::anon (1,240 samples, 18.13%)</title><rect x="74.1737%" y="581" width="18.1340%" height="15" fill="rgb(233,48,2)" fg:x="5072" fg:w="1240"/><text x="74.4237%" y="591.50">itsi_scheduler.bundle`itsi_s..</text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (3 samples, 0.04%)</title><rect x="92.2638%" y="565" width="0.0439%" height="15" fill="rgb(244,165,34)" fg:x="6309" fg:w="3"/><text x="92.5138%" y="575.50"></text></g><g><title>itsi_scheduler.bundle`itsi_scheduler::itsi_scheduler::ItsiScheduler::fiber (2 samples, 0.03%)</title><rect x="92.3077%" y="581" width="0.0292%" height="15" fill="rgb(207,89,7)" fg:x="6312" fg:w="2"/><text x="92.5577%" y="591.50"></text></g><g><title>libruby.3.4.dylib`rb_call0 (1,255 samples, 18.35%)</title><rect x="74.0275%" y="613" width="18.3533%" height="15" fill="rgb(244,117,36)" fg:x="5062" fg:w="1255"/><text x="74.2775%" y="623.50">libruby.3.4.dylib`rb_call0</text></g><g><title>libruby.3.4.dylib`vm_call0_body (1,251 samples, 18.29%)</title><rect x="74.0860%" y="597" width="18.2948%" height="15" fill="rgb(226,144,34)" fg:x="5066" fg:w="1251"/><text x="74.3360%" y="607.50">libruby.3.4.dylib`vm_call0_bo..</text></g><g><title>itsi_scheduler.bundle`magnus::typed_data::_&lt;impl magnus::try_convert::TryConvert for &amp;T&gt;::try_convert (3 samples, 0.04%)</title><rect x="92.3369%" y="581" width="0.0439%" height="15" fill="rgb(213,23,19)" fg:x="6314" fg:w="3"/><text x="92.5869%" y="591.50"></text></g><g><title>libruby.3.4.dylib`rb_fiber_s_schedule (2 samples, 0.03%)</title><rect x="92.3808%" y="613" width="0.0292%" height="15" fill="rgb(217,75,12)" fg:x="6317" fg:w="2"/><text x="92.6308%" y="623.50"></text></g><g><title>libruby.3.4.dylib`rb_keyword_given_p (2 samples, 0.03%)</title><rect x="92.3808%" y="597" width="0.0292%" height="15" fill="rgb(224,159,17)" fg:x="6317" fg:w="2"/><text x="92.6308%" y="607.50"></text></g><g><title>libdyld.dylib`tlv_get_addr (2 samples, 0.03%)</title><rect x="92.3808%" y="581" width="0.0292%" height="15" fill="rgb(217,118,1)" fg:x="6317" fg:w="2"/><text x="92.6308%" y="591.50"></text></g><g><title>libruby.3.4.dylib`rb_vm_exec (1,279 samples, 18.70%)</title><rect x="73.7350%" y="661" width="18.7043%" height="15" fill="rgb(232,180,48)" fg:x="5042" fg:w="1279"/><text x="73.9850%" y="671.50">libruby.3.4.dylib`rb_vm_exec</text></g><g><title>libruby.3.4.dylib`vm_exec_core (1,275 samples, 18.65%)</title><rect x="73.7935%" y="645" width="18.6458%" height="15" fill="rgb(230,27,33)" fg:x="5046" fg:w="1275"/><text x="74.0435%" y="655.50">libruby.3.4.dylib`vm_exec_core</text></g><g><title>libruby.3.4.dylib`vm_call_cfunc_with_frame_ (1,264 samples, 18.48%)</title><rect x="73.9544%" y="629" width="18.4849%" height="15" fill="rgb(205,31,21)" fg:x="5057" fg:w="1264"/><text x="74.2044%" y="639.50">libruby.3.4.dylib`vm_call_cfu..</text></g><g><title>libruby.3.4.dylib`rb_funcall_passing_block_kw (2 samples, 0.03%)</title><rect x="92.4101%" y="613" width="0.0292%" height="15" fill="rgb(253,59,4)" fg:x="6319" fg:w="2"/><text x="92.6601%" y="623.50"></text></g><g><title>libdyld.dylib`tlv_get_addr (1 samples, 0.01%)</title><rect x="92.4247%" y="597" width="0.0146%" height="15" fill="rgb(224,201,9)" fg:x="6320" fg:w="1"/><text x="92.6747%" y="607.50"></text></g><g><title>itsi_scheduler.bundle`&lt;itsi_rb_helpers::heap_fiber::HeapFiber as core::convert::From&lt;magnus::fiber::Fiber&gt;&gt;::from (1 samples, 0.01%)</title><rect x="92.5124%" y="597" width="0.0146%" height="15" fill="rgb(229,206,30)" fg:x="6326" fg:w="1"/><text x="92.7624%" y="607.50"></text></g><g><title>libruby.3.4.dylib`rb_gc_register_address (1 samples, 0.01%)</title><rect x="92.5124%" y="581" width="0.0146%" height="15" fill="rgb(212,67,47)" fg:x="6326" fg:w="1"/><text x="92.7624%" y="591.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (1 samples, 0.01%)</title><rect x="92.5124%" y="565" width="0.0146%" height="15" fill="rgb(211,96,50)" fg:x="6326" fg:w="1"/><text x="92.7624%" y="575.50"></text></g><g><title>itsi_scheduler.bundle`core::hash::BuildHasher::hash_one (1 samples, 0.01%)</title><rect x="92.5271%" y="597" width="0.0146%" height="15" fill="rgb(252,114,18)" fg:x="6327" fg:w="1"/><text x="92.7771%" y="607.50"></text></g><g><title>libdyld.dylib`tlv_get_addr (1 samples, 0.01%)</title><rect x="92.5417%" y="549" width="0.0146%" height="15" fill="rgb(223,58,37)" fg:x="6328" fg:w="1"/><text x="92.7917%" y="559.50"></text></g><g><title>itsi_scheduler.bundle`itsi_scheduler::itsi_scheduler::ItsiScheduler::yield_from (2 samples, 0.03%)</title><rect x="92.5417%" y="597" width="0.0292%" height="15" fill="rgb(237,70,4)" fg:x="6328" fg:w="2"/><text x="92.7917%" y="607.50"></text></g><g><title>libruby.3.4.dylib`rb_protect (2 samples, 0.03%)</title><rect x="92.5417%" y="581" width="0.0292%" height="15" fill="rgb(244,85,46)" fg:x="6328" fg:w="2"/><text x="92.7917%" y="591.50"></text></g><g><title>libruby.3.4.dylib`fiber_switch (2 samples, 0.03%)</title><rect x="92.5417%" y="565" width="0.0292%" height="15" fill="rgb(223,39,52)" fg:x="6328" fg:w="2"/><text x="92.7917%" y="575.50"></text></g><g><title>libruby.3.4.dylib`fiber_setcontext (1 samples, 0.01%)</title><rect x="92.5563%" y="549" width="0.0146%" height="15" fill="rgb(218,200,14)" fg:x="6329" fg:w="1"/><text x="92.8063%" y="559.50"></text></g><g><title>libdyld.dylib`tlv_get_addr (1 samples, 0.01%)</title><rect x="92.5563%" y="533" width="0.0146%" height="15" fill="rgb(208,171,16)" fg:x="6329" fg:w="1"/><text x="92.8063%" y="543.50"></text></g><g><title>libruby.3.4.dylib`rb_gc_unregister_address (4 samples, 0.06%)</title><rect x="92.5709%" y="597" width="0.0585%" height="15" fill="rgb(234,200,18)" fg:x="6330" fg:w="4"/><text x="92.8209%" y="607.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (2 samples, 0.03%)</title><rect x="92.6002%" y="581" width="0.0292%" height="15" fill="rgb(228,45,11)" fg:x="6332" fg:w="2"/><text x="92.8502%" y="591.50"></text></g><g><title>itsi_scheduler.bundle`itsi_scheduler::itsi_scheduler::ItsiScheduler::block_current_fiber (10 samples, 0.15%)</title><rect x="92.4978%" y="613" width="0.1462%" height="15" fill="rgb(237,182,11)" fg:x="6325" fg:w="10"/><text x="92.7478%" y="623.50"></text></g><g><title>libsystem_malloc.dylib`_free (1 samples, 0.01%)</title><rect x="92.6294%" y="597" width="0.0146%" height="15" fill="rgb(241,175,49)" fg:x="6334" fg:w="1"/><text x="92.8794%" y="607.50"></text></g><g><title>itsi_scheduler.bundle`magnus::scan_args::ScannedArgs::required (1 samples, 0.01%)</title><rect x="92.6440%" y="613" width="0.0146%" height="15" fill="rgb(247,38,35)" fg:x="6335" fg:w="1"/><text x="92.8940%" y="623.50"></text></g><g><title>itsi_scheduler.bundle`magnus::scan_args::ScannedArgs::optional (1 samples, 0.01%)</title><rect x="92.6587%" y="597" width="0.0146%" height="15" fill="rgb(228,39,49)" fg:x="6336" fg:w="1"/><text x="92.9087%" y="607.50"></text></g><g><title>itsi_scheduler.bundle`&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.01%)</title><rect x="92.6879%" y="533" width="0.0146%" height="15" fill="rgb(226,101,26)" fg:x="6338" fg:w="1"/><text x="92.9379%" y="543.50"></text></g><g><title>itsi_scheduler.bundle`alloc::raw_vec::RawVecInner&lt;A&gt;::reserve::do_reserve_and_handle (1 samples, 0.01%)</title><rect x="92.6879%" y="517" width="0.0146%" height="15" fill="rgb(206,141,19)" fg:x="6338" fg:w="1"/><text x="92.9379%" y="527.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (1 samples, 0.01%)</title><rect x="92.6879%" y="501" width="0.0146%" height="15" fill="rgb(211,200,13)" fg:x="6338" fg:w="1"/><text x="92.9379%" y="511.50"></text></g><g><title>itsi_scheduler.bundle`&lt;magnus::scan_args::ArgSpec as core::fmt::Display&gt;::fmt (3 samples, 0.04%)</title><rect x="92.6733%" y="581" width="0.0439%" height="15" fill="rgb(241,121,6)" fg:x="6337" fg:w="3"/><text x="92.9233%" y="591.50"></text></g><g><title>itsi_scheduler.bundle`core::fmt::write (3 samples, 0.04%)</title><rect x="92.6733%" y="565" width="0.0439%" height="15" fill="rgb(234,221,29)" fg:x="6337" fg:w="3"/><text x="92.9233%" y="575.50"></text></g><g><title>itsi_scheduler.bundle`core::fmt::num::imp::_&lt;impl core::fmt::Display for u64&gt;::fmt (2 samples, 0.03%)</title><rect x="92.6879%" y="549" width="0.0292%" height="15" fill="rgb(229,136,5)" fg:x="6338" fg:w="2"/><text x="92.9379%" y="559.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (1 samples, 0.01%)</title><rect x="92.7025%" y="533" width="0.0146%" height="15" fill="rgb(238,36,11)" fg:x="6339" fg:w="1"/><text x="92.9525%" y="543.50"></text></g><g><title>itsi_scheduler.bundle`magnus::scan_args::scan_args_untyped (4 samples, 0.06%)</title><rect x="92.6733%" y="597" width="0.0585%" height="15" fill="rgb(251,55,41)" fg:x="6337" fg:w="4"/><text x="92.9233%" y="607.50"></text></g><g><title>itsi_scheduler.bundle`DYLD-STUB$$malloc (1 samples, 0.01%)</title><rect x="92.7172%" y="581" width="0.0146%" height="15" fill="rgb(242,34,40)" fg:x="6340" fg:w="1"/><text x="92.9672%" y="591.50"></text></g><g><title>itsi_scheduler.bundle`itsi_scheduler::init::anon (19 samples, 0.28%)</title><rect x="92.4686%" y="645" width="0.2779%" height="15" fill="rgb(215,42,17)" fg:x="6323" fg:w="19"/><text x="92.7186%" y="655.50"></text></g><g><title>itsi_scheduler.bundle`itsi_scheduler::itsi_scheduler::ItsiScheduler::block (18 samples, 0.26%)</title><rect x="92.4832%" y="629" width="0.2632%" height="15" fill="rgb(207,44,46)" fg:x="6324" fg:w="18"/><text x="92.7332%" y="639.50"></text></g><g><title>itsi_scheduler.bundle`magnus::scan_args::scan_args (6 samples, 0.09%)</title><rect x="92.6587%" y="613" width="0.0877%" height="15" fill="rgb(211,206,28)" fg:x="6336" fg:w="6"/><text x="92.9087%" y="623.50"></text></g><g><title>libsystem_malloc.dylib`_free (1 samples, 0.01%)</title><rect x="92.7318%" y="597" width="0.0146%" height="15" fill="rgb(237,167,16)" fg:x="6341" fg:w="1"/><text x="92.9818%" y="607.50"></text></g><g><title>libruby.3.4.dylib`vm_call_iseq_setup (1 samples, 0.01%)</title><rect x="92.7464%" y="645" width="0.0146%" height="15" fill="rgb(233,66,6)" fg:x="6342" fg:w="1"/><text x="92.9964%" y="655.50"></text></g><g><title>libruby.3.4.dylib`vm_callee_setup_arg (1 samples, 0.01%)</title><rect x="92.7464%" y="629" width="0.0146%" height="15" fill="rgb(246,123,29)" fg:x="6342" fg:w="1"/><text x="92.9964%" y="639.50"></text></g><g><title>libruby.3.4.dylib`vm_call0_body (23 samples, 0.34%)</title><rect x="92.4393%" y="661" width="0.3364%" height="15" fill="rgb(209,62,40)" fg:x="6321" fg:w="23"/><text x="92.6893%" y="671.50"></text></g><g><title>libruby.3.4.dylib`vm_callee_setup_arg (1 samples, 0.01%)</title><rect x="92.7610%" y="645" width="0.0146%" height="15" fill="rgb(218,4,25)" fg:x="6343" fg:w="1"/><text x="93.0110%" y="655.50"></text></g><g><title>libruby.3.4.dylib`rb_call0 (1,311 samples, 19.17%)</title><rect x="73.6180%" y="677" width="19.1723%" height="15" fill="rgb(253,91,49)" fg:x="5034" fg:w="1311"/><text x="73.8680%" y="687.50">libruby.3.4.dylib`rb_call0</text></g><g><title>libsystem_platform.dylib`_setjmp (1 samples, 0.01%)</title><rect x="92.7757%" y="661" width="0.0146%" height="15" fill="rgb(228,155,29)" fg:x="6344" fg:w="1"/><text x="93.0257%" y="671.50"></text></g><g><title>libruby.3.4.dylib`rb_funcallv_kw (3 samples, 0.04%)</title><rect x="92.7903%" y="677" width="0.0439%" height="15" fill="rgb(243,57,37)" fg:x="6345" fg:w="3"/><text x="93.0403%" y="687.50"></text></g><g><title>libruby.3.4.dylib`rb_protect (1,324 samples, 19.36%)</title><rect x="73.4864%" y="693" width="19.3624%" height="15" fill="rgb(244,167,17)" fg:x="5025" fg:w="1324"/><text x="73.7364%" y="703.50">libruby.3.4.dylib`rb_protect</text></g><g><title>libruby.3.4.dylib`rb_vm_exec (1 samples, 0.01%)</title><rect x="92.8342%" y="677" width="0.0146%" height="15" fill="rgb(207,181,38)" fg:x="6348" fg:w="1"/><text x="93.0842%" y="687.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (1 samples, 0.01%)</title><rect x="92.8488%" y="693" width="0.0146%" height="15" fill="rgb(211,8,23)" fg:x="6349" fg:w="1"/><text x="93.0988%" y="703.50"></text></g><g><title>itsi_server.bundle`core::ops::function::impls::_&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once (1,497 samples, 21.89%)</title><rect x="71.0588%" y="709" width="21.8924%" height="15" fill="rgb(235,11,44)" fg:x="4859" fg:w="1497"/><text x="71.3088%" y="719.50">itsi_server.bundle`core::ops::funct..</text></g><g><title>libsystem_platform.dylib`_platform_memmove (6 samples, 0.09%)</title><rect x="92.8634%" y="693" width="0.0877%" height="15" fill="rgb(248,18,52)" fg:x="6350" fg:w="6"/><text x="93.1134%" y="703.50"></text></g><g><title>itsi_server.bundle`parking_lot::raw_mutex::RawMutex::unlock_slow (1 samples, 0.01%)</title><rect x="92.9512%" y="709" width="0.0146%" height="15" fill="rgb(208,4,7)" fg:x="6356" fg:w="1"/><text x="93.2012%" y="719.50"></text></g><g><title>libruby.3.4.dylib`rb_fiber_start (3,360 samples, 49.14%)</title><rect x="44.0041%" y="757" width="49.1372%" height="15" fill="rgb(240,17,39)" fg:x="3009" fg:w="3360"/><text x="44.2541%" y="767.50">libruby.3.4.dylib`rb_fiber_start</text></g><g><title>libruby.3.4.dylib`vm_yield_with_cfunc (1,513 samples, 22.13%)</title><rect x="71.0149%" y="741" width="22.1264%" height="15" fill="rgb(207,170,3)" fg:x="4856" fg:w="1513"/><text x="71.2649%" y="751.50">libruby.3.4.dylib`vm_yield_with_cfu..</text></g><g><title>itsi_server.bundle`magnus::block::_&lt;impl magnus::api::Ruby&gt;::proc_from_fn::call (1,513 samples, 22.13%)</title><rect x="71.0149%" y="725" width="22.1264%" height="15" fill="rgb(236,100,52)" fg:x="4856" fg:w="1513"/><text x="71.2649%" y="735.50">itsi_server.bundle`magnus::block::_..</text></g><g><title>libsystem_platform.dylib`_platform_memmove (12 samples, 0.18%)</title><rect x="92.9658%" y="709" width="0.1755%" height="15" fill="rgb(246,78,51)" fg:x="6357" fg:w="12"/><text x="93.2158%" y="719.50"></text></g><g><title>libruby.3.4.dylib`fiber_entry (3,364 samples, 49.20%)</title><rect x="43.9602%" y="789" width="49.1957%" height="15" fill="rgb(211,17,15)" fg:x="3006" fg:w="3364"/><text x="44.2102%" y="799.50">libruby.3.4.dylib`fiber_entry</text></g><g><title>libruby.3.4.dylib`fiber_pool_expand (3,361 samples, 49.15%)</title><rect x="44.0041%" y="773" width="49.1518%" height="15" fill="rgb(209,59,46)" fg:x="3009" fg:w="3361"/><text x="44.2541%" y="783.50">libruby.3.4.dylib`fiber_pool_expand</text></g><g><title>libsystem_platform.dylib`_setjmp (1 samples, 0.01%)</title><rect x="93.1413%" y="757" width="0.0146%" height="15" fill="rgb(210,92,25)" fg:x="6369" fg:w="1"/><text x="93.3913%" y="767.50"></text></g><g><title>libruby.3.4.dylib`DYLD-STUB$$pthread_mutex_unlock (1 samples, 0.01%)</title><rect x="93.1559%" y="757" width="0.0146%" height="15" fill="rgb(238,174,52)" fg:x="6370" fg:w="1"/><text x="93.4059%" y="767.50"></text></g><g><title>itsi_server.bundle`DYLD-STUB$$memcpy (1 samples, 0.01%)</title><rect x="93.1705%" y="693" width="0.0146%" height="15" fill="rgb(230,73,7)" fg:x="6371" fg:w="1"/><text x="93.4205%" y="703.50"></text></g><g><title>itsi_server.bundle`DYLD-STUB$$memmove (1 samples, 0.01%)</title><rect x="93.1851%" y="693" width="0.0146%" height="15" fill="rgb(243,124,40)" fg:x="6372" fg:w="1"/><text x="93.4351%" y="703.50"></text></g><g><title>itsi_server.bundle`DYLD-STUB$$pthread_mutex_unlock (1 samples, 0.01%)</title><rect x="93.3168%" y="677" width="0.0146%" height="15" fill="rgb(244,170,11)" fg:x="6381" fg:w="1"/><text x="93.5668%" y="687.50"></text></g><g><title>itsi_server.bundle`__rust_realloc (1 samples, 0.01%)</title><rect x="93.3460%" y="661" width="0.0146%" height="15" fill="rgb(207,114,54)" fg:x="6383" fg:w="1"/><text x="93.5960%" y="671.50"></text></g><g><title>libsystem_malloc.dylib`free_small (3 samples, 0.04%)</title><rect x="93.3606%" y="597" width="0.0439%" height="15" fill="rgb(205,42,20)" fg:x="6384" fg:w="3"/><text x="93.6106%" y="607.50"></text></g><g><title>libsystem_malloc.dylib`small_free_list_remove_ptr_no_clear (1 samples, 0.01%)</title><rect x="93.3899%" y="581" width="0.0146%" height="15" fill="rgb(230,30,28)" fg:x="6386" fg:w="1"/><text x="93.6399%" y="591.50"></text></g><g><title>libsystem_malloc.dylib`small_try_realloc_in_place (1 samples, 0.01%)</title><rect x="93.4045%" y="597" width="0.0146%" height="15" fill="rgb(205,73,54)" fg:x="6387" fg:w="1"/><text x="93.6545%" y="607.50"></text></g><g><title>libsystem_malloc.dylib`small_free_list_add_ptr (1 samples, 0.01%)</title><rect x="93.4191%" y="549" width="0.0146%" height="15" fill="rgb(254,227,23)" fg:x="6388" fg:w="1"/><text x="93.6691%" y="559.50"></text></g><g><title>libsystem_malloc.dylib`szone_realloc (6 samples, 0.09%)</title><rect x="93.3606%" y="613" width="0.0877%" height="15" fill="rgb(228,202,34)" fg:x="6384" fg:w="6"/><text x="93.6106%" y="623.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (2 samples, 0.03%)</title><rect x="93.4191%" y="597" width="0.0292%" height="15" fill="rgb(222,225,37)" fg:x="6388" fg:w="2"/><text x="93.6691%" y="607.50"></text></g><g><title>libsystem_malloc.dylib`small_malloc_should_clear (2 samples, 0.03%)</title><rect x="93.4191%" y="581" width="0.0292%" height="15" fill="rgb(221,14,54)" fg:x="6388" fg:w="2"/><text x="93.6691%" y="591.50"></text></g><g><title>libsystem_malloc.dylib`small_malloc_from_free_list (2 samples, 0.03%)</title><rect x="93.4191%" y="565" width="0.0292%" height="15" fill="rgb(254,102,2)" fg:x="6388" fg:w="2"/><text x="93.6691%" y="575.50"></text></g><g><title>libsystem_malloc.dylib`small_free_list_remove_ptr_no_clear (1 samples, 0.01%)</title><rect x="93.4338%" y="549" width="0.0146%" height="15" fill="rgb(232,104,17)" fg:x="6389" fg:w="1"/><text x="93.6838%" y="559.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_realloc (9 samples, 0.13%)</title><rect x="93.3606%" y="629" width="0.1316%" height="15" fill="rgb(250,220,14)" fg:x="6384" fg:w="9"/><text x="93.6106%" y="639.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (3 samples, 0.04%)</title><rect x="93.4484%" y="613" width="0.0439%" height="15" fill="rgb(241,158,9)" fg:x="6390" fg:w="3"/><text x="93.6984%" y="623.50"></text></g><g><title>libsystem_malloc.dylib`_realloc (10 samples, 0.15%)</title><rect x="93.3606%" y="645" width="0.1462%" height="15" fill="rgb(246,9,43)" fg:x="6384" fg:w="10"/><text x="93.6106%" y="655.50"></text></g><g><title>libsystem_malloc.dylib`szone_realloc (1 samples, 0.01%)</title><rect x="93.4922%" y="629" width="0.0146%" height="15" fill="rgb(206,73,33)" fg:x="6393" fg:w="1"/><text x="93.7422%" y="639.50"></text></g><g><title>libsystem_malloc.dylib`small_malloc_from_free_list (1 samples, 0.01%)</title><rect x="93.5069%" y="629" width="0.0146%" height="15" fill="rgb(222,79,8)" fg:x="6394" fg:w="1"/><text x="93.7569%" y="639.50"></text></g><g><title>itsi_server.bundle`alloc::raw_vec::finish_grow (15 samples, 0.22%)</title><rect x="93.3606%" y="661" width="0.2194%" height="15" fill="rgb(234,8,54)" fg:x="6384" fg:w="15"/><text x="93.6106%" y="671.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (5 samples, 0.07%)</title><rect x="93.5069%" y="645" width="0.0731%" height="15" fill="rgb(209,134,38)" fg:x="6394" fg:w="5"/><text x="93.7569%" y="655.50"></text></g><g><title>libsystem_malloc.dylib`small_malloc_should_clear (4 samples, 0.06%)</title><rect x="93.5215%" y="629" width="0.0585%" height="15" fill="rgb(230,127,29)" fg:x="6395" fg:w="4"/><text x="93.7715%" y="639.50"></text></g><g><title>libsystem_malloc.dylib`small_malloc_from_free_list (1 samples, 0.01%)</title><rect x="93.5654%" y="613" width="0.0146%" height="15" fill="rgb(242,44,41)" fg:x="6398" fg:w="1"/><text x="93.8154%" y="623.50"></text></g><g><title>itsi_server.bundle`alloc::raw_vec::RawVec&lt;T,A&gt;::grow_one (18 samples, 0.26%)</title><rect x="93.3314%" y="677" width="0.2632%" height="15" fill="rgb(222,56,43)" fg:x="6382" fg:w="18"/><text x="93.5814%" y="687.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (1 samples, 0.01%)</title><rect x="93.5800%" y="661" width="0.0146%" height="15" fill="rgb(238,39,47)" fg:x="6399" fg:w="1"/><text x="93.8300%" y="671.50"></text></g><g><title>itsi_server.bundle`concurrent_queue::bounded::Bounded&lt;T&gt;::pop (4 samples, 0.06%)</title><rect x="93.5946%" y="677" width="0.0585%" height="15" fill="rgb(226,79,43)" fg:x="6400" fg:w="4"/><text x="93.8446%" y="687.50"></text></g><g><title>itsi_server.bundle`event_listener::Task::wake (1 samples, 0.01%)</title><rect x="93.6531%" y="677" width="0.0146%" height="15" fill="rgb(242,105,53)" fg:x="6404" fg:w="1"/><text x="93.9031%" y="687.50"></text></g><g><title>itsi_server.bundle`event_listener::sys::_&lt;impl event_listener::Inner&lt;T&gt;&gt;::with_inner (2 samples, 0.03%)</title><rect x="93.6677%" y="645" width="0.0292%" height="15" fill="rgb(251,132,46)" fg:x="6405" fg:w="2"/><text x="93.9177%" y="655.50"></text></g><g><title>itsi_server.bundle`std::sys::pal::unix::sync::mutex::Mutex::unlock (1 samples, 0.01%)</title><rect x="93.6824%" y="629" width="0.0146%" height="15" fill="rgb(231,77,14)" fg:x="6406" fg:w="1"/><text x="93.9324%" y="639.50"></text></g><g><title>itsi_server.bundle`parking::Inner::park (15 samples, 0.22%)</title><rect x="93.6970%" y="645" width="0.2194%" height="15" fill="rgb(240,135,9)" fg:x="6407" fg:w="15"/><text x="93.9470%" y="655.50"></text></g><g><title>libsystem_kernel.dylib`__psynch_cvwait (13 samples, 0.19%)</title><rect x="93.7262%" y="629" width="0.1901%" height="15" fill="rgb(248,109,14)" fg:x="6409" fg:w="13"/><text x="93.9762%" y="639.50"></text></g><g><title>itsi_server.bundle`&lt;event_listener::EventListener&lt;T&gt; as event_listener::Listener&lt;T&gt;&gt;::wait (18 samples, 0.26%)</title><rect x="93.6677%" y="661" width="0.2632%" height="15" fill="rgb(227,146,52)" fg:x="6405" fg:w="18"/><text x="93.9177%" y="671.50"></text></g><g><title>libsystem_pthread.dylib`pthread_cond_wait (1 samples, 0.01%)</title><rect x="93.9163%" y="645" width="0.0146%" height="15" fill="rgb(232,54,3)" fg:x="6422" fg:w="1"/><text x="94.1663%" y="655.50"></text></g><g><title>itsi_server.bundle`event_listener::sys::Inner&lt;T&gt;::notify (13 samples, 0.19%)</title><rect x="93.9310%" y="645" width="0.1901%" height="15" fill="rgb(229,201,43)" fg:x="6423" fg:w="13"/><text x="94.1810%" y="655.50"></text></g><g><title>itsi_server.bundle`tokio::runtime::task::waker::wake_by_val (12 samples, 0.18%)</title><rect x="93.9456%" y="629" width="0.1755%" height="15" fill="rgb(252,161,33)" fg:x="6424" fg:w="12"/><text x="94.1956%" y="639.50"></text></g><g><title>itsi_server.bundle`tokio::runtime::context::with_scheduler (12 samples, 0.18%)</title><rect x="93.9456%" y="613" width="0.1755%" height="15" fill="rgb(226,146,40)" fg:x="6424" fg:w="12"/><text x="94.1956%" y="623.50"></text></g><g><title>itsi_server.bundle`tokio::runtime::driver::Handle::unpark (12 samples, 0.18%)</title><rect x="93.9456%" y="597" width="0.1755%" height="15" fill="rgb(219,47,25)" fg:x="6424" fg:w="12"/><text x="94.1956%" y="607.50"></text></g><g><title>libsystem_kernel.dylib`kevent (12 samples, 0.18%)</title><rect x="93.9456%" y="581" width="0.1755%" height="15" fill="rgb(250,135,13)" fg:x="6424" fg:w="12"/><text x="94.1956%" y="591.50"></text></g><g><title>itsi_server.bundle`event_listener_strategy::EventListenerFuture::wait (36 samples, 0.53%)</title><rect x="93.6677%" y="677" width="0.5265%" height="15" fill="rgb(219,229,18)" fg:x="6405" fg:w="36"/><text x="93.9177%" y="687.50"></text></g><g><title>itsi_server.bundle`event_listener::sys::_&lt;impl event_listener::Inner&lt;T&gt;&gt;::notify (18 samples, 0.26%)</title><rect x="93.9310%" y="661" width="0.2632%" height="15" fill="rgb(217,152,27)" fg:x="6423" fg:w="18"/><text x="94.1810%" y="671.50"></text></g><g><title>libsystem_pthread.dylib`_pthread_mutex_firstfit_unlock_slow (5 samples, 0.07%)</title><rect x="94.1211%" y="645" width="0.0731%" height="15" fill="rgb(225,71,47)" fg:x="6436" fg:w="5"/><text x="94.3711%" y="655.50"></text></g><g><title>libsystem_kernel.dylib`__psynch_mutexdrop (5 samples, 0.07%)</title><rect x="94.1211%" y="629" width="0.0731%" height="15" fill="rgb(220,139,14)" fg:x="6436" fg:w="5"/><text x="94.3711%" y="639.50"></text></g><g><title>libsystem_kernel.dylib`__psynch_cvwait (22 samples, 0.32%)</title><rect x="94.2527%" y="661" width="0.3217%" height="15" fill="rgb(247,54,32)" fg:x="6445" fg:w="22"/><text x="94.5027%" y="671.50"></text></g><g><title>libsystem_kernel.dylib`swtch_pri (38 samples, 0.56%)</title><rect x="94.5744%" y="661" width="0.5557%" height="15" fill="rgb(252,131,39)" fg:x="6467" fg:w="38"/><text x="94.8244%" y="671.50"></text></g><g><title>itsi_server.bundle`parking_lot::raw_mutex::RawMutex::lock_slow (65 samples, 0.95%)</title><rect x="94.1942%" y="677" width="0.9506%" height="15" fill="rgb(210,108,39)" fg:x="6441" fg:w="65"/><text x="94.4442%" y="687.50"></text></g><g><title>libsystem_pthread.dylib`cthread_yield (1 samples, 0.01%)</title><rect x="95.1302%" y="661" width="0.0146%" height="15" fill="rgb(205,23,29)" fg:x="6505" fg:w="1"/><text x="95.3802%" y="671.50"></text></g><g><title>itsi_server.bundle`parking_lot::raw_mutex::RawMutex::unlock_slow (1 samples, 0.01%)</title><rect x="95.1448%" y="677" width="0.0146%" height="15" fill="rgb(246,139,46)" fg:x="6506" fg:w="1"/><text x="95.3948%" y="687.50"></text></g><g><title>libsystem_kernel.dylib`__psynch_cvsignal (1 samples, 0.01%)</title><rect x="95.1448%" y="661" width="0.0146%" height="15" fill="rgb(250,81,26)" fg:x="6506" fg:w="1"/><text x="95.3948%" y="671.50"></text></g><g><title>itsi_server.bundle`std::sys::pal::unix::sync::mutex::Mutex::lock (6 samples, 0.09%)</title><rect x="95.1594%" y="677" width="0.0877%" height="15" fill="rgb(214,104,7)" fg:x="6507" fg:w="6"/><text x="95.4094%" y="687.50"></text></g><g><title>libsystem_pthread.dylib`_pthread_mutex_firstfit_lock_slow (6 samples, 0.09%)</title><rect x="95.1594%" y="661" width="0.0877%" height="15" fill="rgb(233,189,8)" fg:x="6507" fg:w="6"/><text x="95.4094%" y="671.50"></text></g><g><title>libsystem_kernel.dylib`__psynch_mutexwait (6 samples, 0.09%)</title><rect x="95.1594%" y="645" width="0.0877%" height="15" fill="rgb(228,141,17)" fg:x="6507" fg:w="6"/><text x="95.4094%" y="655.50"></text></g><g><title>itsi_server.bundle`tokio::runtime::driver::Handle::unpark (71 samples, 1.04%)</title><rect x="95.2764%" y="645" width="1.0383%" height="15" fill="rgb(247,157,1)" fg:x="6515" fg:w="71"/><text x="95.5264%" y="655.50"></text></g><g><title>libsystem_kernel.dylib`kevent (71 samples, 1.04%)</title><rect x="95.2764%" y="629" width="1.0383%" height="15" fill="rgb(249,225,5)" fg:x="6515" fg:w="71"/><text x="95.5264%" y="639.50"></text></g><g><title>itsi_server.bundle`tokio::runtime::task::waker::wake_by_val (75 samples, 1.10%)</title><rect x="95.2471%" y="677" width="1.0968%" height="15" fill="rgb(242,55,13)" fg:x="6513" fg:w="75"/><text x="95.4971%" y="687.50"></text></g><g><title>itsi_server.bundle`tokio::runtime::context::with_scheduler (75 samples, 1.10%)</title><rect x="95.2471%" y="661" width="1.0968%" height="15" fill="rgb(230,49,50)" fg:x="6513" fg:w="75"/><text x="95.4971%" y="671.50"></text></g><g><title>itsi_server.bundle`tokio::runtime::scheduler::inject::Inject&lt;T&gt;::push (2 samples, 0.03%)</title><rect x="96.3147%" y="645" width="0.0292%" height="15" fill="rgb(241,111,38)" fg:x="6586" fg:w="2"/><text x="96.5647%" y="655.50"></text></g><g><title>itsi_server.bundle`parking_lot::raw_mutex::RawMutex::lock_slow (1 samples, 0.01%)</title><rect x="96.3293%" y="629" width="0.0146%" height="15" fill="rgb(252,155,4)" fg:x="6587" fg:w="1"/><text x="96.5793%" y="639.50"></text></g><g><title>libsystem_kernel.dylib`swtch_pri (1 samples, 0.01%)</title><rect x="96.3293%" y="613" width="0.0146%" height="15" fill="rgb(212,69,32)" fg:x="6587" fg:w="1"/><text x="96.5793%" y="623.50"></text></g><g><title>libruby.3.4.dylib`rb_str_hash (1 samples, 0.01%)</title><rect x="96.3586%" y="597" width="0.0146%" height="15" fill="rgb(243,107,47)" fg:x="6589" fg:w="1"/><text x="96.6086%" y="607.50"></text></g><g><title>libruby.3.4.dylib`lookup_str_sym_with_lock (4 samples, 0.06%)</title><rect x="96.3440%" y="629" width="0.0585%" height="15" fill="rgb(247,130,12)" fg:x="6588" fg:w="4"/><text x="96.5940%" y="639.50"></text></g><g><title>libruby.3.4.dylib`rb_st_lookup (4 samples, 0.06%)</title><rect x="96.3440%" y="613" width="0.0585%" height="15" fill="rgb(233,74,16)" fg:x="6588" fg:w="4"/><text x="96.5940%" y="623.50"></text></g><g><title>libruby.3.4.dylib`rb_str_hash_cmp (2 samples, 0.03%)</title><rect x="96.3732%" y="597" width="0.0292%" height="15" fill="rgb(208,58,18)" fg:x="6590" fg:w="2"/><text x="96.6232%" y="607.50"></text></g><g><title>libruby.3.4.dylib`rb_str_comparable (1 samples, 0.01%)</title><rect x="96.3878%" y="581" width="0.0146%" height="15" fill="rgb(242,225,1)" fg:x="6591" fg:w="1"/><text x="96.6378%" y="591.50"></text></g><g><title>libruby.3.4.dylib`rb_intern3 (5 samples, 0.07%)</title><rect x="96.3440%" y="645" width="0.0731%" height="15" fill="rgb(249,39,40)" fg:x="6588" fg:w="5"/><text x="96.5940%" y="655.50"></text></g><g><title>libruby.3.4.dylib`rb_obj_freeze_inline (1 samples, 0.01%)</title><rect x="96.4025%" y="629" width="0.0146%" height="15" fill="rgb(207,72,44)" fg:x="6592" fg:w="1"/><text x="96.6525%" y="639.50"></text></g><g><title>itsi_scheduler.bundle`&lt;itsi_rb_helpers::heap_fiber::HeapFiber as core::convert::From&lt;magnus::fiber::Fiber&gt;&gt;::from (1 samples, 0.01%)</title><rect x="96.4171%" y="565" width="0.0146%" height="15" fill="rgb(215,193,12)" fg:x="6593" fg:w="1"/><text x="96.6671%" y="575.50"></text></g><g><title>libruby.3.4.dylib`rb_gc_impl_malloc (1 samples, 0.01%)</title><rect x="96.4171%" y="549" width="0.0146%" height="15" fill="rgb(248,41,39)" fg:x="6593" fg:w="1"/><text x="96.6671%" y="559.50"></text></g><g><title>itsi_scheduler.bundle`mio::waker::Waker::wake (1 samples, 0.01%)</title><rect x="96.4317%" y="565" width="0.0146%" height="15" fill="rgb(253,85,4)" fg:x="6594" fg:w="1"/><text x="96.6817%" y="575.50"></text></g><g><title>itsi_scheduler.bundle`itsi_scheduler::itsi_scheduler::ItsiScheduler::unblock (25 samples, 0.37%)</title><rect x="96.4171%" y="581" width="0.3656%" height="15" fill="rgb(243,70,31)" fg:x="6593" fg:w="25"/><text x="96.6671%" y="591.50"></text></g><g><title>libsystem_kernel.dylib`kevent (23 samples, 0.34%)</title><rect x="96.4463%" y="565" width="0.3364%" height="15" fill="rgb(253,195,26)" fg:x="6595" fg:w="23"/><text x="96.6963%" y="575.50"></text></g><g><title>itsi_scheduler.bundle`magnus::typed_data::_&lt;impl magnus::try_convert::TryConvert for &amp;T&gt;::try_convert (1 samples, 0.01%)</title><rect x="96.7827%" y="581" width="0.0146%" height="15" fill="rgb(243,42,11)" fg:x="6618" fg:w="1"/><text x="97.0327%" y="591.50"></text></g><g><title>itsi_scheduler.bundle`magnus::error::protect::call (1 samples, 0.01%)</title><rect x="96.7827%" y="565" width="0.0146%" height="15" fill="rgb(239,66,17)" fg:x="6618" fg:w="1"/><text x="97.0327%" y="575.50"></text></g><g><title>libruby.3.4.dylib`rb_call0 (27 samples, 0.39%)</title><rect x="96.4171%" y="629" width="0.3949%" height="15" fill="rgb(217,132,21)" fg:x="6593" fg:w="27"/><text x="96.6671%" y="639.50"></text></g><g><title>libruby.3.4.dylib`vm_call0_body (27 samples, 0.39%)</title><rect x="96.4171%" y="613" width="0.3949%" height="15" fill="rgb(252,202,21)" fg:x="6593" fg:w="27"/><text x="96.6671%" y="623.50"></text></g><g><title>itsi_scheduler.bundle`itsi_scheduler::init::anon (27 samples, 0.39%)</title><rect x="96.4171%" y="597" width="0.3949%" height="15" fill="rgb(233,98,36)" fg:x="6593" fg:w="27"/><text x="96.6671%" y="607.50"></text></g><g><title>libruby.3.4.dylib`rb_obj_is_fiber (1 samples, 0.01%)</title><rect x="96.7973%" y="581" width="0.0146%" height="15" fill="rgb(216,153,54)" fg:x="6619" fg:w="1"/><text x="97.0473%" y="591.50"></text></g><g><title>libruby.3.4.dylib`rb_funcallv_kw (1 samples, 0.01%)</title><rect x="96.8119%" y="629" width="0.0146%" height="15" fill="rgb(250,99,7)" fg:x="6620" fg:w="1"/><text x="97.0619%" y="639.50"></text></g><g><title>libdyld.dylib`tlv_get_addr (1 samples, 0.01%)</title><rect x="96.8119%" y="613" width="0.0146%" height="15" fill="rgb(207,56,50)" fg:x="6620" fg:w="1"/><text x="97.0619%" y="623.50"></text></g><g><title>itsi_server.bundle`itsi_rb_helpers::call_with_gvl::trampoline (34 samples, 0.50%)</title><rect x="96.3440%" y="661" width="0.4972%" height="15" fill="rgb(244,61,34)" fg:x="6588" fg:w="34"/><text x="96.5940%" y="671.50"></text></g><g><title>libruby.3.4.dylib`rb_protect (29 samples, 0.42%)</title><rect x="96.4171%" y="645" width="0.4241%" height="15" fill="rgb(241,50,38)" fg:x="6593" fg:w="29"/><text x="96.6671%" y="655.50"></text></g><g><title>libruby.3.4.dylib`vm_call0_body (1 samples, 0.01%)</title><rect x="96.8266%" y="629" width="0.0146%" height="15" fill="rgb(212,166,30)" fg:x="6621" fg:w="1"/><text x="97.0766%" y="639.50"></text></g><g><title>itsi_server.bundle`magnus::api::Ruby::get (1 samples, 0.01%)</title><rect x="96.8412%" y="661" width="0.0146%" height="15" fill="rgb(249,127,32)" fg:x="6622" fg:w="1"/><text x="97.0912%" y="671.50"></text></g><g><title>libruby.3.4.dylib`thread_sched_wait_running_turn (16 samples, 0.23%)</title><rect x="96.8704%" y="629" width="0.2340%" height="15" fill="rgb(209,103,0)" fg:x="6624" fg:w="16"/><text x="97.1204%" y="639.50"></text></g><g><title>libsystem_kernel.dylib`__psynch_cvwait (16 samples, 0.23%)</title><rect x="96.8704%" y="613" width="0.2340%" height="15" fill="rgb(238,209,51)" fg:x="6624" fg:w="16"/><text x="97.1204%" y="623.50"></text></g><g><title>libsystem_kernel.dylib`write (2 samples, 0.03%)</title><rect x="97.1044%" y="629" width="0.0292%" height="15" fill="rgb(237,56,23)" fg:x="6640" fg:w="2"/><text x="97.3544%" y="639.50"></text></g><g><title>libsystem_pthread.dylib`_pthread_cond_wait (1 samples, 0.01%)</title><rect x="97.1337%" y="629" width="0.0146%" height="15" fill="rgb(215,153,46)" fg:x="6642" fg:w="1"/><text x="97.3837%" y="639.50"></text></g><g><title>libruby.3.4.dylib`blocking_region_end (22 samples, 0.32%)</title><rect x="96.8558%" y="661" width="0.3217%" height="15" fill="rgb(224,49,31)" fg:x="6623" fg:w="22"/><text x="97.1058%" y="671.50"></text></g><g><title>libruby.3.4.dylib`thread_sched_to_running (22 samples, 0.32%)</title><rect x="96.8558%" y="645" width="0.3217%" height="15" fill="rgb(250,18,42)" fg:x="6623" fg:w="22"/><text x="97.1058%" y="655.50"></text></g><g><title>libsystem_pthread.dylib`_pthread_mutex_firstfit_lock_slow (2 samples, 0.03%)</title><rect x="97.1483%" y="629" width="0.0292%" height="15" fill="rgb(215,176,39)" fg:x="6643" fg:w="2"/><text x="97.3983%" y="639.50"></text></g><g><title>libsystem_kernel.dylib`__psynch_mutexwait (2 samples, 0.03%)</title><rect x="97.1483%" y="613" width="0.0292%" height="15" fill="rgb(223,77,29)" fg:x="6643" fg:w="2"/><text x="97.3983%" y="623.50"></text></g><g><title>libruby.3.4.dylib`thread_sched_setup_running_threads (1 samples, 0.01%)</title><rect x="97.1775%" y="661" width="0.0146%" height="15" fill="rgb(234,94,52)" fg:x="6645" fg:w="1"/><text x="97.4275%" y="671.50"></text></g><g><title>libsystem_pthread.dylib`pthread_mutex_unlock (1 samples, 0.01%)</title><rect x="97.1775%" y="645" width="0.0146%" height="15" fill="rgb(220,154,50)" fg:x="6645" fg:w="1"/><text x="97.4275%" y="655.50"></text></g><g><title>libruby.3.4.dylib`thread_sched_to_running (1 samples, 0.01%)</title><rect x="97.1922%" y="661" width="0.0146%" height="15" fill="rgb(212,11,10)" fg:x="6646" fg:w="1"/><text x="97.4422%" y="671.50"></text></g><g><title>libruby.3.4.dylib`rb_thread_call_with_gvl (63 samples, 0.92%)</title><rect x="96.3440%" y="677" width="0.9213%" height="15" fill="rgb(205,166,19)" fg:x="6588" fg:w="63"/><text x="96.5940%" y="687.50"></text></g><g><title>libruby.3.4.dylib`thread_sched_to_waiting_common0 (4 samples, 0.06%)</title><rect x="97.2068%" y="661" width="0.0585%" height="15" fill="rgb(244,198,16)" fg:x="6647" fg:w="4"/><text x="97.4568%" y="671.50"></text></g><g><title>libruby.3.4.dylib`thread_sched_wakeup_running_thread (4 samples, 0.06%)</title><rect x="97.2068%" y="645" width="0.0585%" height="15" fill="rgb(219,69,12)" fg:x="6647" fg:w="4"/><text x="97.4568%" y="655.50"></text></g><g><title>libsystem_kernel.dylib`__psynch_cvsignal (4 samples, 0.06%)</title><rect x="97.2068%" y="629" width="0.0585%" height="15" fill="rgb(245,30,7)" fg:x="6647" fg:w="4"/><text x="97.4568%" y="639.50"></text></g><g><title>libsystem_kernel.dylib`sigprocmask (6 samples, 0.09%)</title><rect x="97.2653%" y="677" width="0.0877%" height="15" fill="rgb(218,221,48)" fg:x="6651" fg:w="6"/><text x="97.5153%" y="687.50"></text></g><g><title>libsystem_malloc.dylib`_szone_free (1 samples, 0.01%)</title><rect x="97.3530%" y="677" width="0.0146%" height="15" fill="rgb(216,66,15)" fg:x="6657" fg:w="1"/><text x="97.6030%" y="687.50"></text></g><g><title>libsystem_malloc.dylib`free_small (3 samples, 0.04%)</title><rect x="97.3677%" y="677" width="0.0439%" height="15" fill="rgb(226,122,50)" fg:x="6658" fg:w="3"/><text x="97.6177%" y="687.50"></text></g><g><title>libsystem_malloc.dylib`small_free_list_remove_ptr_no_clear (1 samples, 0.01%)</title><rect x="97.3969%" y="661" width="0.0146%" height="15" fill="rgb(239,156,16)" fg:x="6660" fg:w="1"/><text x="97.6469%" y="671.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (10 samples, 0.15%)</title><rect x="97.4115%" y="677" width="0.1462%" height="15" fill="rgb(224,27,38)" fg:x="6661" fg:w="10"/><text x="97.6615%" y="687.50"></text></g><g><title>libsystem_pthread.dylib`_pthread_mutex_firstfit_unlock_slow (21 samples, 0.31%)</title><rect x="97.5578%" y="677" width="0.3071%" height="15" fill="rgb(224,39,27)" fg:x="6671" fg:w="21"/><text x="97.8078%" y="687.50"></text></g><g><title>libsystem_kernel.dylib`__psynch_mutexdrop (21 samples, 0.31%)</title><rect x="97.5578%" y="661" width="0.3071%" height="15" fill="rgb(215,92,29)" fg:x="6671" fg:w="21"/><text x="97.8078%" y="671.50"></text></g><g><title>libsystem_pthread.dylib`pthread_mutex_lock (1 samples, 0.01%)</title><rect x="97.8649%" y="677" width="0.0146%" height="15" fill="rgb(207,159,16)" fg:x="6692" fg:w="1"/><text x="98.1149%" y="687.50"></text></g><g><title>itsi_server.bundle`itsi_rb_helpers::call_without_gvl::trampoline (321 samples, 4.69%)</title><rect x="93.1998%" y="693" width="4.6944%" height="15" fill="rgb(238,163,47)" fg:x="6373" fg:w="321"/><text x="93.4498%" y="703.50">itsi_..</text></g><g><title>libsystem_pthread.dylib`pthread_mutex_unlock (1 samples, 0.01%)</title><rect x="97.8795%" y="677" width="0.0146%" height="15" fill="rgb(219,91,49)" fg:x="6693" fg:w="1"/><text x="98.1295%" y="687.50"></text></g><g><title>itsi_server.bundle`tokio::runtime::task::waker::wake_by_val (1 samples, 0.01%)</title><rect x="97.8941%" y="693" width="0.0146%" height="15" fill="rgb(227,167,31)" fg:x="6694" fg:w="1"/><text x="98.1441%" y="703.50"></text></g><g><title>itsi_server.bundle`itsi_rb_helpers::create_ruby_thread::trampoline (331 samples, 4.84%)</title><rect x="93.1705%" y="725" width="4.8406%" height="15" fill="rgb(234,80,54)" fg:x="6371" fg:w="331"/><text x="93.4205%" y="735.50">itsi_s..</text></g><g><title>libruby.3.4.dylib`rb_nogvl (331 samples, 4.84%)</title><rect x="93.1705%" y="709" width="4.8406%" height="15" fill="rgb(212,114,2)" fg:x="6371" fg:w="331"/><text x="93.4205%" y="719.50">librub..</text></g><g><title>libsystem_platform.dylib`_platform_memmove (7 samples, 0.10%)</title><rect x="97.9087%" y="693" width="0.1024%" height="15" fill="rgb(234,50,24)" fg:x="6695" fg:w="7"/><text x="98.1587%" y="703.50"></text></g><g><title>itsi_scheduler.bundle`&lt;mio::event::events::Iter as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.01%)</title><rect x="98.0257%" y="565" width="0.0146%" height="15" fill="rgb(221,68,8)" fg:x="6703" fg:w="1"/><text x="98.2757%" y="575.50"></text></g><g><title>itsi_scheduler.bundle`itsi_scheduler::itsi_scheduler::ItsiScheduler::drain_queue (1 samples, 0.01%)</title><rect x="98.0404%" y="565" width="0.0146%" height="15" fill="rgb(254,180,31)" fg:x="6704" fg:w="1"/><text x="98.2904%" y="575.50"></text></g><g><title>itsi_scheduler.bundle`&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (4 samples, 0.06%)</title><rect x="98.0696%" y="549" width="0.0585%" height="15" fill="rgb(247,130,50)" fg:x="6706" fg:w="4"/><text x="98.3196%" y="559.50"></text></g><g><title>itsi_scheduler.bundle`&lt;core::iter::adapters::flatten::Flatten&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (4 samples, 0.06%)</title><rect x="98.0696%" y="533" width="0.0585%" height="15" fill="rgb(211,109,4)" fg:x="6706" fg:w="4"/><text x="98.3196%" y="543.50"></text></g><g><title>itsi_scheduler.bundle`__rdl_dealloc (1 samples, 0.01%)</title><rect x="98.1135%" y="517" width="0.0146%" height="15" fill="rgb(238,50,21)" fg:x="6709" fg:w="1"/><text x="98.3635%" y="527.50"></text></g><g><title>itsi_scheduler.bundle`&lt;alloc::collections::vec_deque::drain::Drain&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.01%)</title><rect x="98.1281%" y="517" width="0.0146%" height="15" fill="rgb(225,57,45)" fg:x="6710" fg:w="1"/><text x="98.3781%" y="527.50"></text></g><g><title>itsi_scheduler.bundle`__rdl_dealloc (1 samples, 0.01%)</title><rect x="98.1427%" y="517" width="0.0146%" height="15" fill="rgb(209,196,50)" fg:x="6711" fg:w="1"/><text x="98.3927%" y="527.50"></text></g><g><title>itsi_scheduler.bundle`__rust_dealloc (1 samples, 0.01%)</title><rect x="98.1574%" y="517" width="0.0146%" height="15" fill="rgb(242,140,13)" fg:x="6712" fg:w="1"/><text x="98.4074%" y="527.50"></text></g><g><title>itsi_scheduler.bundle`magnus::fiber::Fiber::is_alive (1 samples, 0.01%)</title><rect x="98.1720%" y="501" width="0.0146%" height="15" fill="rgb(217,111,7)" fg:x="6713" fg:w="1"/><text x="98.4220%" y="511.50"></text></g><g><title>libruby.3.4.dylib`rb_check_typeddata (1 samples, 0.01%)</title><rect x="98.1720%" y="485" width="0.0146%" height="15" fill="rgb(253,193,51)" fg:x="6713" fg:w="1"/><text x="98.4220%" y="495.50"></text></g><g><title>libruby.3.4.dylib`rb_fiber_alive_p (1 samples, 0.01%)</title><rect x="98.1866%" y="501" width="0.0146%" height="15" fill="rgb(252,70,29)" fg:x="6714" fg:w="1"/><text x="98.4366%" y="511.50"></text></g><g><title>itsi_scheduler.bundle`&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (6 samples, 0.09%)</title><rect x="98.1281%" y="533" width="0.0877%" height="15" fill="rgb(232,127,12)" fg:x="6710" fg:w="6"/><text x="98.3781%" y="543.50"></text></g><g><title>itsi_scheduler.bundle`core::ops::function::impls::_&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (3 samples, 0.04%)</title><rect x="98.1720%" y="517" width="0.0439%" height="15" fill="rgb(211,180,21)" fg:x="6713" fg:w="3"/><text x="98.4220%" y="527.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (1 samples, 0.01%)</title><rect x="98.2012%" y="501" width="0.0146%" height="15" fill="rgb(229,72,13)" fg:x="6715" fg:w="1"/><text x="98.4512%" y="511.50"></text></g><g><title>itsi_scheduler.bundle`core::ops::function::impls::_&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (2 samples, 0.03%)</title><rect x="98.2159%" y="533" width="0.0292%" height="15" fill="rgb(240,211,49)" fg:x="6716" fg:w="2"/><text x="98.4659%" y="543.50"></text></g><g><title>itsi_scheduler.bundle`itsi_scheduler::itsi_scheduler::ItsiScheduler::drain_queue (9 samples, 0.13%)</title><rect x="98.1281%" y="549" width="0.1316%" height="15" fill="rgb(219,149,40)" fg:x="6710" fg:w="9"/><text x="98.3781%" y="559.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (1 samples, 0.01%)</title><rect x="98.2451%" y="533" width="0.0146%" height="15" fill="rgb(210,127,46)" fg:x="6718" fg:w="1"/><text x="98.4951%" y="543.50"></text></g><g><title>itsi_scheduler.bundle`itsi_scheduler::itsi_scheduler::ItsiScheduler::tick (55 samples, 0.80%)</title><rect x="98.0550%" y="565" width="0.8043%" height="15" fill="rgb(220,106,7)" fg:x="6705" fg:w="55"/><text x="98.3050%" y="575.50"></text></g><g><title>libsystem_kernel.dylib`kevent (41 samples, 0.60%)</title><rect x="98.2597%" y="549" width="0.5996%" height="15" fill="rgb(249,31,22)" fg:x="6719" fg:w="41"/><text x="98.5097%" y="559.50"></text></g><g><title>libruby.3.4.dylib`blocking_region_begin (1 samples, 0.01%)</title><rect x="98.8593%" y="565" width="0.0146%" height="15" fill="rgb(253,1,49)" fg:x="6760" fg:w="1"/><text x="99.1093%" y="575.50"></text></g><g><title>libruby.3.4.dylib`rb_gc_unregister_address (1 samples, 0.01%)</title><rect x="98.8739%" y="565" width="0.0146%" height="15" fill="rgb(227,144,33)" fg:x="6761" fg:w="1"/><text x="99.1239%" y="575.50"></text></g><g><title>libsystem_malloc.dylib`malloc_size (1 samples, 0.01%)</title><rect x="98.8739%" y="549" width="0.0146%" height="15" fill="rgb(249,163,44)" fg:x="6761" fg:w="1"/><text x="99.1239%" y="559.50"></text></g><g><title>itsi_scheduler.bundle`DYLD-STUB$$rb_fiber_alive_p (1 samples, 0.01%)</title><rect x="98.9178%" y="517" width="0.0146%" height="15" fill="rgb(234,15,39)" fg:x="6764" fg:w="1"/><text x="99.1678%" y="527.50"></text></g><g><title>libruby.3.4.dylib`fiber_resume_kw (1 samples, 0.01%)</title><rect x="98.9324%" y="501" width="0.0146%" height="15" fill="rgb(207,66,16)" fg:x="6765" fg:w="1"/><text x="99.1824%" y="511.50"></text></g><g><title>libdyld.dylib`tlv_get_addr (1 samples, 0.01%)</title><rect x="98.9324%" y="485" width="0.0146%" height="15" fill="rgb(233,112,24)" fg:x="6765" fg:w="1"/><text x="99.1824%" y="495.50"></text></g><g><title>itsi_scheduler.bundle`itsi_scheduler::itsi_scheduler::ItsiScheduler::resume (5 samples, 0.07%)</title><rect x="98.9032%" y="533" width="0.0731%" height="15" fill="rgb(230,90,22)" fg:x="6763" fg:w="5"/><text x="99.1532%" y="543.50"></text></g><g><title>libruby.3.4.dylib`rb_protect (3 samples, 0.04%)</title><rect x="98.9324%" y="517" width="0.0439%" height="15" fill="rgb(229,61,13)" fg:x="6765" fg:w="3"/><text x="99.1824%" y="527.50"></text></g><g><title>libruby.3.4.dylib`rb_fiber_resume_kw (2 samples, 0.03%)</title><rect x="98.9471%" y="501" width="0.0292%" height="15" fill="rgb(225,57,24)" fg:x="6766" fg:w="2"/><text x="99.1971%" y="511.50"></text></g><g><title>itsi_scheduler.bundle`itsi_rb_helpers::call_with_gvl::trampoline (7 samples, 0.10%)</title><rect x="98.8886%" y="549" width="0.1024%" height="15" fill="rgb(208,169,48)" fg:x="6762" fg:w="7"/><text x="99.1386%" y="559.50"></text></g><g><title>libdyld.dylib`tlv_get_addr (1 samples, 0.01%)</title><rect x="98.9763%" y="533" width="0.0146%" height="15" fill="rgb(244,218,51)" fg:x="6768" fg:w="1"/><text x="99.2263%" y="543.50"></text></g><g><title>libruby.3.4.dylib`blocking_region_begin (1 samples, 0.01%)</title><rect x="98.9909%" y="549" width="0.0146%" height="15" fill="rgb(214,148,10)" fg:x="6769" fg:w="1"/><text x="99.2409%" y="559.50"></text></g><g><title>libruby.3.4.dylib`rb_ractor_blocking_threads_inc (1 samples, 0.01%)</title><rect x="98.9909%" y="533" width="0.0146%" height="15" fill="rgb(225,174,27)" fg:x="6769" fg:w="1"/><text x="99.2409%" y="543.50"></text></g><g><title>libruby.3.4.dylib`thread_sched_setup_running_threads (2 samples, 0.03%)</title><rect x="99.0056%" y="533" width="0.0292%" height="15" fill="rgb(230,96,26)" fg:x="6770" fg:w="2"/><text x="99.2556%" y="543.50"></text></g><g><title>libsystem_kernel.dylib`__psynch_cvwait (10 samples, 0.15%)</title><rect x="99.0348%" y="501" width="0.1462%" height="15" fill="rgb(232,10,30)" fg:x="6772" fg:w="10"/><text x="99.2848%" y="511.50"></text></g><g><title>libruby.3.4.dylib`thread_sched_wait_running_turn (11 samples, 0.16%)</title><rect x="99.0348%" y="517" width="0.1609%" height="15" fill="rgb(222,8,50)" fg:x="6772" fg:w="11"/><text x="99.2848%" y="527.50"></text></g><g><title>libsystem_pthread.dylib`pthread_testcancel (1 samples, 0.01%)</title><rect x="99.1810%" y="501" width="0.0146%" height="15" fill="rgb(213,81,27)" fg:x="6782" fg:w="1"/><text x="99.4310%" y="511.50"></text></g><g><title>libruby.3.4.dylib`blocking_region_end (14 samples, 0.20%)</title><rect x="99.0056%" y="549" width="0.2047%" height="15" fill="rgb(245,50,10)" fg:x="6770" fg:w="14"/><text x="99.2556%" y="559.50"></text></g><g><title>libruby.3.4.dylib`thread_sched_to_running (12 samples, 0.18%)</title><rect x="99.0348%" y="533" width="0.1755%" height="15" fill="rgb(216,100,18)" fg:x="6772" fg:w="12"/><text x="99.2848%" y="543.50"></text></g><g><title>libsystem_pthread.dylib`pthread_mutex_unlock (1 samples, 0.01%)</title><rect x="99.1957%" y="517" width="0.0146%" height="15" fill="rgb(236,147,54)" fg:x="6783" fg:w="1"/><text x="99.4457%" y="527.50"></text></g><g><title>libruby.3.4.dylib`thread_sched_to_waiting_common0 (11 samples, 0.16%)</title><rect x="99.2103%" y="549" width="0.1609%" height="15" fill="rgb(205,143,26)" fg:x="6784" fg:w="11"/><text x="99.4603%" y="559.50"></text></g><g><title>libruby.3.4.dylib`thread_sched_wakeup_running_thread (11 samples, 0.16%)</title><rect x="99.2103%" y="533" width="0.1609%" height="15" fill="rgb(236,26,9)" fg:x="6784" fg:w="11"/><text x="99.4603%" y="543.50"></text></g><g><title>libsystem_kernel.dylib`__psynch_cvsignal (11 samples, 0.16%)</title><rect x="99.2103%" y="517" width="0.1609%" height="15" fill="rgb(221,165,53)" fg:x="6784" fg:w="11"/><text x="99.4603%" y="527.50"></text></g><g><title>libruby.3.4.dylib`rb_thread_call_with_gvl (34 samples, 0.50%)</title><rect x="98.8886%" y="565" width="0.4972%" height="15" fill="rgb(214,110,17)" fg:x="6762" fg:w="34"/><text x="99.1386%" y="575.50"></text></g><g><title>libsystem_pthread.dylib`_pthread_mutex_firstfit_unlock_slow (1 samples, 0.01%)</title><rect x="99.3712%" y="549" width="0.0146%" height="15" fill="rgb(237,197,12)" fg:x="6795" fg:w="1"/><text x="99.6212%" y="559.50"></text></g><g><title>libsystem_kernel.dylib`__psynch_mutexdrop (1 samples, 0.01%)</title><rect x="99.3712%" y="533" width="0.0146%" height="15" fill="rgb(205,84,17)" fg:x="6795" fg:w="1"/><text x="99.6212%" y="543.50"></text></g><g><title>libsystem_kernel.dylib`sigprocmask (9 samples, 0.13%)</title><rect x="99.3858%" y="565" width="0.1316%" height="15" fill="rgb(237,18,45)" fg:x="6796" fg:w="9"/><text x="99.6358%" y="575.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (1 samples, 0.01%)</title><rect x="99.5174%" y="565" width="0.0146%" height="15" fill="rgb(221,87,14)" fg:x="6805" fg:w="1"/><text x="99.7674%" y="575.50"></text></g><g><title>libsystem_platform.dylib`DYLD-STUB$$sigprocmask (1 samples, 0.01%)</title><rect x="99.5320%" y="565" width="0.0146%" height="15" fill="rgb(238,186,15)" fg:x="6806" fg:w="1"/><text x="99.7820%" y="575.50"></text></g><g><title>libruby.3.4.dylib`nt_start (437 samples, 6.39%)</title><rect x="93.1705%" y="757" width="6.3908%" height="15" fill="rgb(208,115,11)" fg:x="6371" fg:w="437"/><text x="93.4205%" y="767.50">libruby...</text></g><g><title>libruby.3.4.dylib`thread_start_func_2 (437 samples, 6.39%)</title><rect x="93.1705%" y="741" width="6.3908%" height="15" fill="rgb(254,175,0)" fg:x="6371" fg:w="437"/><text x="93.4205%" y="751.50">libruby...</text></g><g><title>libruby.3.4.dylib`rb_fiber_scheduler_set (106 samples, 1.55%)</title><rect x="98.0111%" y="725" width="1.5502%" height="15" fill="rgb(227,24,42)" fg:x="6702" fg:w="106"/><text x="98.2611%" y="735.50"></text></g><g><title>libruby.3.4.dylib`rb_ensure (106 samples, 1.55%)</title><rect x="98.0111%" y="709" width="1.5502%" height="15" fill="rgb(223,211,37)" fg:x="6702" fg:w="106"/><text x="98.2611%" y="719.50"></text></g><g><title>libruby.3.4.dylib`fiber_scheduler_close (106 samples, 1.55%)</title><rect x="98.0111%" y="693" width="1.5502%" height="15" fill="rgb(235,49,27)" fg:x="6702" fg:w="106"/><text x="98.2611%" y="703.50"></text></g><g><title>libruby.3.4.dylib`rb_vm_call0 (106 samples, 1.55%)</title><rect x="98.0111%" y="677" width="1.5502%" height="15" fill="rgb(254,97,51)" fg:x="6702" fg:w="106"/><text x="98.2611%" y="687.50"></text></g><g><title>libruby.3.4.dylib`vm_call0_body (106 samples, 1.55%)</title><rect x="98.0111%" y="661" width="1.5502%" height="15" fill="rgb(249,51,40)" fg:x="6702" fg:w="106"/><text x="98.2611%" y="671.50"></text></g><g><title>itsi_scheduler.bundle`itsi_scheduler::init::anon (106 samples, 1.55%)</title><rect x="98.0111%" y="645" width="1.5502%" height="15" fill="rgb(210,128,45)" fg:x="6702" fg:w="106"/><text x="98.2611%" y="655.50"></text></g><g><title>itsi_scheduler.bundle`magnus::method::RubyMethod0::call_handle_error (106 samples, 1.55%)</title><rect x="98.0111%" y="629" width="1.5502%" height="15" fill="rgb(224,137,50)" fg:x="6702" fg:w="106"/><text x="98.2611%" y="639.50"></text></g><g><title>itsi_scheduler.bundle`itsi_scheduler::itsi_scheduler::ItsiScheduler::run (106 samples, 1.55%)</title><rect x="98.0111%" y="613" width="1.5502%" height="15" fill="rgb(242,15,9)" fg:x="6702" fg:w="106"/><text x="98.2611%" y="623.50"></text></g><g><title>libruby.3.4.dylib`rb_nogvl (106 samples, 1.55%)</title><rect x="98.0111%" y="597" width="1.5502%" height="15" fill="rgb(233,187,41)" fg:x="6702" fg:w="106"/><text x="98.2611%" y="607.50"></text></g><g><title>itsi_scheduler.bundle`itsi_rb_helpers::call_without_gvl::trampoline (106 samples, 1.55%)</title><rect x="98.0111%" y="581" width="1.5502%" height="15" fill="rgb(227,2,29)" fg:x="6702" fg:w="106"/><text x="98.2611%" y="591.50"></text></g><g><title>libsystem_platform.dylib`_platform_memset (1 samples, 0.01%)</title><rect x="99.5467%" y="565" width="0.0146%" height="15" fill="rgb(222,70,3)" fg:x="6807" fg:w="1"/><text x="99.7967%" y="575.50"></text></g><g><title>libruby.3.4.dylib`rb_hrtime_now (1 samples, 0.01%)</title><rect x="99.5613%" y="757" width="0.0146%" height="15" fill="rgb(213,11,42)" fg:x="6808" fg:w="1"/><text x="99.8113%" y="767.50"></text></g><g><title>libruby.3.4.dylib`timer_thread_func (1 samples, 0.01%)</title><rect x="99.5759%" y="757" width="0.0146%" height="15" fill="rgb(225,150,9)" fg:x="6809" fg:w="1"/><text x="99.8259%" y="767.50"></text></g><g><title>libsystem_kernel.dylib`kevent (27 samples, 0.39%)</title><rect x="99.5905%" y="757" width="0.3949%" height="15" fill="rgb(230,162,45)" fg:x="6810" fg:w="27"/><text x="99.8405%" y="767.50"></text></g><g><title>all (6,838 samples, 100%)</title><rect x="0.0000%" y="805" width="100.0000%" height="15" fill="rgb(222,14,52)" fg:x="0" fg:w="6838"/><text x="0.2500%" y="815.50"></text></g><g><title>libsystem_pthread.dylib`thread_start (468 samples, 6.84%)</title><rect x="93.1559%" y="789" width="6.8441%" height="15" fill="rgb(254,198,14)" fg:x="6370" fg:w="468"/><text x="93.4059%" y="799.50">libsystem..</text></g><g><title>libsystem_pthread.dylib`_pthread_start (468 samples, 6.84%)</title><rect x="93.1559%" y="773" width="6.8441%" height="15" fill="rgb(220,217,30)" fg:x="6370" fg:w="468"/><text x="93.4059%" y="783.50">libsystem..</text></g><g><title>libsystem_pthread.dylib`pthread_mutex_unlock (1 samples, 0.01%)</title><rect x="99.9854%" y="757" width="0.0146%" height="15" fill="rgb(215,146,41)" fg:x="6837" fg:w="1"/><text x="100.2354%" y="767.50"></text></g></svg></svg>